Index: app/src/main/java/com/example/geeksasaeng/Home/Delivery/DeliveryFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.geeksasaeng.Home.Delivery\r\n\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.os.Handler\r\nimport android.os.Looper\r\nimport android.os.Message\r\nimport android.util.Log\r\nimport android.view.View\r\nimport android.widget.*\r\nimport androidx.core.content.ContextCompat\r\nimport androidx.fragment.app.FragmentManager\r\nimport androidx.fragment.app.FragmentTransaction\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport androidx.swiperefreshlayout.widget.SwipeRefreshLayout\r\nimport androidx.viewpager2.widget.ViewPager2\r\nimport com.example.geeksasaeng.Home.CreateParty.CreatePartyActivity\r\nimport com.example.geeksasaeng.Home.Delivery.Adapter.BannerVPAdapter\r\nimport com.example.geeksasaeng.Home.Delivery.Adapter.DeliveryRVAdapter\r\nimport com.example.geeksasaeng.Home.Delivery.Adapter.PeopleSpinnerAdapter\r\nimport com.example.geeksasaeng.Home.Delivery.Retrofit.DeliveryBannerView\r\nimport com.example.geeksasaeng.Home.Delivery.Retrofit.DeliveryFilterView\r\nimport com.example.geeksasaeng.Home.Delivery.Retrofit.DeliveryService\r\nimport com.example.geeksasaeng.Home.Delivery.Retrofit.DeliveryView\r\nimport com.example.geeksasaeng.Home.Party.LookPartyFragment\r\nimport com.example.geeksasaeng.MainActivity\r\nimport com.example.geeksasaeng.R\r\nimport com.example.geeksasaeng.Utils.BaseFragment\r\nimport com.example.geeksasaeng.databinding.FragmentDeliveryBinding\r\nimport java.text.SimpleDateFormat\r\nimport java.util.*\r\n\r\nclass DeliveryFragment: BaseFragment<FragmentDeliveryBinding>(FragmentDeliveryBinding::inflate), DeliveryView, DeliveryBannerView, DeliveryFilterView {\r\n    private var deliveryArray = ArrayList<DeliveryPartiesVoList?>()\r\n    private lateinit var deliveryAdapter: DeliveryRVAdapter\r\n    private lateinit var deliveryService: DeliveryService //서비스 객체\r\n    private lateinit var deliveryBannerAdapter : BannerVPAdapter\r\n    private var flag: Int = 1\r\n    private var currentPosition = Int.MAX_VALUE / 2\r\n    private val thread = Thread(PagerRunnable())\r\n    var isLoading = false\r\n    var dormitoryId: Int = 1\r\n    var totalCursor: Int = 0\r\n    var orderTimeCategory: String? = null\r\n    var maxMatching: Int? = null\r\n    var finalPage: Boolean? = false\r\n    var filterCheckFlag: Boolean = false\r\n\r\n    // 테스트\r\n    var value: Int = 0\r\n    var preFirstItem = -1\r\n    var preLastItem = -1\r\n\r\n    //핸들러 설정\r\n    val handler= Handler(Looper.getMainLooper()){\r\n        setPage()\r\n        true\r\n    }\r\n\r\n    override fun initAfterBinding() {\r\n        // 모든 fragment stack 제거\r\n        clearBackStack()\r\n\r\n        deliveryService = DeliveryService() //서비스 객체 생성\r\n        deliveryService.setDeliveryView(this)\r\n        deliveryService.setDeliveryBannerView(this)\r\n\r\n        binding.deliveryProgressCover.visibility = View.GONE\r\n        binding.deliveryBottomView.visibility = View.VISIBLE\r\n\r\n        initBanner() //배너작업\r\n        initSpinner() //필터(spinner) 작업\r\n        initRadioBtn() //필터(radiobutton) 작업\r\n        initTopScrollListener() // 상단 스크롤 작업\r\n        initAdapter()\r\n\r\n        binding.deliveryFloatingBtn.setOnClickListener {\r\n            val intent = Intent(context, CreatePartyActivity::class.java)\r\n            startActivity(intent)\r\n        }\r\n\r\n        if (totalCursor == 0)\r\n            initLoadPosts()\r\n\r\n        initScrollListener()\r\n    }\r\n\r\n    // 리사이클러뷰에 최초로 넣어줄 데이터를 로드하는 경우\r\n    private fun initLoadPosts() {\r\n        totalCursor = 0\r\n        isLoading = false\r\n        finalPage = false\r\n        if (filterCheckFlag) getDeliveryFilterList(dormitoryId, totalCursor, orderTimeCategory, maxMatching)\r\n        else getDeliveryAllList(dormitoryId, totalCursor)\r\n    }\r\n\r\n    // 리사이클러뷰에 더 보여줄 데이터를 로드하는 경우\r\n    // TODO: 로딩 중에 스크롤 막기\r\n    // TODO: 새로고침 했을 때 제일 밑으로 가게 만들기\r\n    private fun initMoreLoadPosts() {\r\n        binding.deliveryProgressCover.visibility = View.VISIBLE\r\n        val handler = Handler()\r\n        handler.postDelayed({\r\n            if (filterCheckFlag) getDeliveryFilterList(dormitoryId, totalCursor, orderTimeCategory, maxMatching)\r\n            else getDeliveryAllList(dormitoryId, totalCursor)\r\n            isLoading = false\r\n            binding.deliveryProgressCover.visibility = View.GONE\r\n        }, 1200)\r\n    }\r\n\r\n    // 상단 스크롤 관련\r\n    private fun initTopScrollListener() {\r\n        binding.deliverySwipe.setOnRefreshListener(SwipeRefreshLayout.OnRefreshListener { /* swipe 시 진행할 동작 */\r\n            deliveryArray.clear()\r\n            initLoadPosts()\r\n            initAdapter()\r\n            binding.deliverySwipe.isRefreshing = false\r\n        })\r\n    }\r\n\r\n    // 하단 스크롤 관련\r\n    // TODO: 하단 스크롤 디자인 관련 수정 필요해보임! (지금은 오류 해결하려고 일단 디자인 이렇게 했어!)\r\n    private fun initScrollListener() {\r\n        binding.deliveryRv.addOnScrollListener(object : RecyclerView.OnScrollListener() {\r\n            override fun onScrolled(recyclerView: RecyclerView, dx: Int, dy: Int) {\r\n                super.onScrolled(recyclerView, dx, dy)\r\n\r\n                val layoutManager = binding.deliveryRv.layoutManager\r\n\r\n//                var firstItem = (layoutManager as LinearLayoutManager).findFirstCompletelyVisibleItemPosition()\r\n//                var lastItem = layoutManager.findLastCompletelyVisibleItemPosition()\r\n\r\n//                if (preFirstItem == -1 && preLastItem == -1) {\r\n//                    preFirstItem = firstItem\r\n//                    preLastItem = lastItem\r\n//\r\n//                    for (i in firstItem..lastItem + 1) {\r\n//                        Log.d(\"SCROLL-DETAIL\", i.toString())\r\n//                        deliveryArray[i]!!.orderTime = (Integer.parseInt(deliveryArray[i]!!.orderTime) - 1).toString()\r\n//                        deliveryAdapter.notifyDataSetChanged()\r\n//                    }\r\n//                } else if (firstItem != preFirstItem && lastItem != preLastItem) {\r\n//                    for (i in firstItem..lastItem + 1) {\r\n//                        Log.d(\"SCROLL-DETAIL\", i.toString())\r\n//                        deliveryArray[i]!!.orderTime = (Integer.parseInt(deliveryArray[i]!!.orderTime) - 1).toString()\r\n//                        deliveryAdapter.notifyDataSetChanged()\r\n//                    }\r\n//\r\n//                    preFirstItem = firstItem\r\n//                    preLastItem = lastItem\r\n//                }\r\n\r\n                // (FirstItemPosition - 1)부터 (LastItemPosition + 1)까지 타이머 run\r\n                // 화면 위로 올라오면 -> Thread 작동 -> 현재 시간 & orderTime 차 계산 -> Timer 동작 -> 1분 지날 때마다 RecyclerView 새로.....??\r\n                // 화면 위에서 사라지면 -> Thread 작동 중지\r\n                // notifyItemChanged()?!!?!??!?!?!??!?\r\n\r\n                if (finalPage == true) {\r\n                    if ((layoutManager as LinearLayoutManager).findLastCompletelyVisibleItemPosition() >= deliveryArray.size - 2)\r\n                        binding.deliveryBottomView.visibility = View.INVISIBLE\r\n                    else binding.deliveryBottomView.visibility = View.VISIBLE\r\n                }\r\n\r\n                if (!isLoading) {\r\n                    // timerHandler.sendEmptyMessage(value); // 앱 시작과 동시에 핸들러에 메세지 전달\r\n\r\n                    if (layoutManager != null && (layoutManager as LinearLayoutManager).findLastCompletelyVisibleItemPosition() == deliveryArray.size - 1) {\r\n                        if (finalPage == false)\r\n                            initMoreLoadPosts()\r\n                        else binding.deliveryBottomView.visibility = View.INVISIBLE\r\n\r\n                        isLoading = true\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    // 배달 목록 가져오기\r\n    private fun getDeliveryAllList(dormitoryId: Int, cursor: Int) {\r\n        val deliveryDataService = DeliveryService()\r\n        deliveryDataService.setDeliveryView(this)\r\n        deliveryDataService.getDeliveryAllList(dormitoryId, cursor)\r\n        totalCursor += 1\r\n    }\r\n\r\n    // Adapter 설정\r\n    private fun initAdapter() {\r\n        deliveryAdapter = DeliveryRVAdapter(deliveryArray)\r\n        binding.deliveryRv.adapter = deliveryAdapter\r\n        binding.deliveryRv.layoutManager = LinearLayoutManager(context, LinearLayoutManager.VERTICAL, false)\r\n\r\n        deliveryAdapter.setOnItemClickListener(object : DeliveryRVAdapter.OnItemClickListener{\r\n            override fun onItemClick(data: DeliveryPartiesVoList, pos : Int) {\r\n                var deliveryItemId = deliveryAdapter.getDeliveryItemId(pos).toString()\r\n\r\n                val transaction: FragmentTransaction = (context as MainActivity).supportFragmentManager.beginTransaction()\r\n\r\n                val bundle = Bundle()\r\n                bundle.putString(\"deliveryItemId\", deliveryItemId)\r\n\r\n                val lookPartyFragment = LookPartyFragment()\r\n                lookPartyFragment.arguments = bundle\r\n\r\n                transaction.addToBackStack(\"lookParty\").replace(R.id.main_frm, lookPartyFragment)\r\n                transaction.commit()\r\n            }\r\n        })\r\n    }\r\n\r\n    override fun deliverySuccess(result: DeliveryResult) {\r\n        Log.d(\"DELIVERY-REPSONSE\", \"SUCCESS\")\r\n\r\n        finalPage = result.finalPage\r\n        val result = result.deliveryPartiesVoList\r\n\r\n        for (i in 0 until result!!.size) {\r\n            var currentMatching = result?.get(i)?.currentMatching\r\n            var foodCategory = result?.get(i)?.foodCategory\r\n            var id = result?.get(i)?.id\r\n            var maxMatching = result?.get(i)?.maxMatching\r\n            var orderTime = result?.get(i)?.orderTime\r\n            var title = result?.get(i)?.title\r\n            var hashTags = result?.get(i)?.hasHashTag\r\n\r\n            deliveryArray.add(\r\n                // DeliveryPartiesVoList(currentMatching, foodCategory, id, maxMatching, calculateTime(orderTime!!), title, hashTags)\r\n                // DeliveryPartiesVoList(currentMatching, foodCategory, id, maxMatching, 10.toString(), title, hashTags)\r\n                DeliveryPartiesVoList(currentMatching, foodCategory, id, maxMatching, orderTime!!, title, hashTags)\r\n            )\r\n\r\n            deliveryAdapter.notifyDataSetChanged()\r\n        }\r\n    }\r\n\r\n    override fun deliveryFailure(code: Int, message: String) {\r\n        Log.d(\"DELIVERY-RESPONSE\", \"DELIVERY-FRAGMENT-FAILURE\")\r\n        totalCursor--\r\n    }\r\n\r\n    private fun initRadioBtn(){\r\n        binding.deliveryTimeRg.setOnCheckedChangeListener { _:RadioGroup, checkedId:Int ->\r\n            binding.deliveryTimeRg.check(checkedId)\r\n            filterCheckFlag = true\r\n\r\n            when(checkedId){\r\n                R.id.delivery_rb1 -> orderTimeCategory = \"BREAKFAST\"\r\n                R.id.delivery_rb2 -> orderTimeCategory = \"LUNCH\"\r\n                R.id.delivery_rb3 -> orderTimeCategory = \"DINNER\"\r\n                R.id.delivery_rb4 -> orderTimeCategory = \"MIDNIGHT_SNACKS\"\r\n                else -> filterCheckFlag = false\r\n            }\r\n        }\r\n    }\r\n\r\n    //배너 작업\r\n    private fun initBanner(){\r\n        deliveryService.getDeliveryBanner() //광고 불러오기\r\n    }\r\n\r\n    //페이지 변경하기\r\n    fun setPage(){\r\n        if(currentPosition == deliveryBannerAdapter.itemCount) //currentPosition이 마지막 페이지 다음페이지면\r\n            currentPosition = 0\r\n        binding.deliveryBannerVp.setCurrentItem(currentPosition, true)\r\n        currentPosition+=1\r\n    }\r\n\r\n    //스피너 관련 작업\r\n    private fun initSpinner(){\r\n        val items = resources.getStringArray(R.array.home_dropdown1) // spinner아이템 배열\r\n        //어댑터\r\n        val spinnerAdapter = PeopleSpinnerAdapter(requireContext(), items)\r\n        binding.deliveryPeopleSpinner.adapter = spinnerAdapter\r\n        binding.deliveryPeopleSpinner.setSelection(items.size-1) //마지막아이템을 스피너 초기값으로 설정해준다.\r\n\r\n        //이벤트 처리\r\n        binding.deliveryPeopleSpinner.onItemSelectedListener = object : AdapterView.OnItemSelectedListener{\r\n            override fun onItemSelected(parent: AdapterView<*>?, view: View?, position: Int, id: Long) {\r\n                //TODO:스피너\r\n                //축소된 스피너화면에 맞게 아이템 색상, 화살표 변경\r\n                val image: ImageView = view!!.findViewById(R.id.arrow_iv)\r\n                image.setImageResource(R.drawable.ic_spinner_up)\r\n                image.visibility = View.VISIBLE\r\n                items[0] = items[position] // items[0]은 현재 선택된 아이템 저장용\r\n                val textName: TextView = view!!.findViewById(R.id.spinner_text)\r\n                textName.text = items[position]\r\n                textName.setTextColor(ContextCompat.getColor(requireContext(),R.color.gray_2))\r\n\r\n                if (position in 1..5)\r\n                    filterCheckFlag = true\r\n\r\n                maxMatching = position * 2\r\n                finalPage = false\r\n            }\r\n            override fun onNothingSelected(parent: AdapterView<*>?) { }\r\n        }\r\n    }\r\n\r\n    override fun onResume() {\r\n        super.onResume()\r\n        flag = 1 // 다른 페이지 갔다가 돌아오면 다시 스크롤 시작\r\n    }\r\n\r\n    override fun onPause() {\r\n        super.onPause()\r\n        flag = 0 // 다른 페이지로 떠나있는 동안 스크롤 동작 필요없음. 멈추기\r\n    }\r\n\r\n    override fun onDestroy() {\r\n        super.onDestroy()\r\n        thread.interrupt() //쓰레드 중지\r\n    }\r\n\r\n    fun clearBackStack() {\r\n        val fragmentManager: FragmentManager = (context as MainActivity).supportFragmentManager\r\n        fragmentManager.popBackStack(null, FragmentManager.POP_BACK_STACK_INCLUSIVE)\r\n    }\r\n\r\n    override fun ondeliveryBannerSuccess(results: Array<DeliveryBannerResult>) {\r\n        deliveryBannerAdapter = BannerVPAdapter(this)\r\n        //더미 img url\r\n        for (i in results){\r\n            Log.d(\"commercial\", i.toString() + \"= i값\")\r\n            deliveryBannerAdapter.addFragment(BannerFragment(i.imgUrl))\r\n            deliveryBannerAdapter.addFragment(BannerFragment(i.imgUrl))\r\n            deliveryBannerAdapter.addFragment(BannerFragment(i.imgUrl))\r\n            deliveryBannerAdapter.addFragment(BannerFragment(i.imgUrl))\r\n            deliveryBannerAdapter.addFragment(BannerFragment(i.imgUrl))\r\n        }\r\n\r\n        binding.deliveryBannerVp.adapter= deliveryBannerAdapter\r\n        binding.deliveryBannerVp.orientation= ViewPager2.ORIENTATION_HORIZONTAL\r\n        binding.deliveryBannerVp.setCurrentItem(currentPosition, false) // 시작위치 지정\r\n\r\n        //뷰페이저 넘기는 쓰레드\r\n        if (thread.state == Thread.State.NEW)\r\n            thread.start() //스레드 시작\r\n\r\n        binding.deliveryBannerVp.apply {\r\n            registerOnPageChangeCallback(object : ViewPager2.OnPageChangeCallback() {\r\n                override fun onPageScrollStateChanged(state: Int) {\r\n                    super.onPageScrollStateChanged(state)\r\n                    when(state){\r\n                        //뷰페이저가 멈춰져있을때\r\n                        //SCROLL_STATE_IDLE 상태는 현재 스크롤을 하지 않는 상태\r\n                        ViewPager2.SCROLL_STATE_IDLE -> {\r\n                            flag = 1\r\n                            currentPosition = binding.deliveryBannerVp.currentItem+1\r\n                        }\r\n                        //뷰페이저 움직이는 중\r\n                        ViewPager2.SCROLL_STATE_DRAGGING -> flag = 0\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    //3초마다 페이지 넘기는 기능\r\n    inner class PagerRunnable:Runnable{\r\n        override fun run() {\r\n            while(true){\r\n                try {\r\n                    Thread.sleep(3000)\r\n                    if(this@DeliveryFragment.flag==1) {\r\n                        handler.sendEmptyMessage(0)\r\n                    }\r\n                } catch (e : InterruptedException){\r\n                    Log.d(\"interrupt\", \"interrupt 발생\")\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    override fun ondeliveryBannerFailure(message: String) {\r\n        Log.d(\"commercial\", \"광고 불러오기 실패~!\")\r\n    }\r\n\r\n    // 배달 목록 필터 적용 후 가져오기\r\n    private fun getDeliveryFilterList(dormitoryId: Int, cursor: Int, orderTimeCategory: String?, maxMatching: Int?) {\r\n        val deliveryDataService = DeliveryService()\r\n        deliveryDataService.setDeliveryFilterView(this)\r\n        deliveryDataService.getDeliveryFilterList(dormitoryId, cursor, orderTimeCategory, maxMatching)\r\n        totalCursor += 1\r\n    }\r\n\r\n    override fun deliveryFilterSuccess(result: DeliveryResult) {\r\n        Log.d(\"DELIVERY-FILTER\", \"SUCCESS\")\r\n\r\n        finalPage = result.finalPage\r\n\r\n        val result = result.deliveryPartiesVoList\r\n\r\n        for (i in 0 until result!!.size) {\r\n            var currentMatching = result?.get(i)?.currentMatching\r\n            var foodCategory = result?.get(i)?.foodCategory\r\n            var id = result?.get(i)?.id\r\n            var maxMatching = result?.get(i)?.maxMatching\r\n            var orderTime = result?.get(i)?.orderTime\r\n            var title = result?.get(i)?.title\r\n            var hashTags = result?.get(i)?.hasHashTag\r\n\r\n            deliveryArray.add(\r\n                DeliveryPartiesVoList(currentMatching, foodCategory, id, maxMatching, orderTime!!, title, hashTags)\r\n            )\r\n\r\n            deliveryAdapter.notifyItemChanged(deliveryArray.size - 1)\r\n        }\r\n\r\n        if (finalPage == true) {\r\n            Log.d(\"DELIVERY-FILTER\", \"getDeliveryFilterList-DeliveryArray-Size = ${deliveryArray.size}\")\r\n            if (deliveryArray.size >= 2) {\r\n                if ((binding.deliveryRv.layoutManager as LinearLayoutManager).findLastCompletelyVisibleItemPosition() >= deliveryArray.size - 2)\r\n                    binding.deliveryBottomView.visibility = View.INVISIBLE\r\n                else binding.deliveryBottomView.visibility = View.VISIBLE\r\n            } else binding.deliveryBottomView.visibility = View.VISIBLE\r\n        }\r\n    }\r\n\r\n    override fun deliveryFilterFailure(code: Int, message: String) {\r\n        Log.d(\"DELIVERY-RESPONSE\", \"DELIVERY-FILTER-FRAGMENT-FAILURE\")\r\n        totalCursor--\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/geeksasaeng/Home/Delivery/DeliveryFragment.kt b/app/src/main/java/com/example/geeksasaeng/Home/Delivery/DeliveryFragment.kt
--- a/app/src/main/java/com/example/geeksasaeng/Home/Delivery/DeliveryFragment.kt	(revision 9a6d2fb73b6b97446c2444eee7761ce69ba150fe)
+++ b/app/src/main/java/com/example/geeksasaeng/Home/Delivery/DeliveryFragment.kt	(date 1659344535111)
@@ -31,11 +31,11 @@
 import java.text.SimpleDateFormat
 import java.util.*
 
-class DeliveryFragment: BaseFragment<FragmentDeliveryBinding>(FragmentDeliveryBinding::inflate), DeliveryView, DeliveryBannerView, DeliveryFilterView {
+class DeliveryFragment: BaseFragment<FragmentDeliveryBinding>(FragmentDeliveryBinding::inflate), DeliveryView, DeliveryFilterView, DeliveryBannerView {
     private var deliveryArray = ArrayList<DeliveryPartiesVoList?>()
     private lateinit var deliveryAdapter: DeliveryRVAdapter
     private lateinit var deliveryService: DeliveryService //서비스 객체
-    private lateinit var deliveryBannerAdapter : BannerVPAdapter
+    private lateinit var deliveryBannerAdapter: BannerVPAdapter
     private var flag: Int = 1
     private var currentPosition = Int.MAX_VALUE / 2
     private val thread = Thread(PagerRunnable())
@@ -53,7 +53,7 @@
     var preLastItem = -1
 
     //핸들러 설정
-    val handler= Handler(Looper.getMainLooper()){
+    val handler = Handler(Looper.getMainLooper()) {
         setPage()
         true
     }
@@ -91,7 +91,12 @@
         totalCursor = 0
         isLoading = false
         finalPage = false
-        if (filterCheckFlag) getDeliveryFilterList(dormitoryId, totalCursor, orderTimeCategory, maxMatching)
+        if (filterCheckFlag) getDeliveryFilterList(
+            dormitoryId,
+            totalCursor,
+            orderTimeCategory,
+            maxMatching
+        )
         else getDeliveryAllList(dormitoryId, totalCursor)
     }
 
@@ -102,7 +107,12 @@
         binding.deliveryProgressCover.visibility = View.VISIBLE
         val handler = Handler()
         handler.postDelayed({
-            if (filterCheckFlag) getDeliveryFilterList(dormitoryId, totalCursor, orderTimeCategory, maxMatching)
+            if (filterCheckFlag) getDeliveryFilterList(
+                dormitoryId,
+                totalCursor,
+                orderTimeCategory,
+                maxMatching
+            )
             else getDeliveryAllList(dormitoryId, totalCursor)
             isLoading = false
             binding.deliveryProgressCover.visibility = View.GONE
@@ -189,13 +199,15 @@
     private fun initAdapter() {
         deliveryAdapter = DeliveryRVAdapter(deliveryArray)
         binding.deliveryRv.adapter = deliveryAdapter
-        binding.deliveryRv.layoutManager = LinearLayoutManager(context, LinearLayoutManager.VERTICAL, false)
+        binding.deliveryRv.layoutManager =
+            LinearLayoutManager(context, LinearLayoutManager.VERTICAL, false)
 
-        deliveryAdapter.setOnItemClickListener(object : DeliveryRVAdapter.OnItemClickListener{
-            override fun onItemClick(data: DeliveryPartiesVoList, pos : Int) {
+        deliveryAdapter.setOnItemClickListener(object : DeliveryRVAdapter.OnItemClickListener {
+            override fun onItemClick(data: DeliveryPartiesVoList, pos: Int) {
                 var deliveryItemId = deliveryAdapter.getDeliveryItemId(pos).toString()
 
-                val transaction: FragmentTransaction = (context as MainActivity).supportFragmentManager.beginTransaction()
+                val transaction: FragmentTransaction =
+                    (context as MainActivity).supportFragmentManager.beginTransaction()
 
                 val bundle = Bundle()
                 bundle.putString("deliveryItemId", deliveryItemId)
@@ -227,7 +239,15 @@
             deliveryArray.add(
                 // DeliveryPartiesVoList(currentMatching, foodCategory, id, maxMatching, calculateTime(orderTime!!), title, hashTags)
                 // DeliveryPartiesVoList(currentMatching, foodCategory, id, maxMatching, 10.toString(), title, hashTags)
-                DeliveryPartiesVoList(currentMatching, foodCategory, id, maxMatching, orderTime!!, title, hashTags)
+                DeliveryPartiesVoList(
+                    currentMatching,
+                    foodCategory,
+                    id,
+                    maxMatching,
+                    orderTime!!,
+                    title,
+                    hashTags
+                )
             )
 
             deliveryAdapter.notifyDataSetChanged()
@@ -239,12 +259,12 @@
         totalCursor--
     }
 
-    private fun initRadioBtn(){
-        binding.deliveryTimeRg.setOnCheckedChangeListener { _:RadioGroup, checkedId:Int ->
+    private fun initRadioBtn() { //라디오 버튼
+        binding.deliveryTimeRg.setOnCheckedChangeListener { _: RadioGroup, checkedId: Int ->
             binding.deliveryTimeRg.check(checkedId)
             filterCheckFlag = true
 
-            when(checkedId){
+            when (checkedId) {
                 R.id.delivery_rb1 -> orderTimeCategory = "BREAKFAST"
                 R.id.delivery_rb2 -> orderTimeCategory = "LUNCH"
                 R.id.delivery_rb3 -> orderTimeCategory = "DINNER"
@@ -255,47 +275,54 @@
     }
 
     //배너 작업
-    private fun initBanner(){
+    private fun initBanner() {
         deliveryService.getDeliveryBanner() //광고 불러오기
     }
 
     //페이지 변경하기
-    fun setPage(){
-        if(currentPosition == deliveryBannerAdapter.itemCount) //currentPosition이 마지막 페이지 다음페이지면
+    fun setPage() {
+        if (currentPosition == deliveryBannerAdapter.itemCount) //currentPosition이 마지막 페이지 다음페이지면
             currentPosition = 0
         binding.deliveryBannerVp.setCurrentItem(currentPosition, true)
-        currentPosition+=1
+        currentPosition += 1
     }
 
     //스피너 관련 작업
-    private fun initSpinner(){
+    private fun initSpinner() {
         val items = resources.getStringArray(R.array.home_dropdown1) // spinner아이템 배열
         //어댑터
         val spinnerAdapter = PeopleSpinnerAdapter(requireContext(), items)
         binding.deliveryPeopleSpinner.adapter = spinnerAdapter
-        binding.deliveryPeopleSpinner.setSelection(items.size-1) //마지막아이템을 스피너 초기값으로 설정해준다.
+        binding.deliveryPeopleSpinner.setSelection(items.size - 1) //마지막아이템을 스피너 초기값으로 설정해준다.
 
         //이벤트 처리
-        binding.deliveryPeopleSpinner.onItemSelectedListener = object : AdapterView.OnItemSelectedListener{
-            override fun onItemSelected(parent: AdapterView<*>?, view: View?, position: Int, id: Long) {
-                //TODO:스피너
-                //축소된 스피너화면에 맞게 아이템 색상, 화살표 변경
-                val image: ImageView = view!!.findViewById(R.id.arrow_iv)
-                image.setImageResource(R.drawable.ic_spinner_up)
-                image.visibility = View.VISIBLE
-                items[0] = items[position] // items[0]은 현재 선택된 아이템 저장용
-                val textName: TextView = view!!.findViewById(R.id.spinner_text)
-                textName.text = items[position]
-                textName.setTextColor(ContextCompat.getColor(requireContext(),R.color.gray_2))
+        binding.deliveryPeopleSpinner.onItemSelectedListener =
+            object : AdapterView.OnItemSelectedListener {
+                override fun onItemSelected(
+                    parent: AdapterView<*>?,
+                    view: View?,
+                    position: Int,
+                    id: Long
+                ) {
+                    //TODO:스피너
+                    //축소된 스피너화면에 맞게 아이템 색상, 화살표 변경
+                    val image: ImageView = view!!.findViewById(R.id.arrow_iv)
+                    image.setImageResource(R.drawable.ic_spinner_up)
+                    image.visibility = View.VISIBLE
+                    items[0] = items[position] // items[0]은 현재 선택된 아이템 저장용
+                    val textName: TextView = view!!.findViewById(R.id.spinner_text)
+                    textName.text = items[position]
+                    textName.setTextColor(ContextCompat.getColor(requireContext(), R.color.gray_2))
 
-                if (position in 1..5)
-                    filterCheckFlag = true
+                    if (position in 1..5)
+                        filterCheckFlag = true
 
-                maxMatching = position * 2
-                finalPage = false
-            }
-            override fun onNothingSelected(parent: AdapterView<*>?) { }
-        }
+                    maxMatching = position * 2
+                    finalPage = false
+                }
+
+                override fun onNothingSelected(parent: AdapterView<*>?) {}
+            }
     }
 
     override fun onResume() {
@@ -318,20 +345,19 @@
         fragmentManager.popBackStack(null, FragmentManager.POP_BACK_STACK_INCLUSIVE)
     }
 
+    //배너 작업
     override fun ondeliveryBannerSuccess(results: Array<DeliveryBannerResult>) {
         deliveryBannerAdapter = BannerVPAdapter(this)
+
         //더미 img url
-        for (i in results){
-            Log.d("commercial", i.toString() + "= i값")
-            deliveryBannerAdapter.addFragment(BannerFragment(i.imgUrl))
-            deliveryBannerAdapter.addFragment(BannerFragment(i.imgUrl))
-            deliveryBannerAdapter.addFragment(BannerFragment(i.imgUrl))
-            deliveryBannerAdapter.addFragment(BannerFragment(i.imgUrl))
-            deliveryBannerAdapter.addFragment(BannerFragment(i.imgUrl))
+        for (j in 1..5) { //fragment already added 고치기 위함
+            for (i in results) {
+                deliveryBannerAdapter.addFragment(i.imgUrl)
+            }
         }
 
-        binding.deliveryBannerVp.adapter= deliveryBannerAdapter
-        binding.deliveryBannerVp.orientation= ViewPager2.ORIENTATION_HORIZONTAL
+        binding.deliveryBannerVp.adapter = deliveryBannerAdapter
+        binding.deliveryBannerVp.orientation = ViewPager2.ORIENTATION_HORIZONTAL
         binding.deliveryBannerVp.setCurrentItem(currentPosition, false) // 시작위치 지정
 
         //뷰페이저 넘기는 쓰레드
@@ -342,12 +368,12 @@
             registerOnPageChangeCallback(object : ViewPager2.OnPageChangeCallback() {
                 override fun onPageScrollStateChanged(state: Int) {
                     super.onPageScrollStateChanged(state)
-                    when(state){
+                    when (state) {
                         //뷰페이저가 멈춰져있을때
                         //SCROLL_STATE_IDLE 상태는 현재 스크롤을 하지 않는 상태
                         ViewPager2.SCROLL_STATE_IDLE -> {
                             flag = 1
-                            currentPosition = binding.deliveryBannerVp.currentItem+1
+                            currentPosition = binding.deliveryBannerVp.currentItem + 1
                         }
                         //뷰페이저 움직이는 중
                         ViewPager2.SCROLL_STATE_DRAGGING -> flag = 0
@@ -358,15 +384,15 @@
     }
 
     //3초마다 페이지 넘기는 기능
-    inner class PagerRunnable:Runnable{
+    inner class PagerRunnable : Runnable {
         override fun run() {
-            while(true){
+            while (true) {
                 try {
                     Thread.sleep(3000)
-                    if(this@DeliveryFragment.flag==1) {
+                    if (this@DeliveryFragment.flag == 1) {
                         handler.sendEmptyMessage(0)
                     }
-                } catch (e : InterruptedException){
+                } catch (e: InterruptedException) {
                     Log.d("interrupt", "interrupt 발생")
                 }
             }
@@ -378,10 +404,20 @@
     }
 
     // 배달 목록 필터 적용 후 가져오기
-    private fun getDeliveryFilterList(dormitoryId: Int, cursor: Int, orderTimeCategory: String?, maxMatching: Int?) {
+    private fun getDeliveryFilterList(
+        dormitoryId: Int,
+        cursor: Int,
+        orderTimeCategory: String?,
+        maxMatching: Int?
+    ) {
         val deliveryDataService = DeliveryService()
         deliveryDataService.setDeliveryFilterView(this)
-        deliveryDataService.getDeliveryFilterList(dormitoryId, cursor, orderTimeCategory, maxMatching)
+        deliveryDataService.getDeliveryFilterList(
+            dormitoryId,
+            cursor,
+            orderTimeCategory,
+            maxMatching
+        )
         totalCursor += 1
     }
 
@@ -402,14 +438,25 @@
             var hashTags = result?.get(i)?.hasHashTag
 
             deliveryArray.add(
-                DeliveryPartiesVoList(currentMatching, foodCategory, id, maxMatching, orderTime!!, title, hashTags)
+                DeliveryPartiesVoList(
+                    currentMatching,
+                    foodCategory,
+                    id,
+                    maxMatching,
+                    orderTime!!,
+                    title,
+                    hashTags
+                )
             )
 
             deliveryAdapter.notifyItemChanged(deliveryArray.size - 1)
         }
 
         if (finalPage == true) {
-            Log.d("DELIVERY-FILTER", "getDeliveryFilterList-DeliveryArray-Size = ${deliveryArray.size}")
+            Log.d(
+                "DELIVERY-FILTER",
+                "getDeliveryFilterList-DeliveryArray-Size = ${deliveryArray.size}"
+            )
             if (deliveryArray.size >= 2) {
                 if ((binding.deliveryRv.layoutManager as LinearLayoutManager).findLastCompletelyVisibleItemPosition() >= deliveryArray.size - 2)
                     binding.deliveryBottomView.visibility = View.INVISIBLE
Index: app/src/main/java/com/example/geeksasaeng/Home/Search/SearchActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.geeksasaeng.Home.Search\r\n\r\nimport android.os.Bundle\r\nimport android.text.Editable\r\nimport android.text.TextWatcher\r\nimport android.view.View\r\nimport androidx.fragment.app.FragmentManager\r\nimport androidx.fragment.app.FragmentTransaction\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport com.example.geeksasaeng.Home.Delivery.Adapter.DeliveryRVAdapter\r\nimport com.example.geeksasaeng.Home.Party.LookPartyFragment\r\nimport com.example.geeksasaeng.MainActivity\r\nimport com.example.geeksasaeng.R\r\nimport com.example.geeksasaeng.Utils.BaseActivity\r\nimport com.example.geeksasaeng.databinding.ActivitySearchBinding\r\n\r\nclass SearchActivity: BaseActivity<ActivitySearchBinding>(ActivitySearchBinding::inflate) {\r\n\r\n    override fun initAfterBinding() {\r\n        initClickListener()\r\n\r\n        supportFragmentManager.beginTransaction().replace(R.id.search_frm, SearchBasicFragment()).commit()\r\n\r\n        binding.searchEt.addTextChangedListener(object : TextWatcher {\r\n            override fun beforeTextChanged(s: CharSequence?, start: Int, count: Int, after: Int) {}\r\n            override fun onTextChanged(s: CharSequence?, start: Int, before: Int, count: Int) {}\r\n            override fun afterTextChanged(s: Editable?) {\r\n                if (binding.searchEt.length() == 0) {\r\n                    supportFragmentManager.beginTransaction()\r\n                        .replace(R.id.search_frm, SearchBasicFragment())\r\n                        .addToBackStack(\"SearchBasic\").commit()\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    fun initClickListener() {\r\n        binding.searchBtn.setOnClickListener {\r\n            supportFragmentManager.popBackStack(\"SearchDetail\", FragmentManager.POP_BACK_STACK_INCLUSIVE)\r\n\r\n            var keyword = binding.searchEt.text.toString()\r\n\r\n            val transaction: FragmentTransaction = supportFragmentManager.beginTransaction()\r\n\r\n            val bundle = Bundle()\r\n            bundle.putString(\"keyword\", keyword)\r\n\r\n            val searchDetailFragment = SearchDetailFragment()\r\n            searchDetailFragment.arguments = bundle\r\n\r\n            transaction.addToBackStack(\"SearchDetail\").replace(R.id.search_frm, searchDetailFragment)\r\n            transaction.commit()\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/geeksasaeng/Home/Search/SearchActivity.kt b/app/src/main/java/com/example/geeksasaeng/Home/Search/SearchActivity.kt
--- a/app/src/main/java/com/example/geeksasaeng/Home/Search/SearchActivity.kt	(revision 9a6d2fb73b6b97446c2444eee7761ce69ba150fe)
+++ b/app/src/main/java/com/example/geeksasaeng/Home/Search/SearchActivity.kt	(date 1659341991375)
@@ -3,6 +3,7 @@
 import android.os.Bundle
 import android.text.Editable
 import android.text.TextWatcher
+import android.view.KeyEvent
 import android.view.View
 import androidx.fragment.app.FragmentManager
 import androidx.fragment.app.FragmentTransaction
@@ -51,5 +52,15 @@
             transaction.addToBackStack("SearchDetail").replace(R.id.search_frm, searchDetailFragment)
             transaction.commit()
         }
+
+        //엔터치면 검색되게 하는 기능
+        binding.searchEt.setOnKeyListener { _, keyCode, event ->
+            if ((event.action == KeyEvent.ACTION_DOWN) && (keyCode == KeyEvent.KEYCODE_ENTER)){
+                binding.searchBtn.performClick()
+                true
+            }else{
+                false
+            }
+        }
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/geeksasaeng/Home/Delivery/Adapter/DeliveryRVAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.geeksasaeng.Home.Delivery.Adapter\r\n\r\nimport android.graphics.Color\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.ImageView\r\nimport android.widget.ProgressBar\r\nimport android.widget.TextView\r\nimport androidx.core.content.ContextCompat\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.example.geeksasaeng.Home.Delivery.DeliveryPartiesVoList\r\nimport com.example.geeksasaeng.Home.Delivery.DeliveryResult\r\nimport com.example.geeksasaeng.R\r\nimport java.text.SimpleDateFormat\r\nimport java.util.*\r\nimport kotlin.collections.ArrayList\r\n\r\nclass DeliveryRVAdapter(private var deliveryList: ArrayList<DeliveryPartiesVoList?>) : RecyclerView.Adapter<RecyclerView.ViewHolder>() {\r\n\r\n    private lateinit var mItemClickListener : OnItemClickListener\r\n\r\n    var nowTime: Long = 0\r\n    var date: Date? = null\r\n    var dateFormat: SimpleDateFormat = SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\")\r\n\r\n    private val VIEW_TYPE_ITEM = 0\r\n\r\n    // 클릭 리스너 구현 위한 인터페이스\r\n    interface OnItemClickListener{\r\n        fun onItemClick(data: DeliveryPartiesVoList, pos : Int)\r\n    }\r\n\r\n    fun setOnItemClickListener(listener : OnItemClickListener) {\r\n        mItemClickListener = listener\r\n    }\r\n\r\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): RecyclerView.ViewHolder {\r\n        val view = LayoutInflater.from(parent.context).inflate(R.layout.item_delivery, parent, false)\r\n        return ItemViewHolder(view)\r\n    }\r\n\r\n    override fun onBindViewHolder(viewHolder: RecyclerView.ViewHolder, position: Int) {\r\n        populateItemRows(viewHolder as ItemViewHolder, position)\r\n\r\n        viewHolder.itemView.setOnClickListener {\r\n            // val intent = Intent(holder.itemView?.context, PostSelectImgActivity::class.java)\r\n            // intent.putExtra(\"position\", position)\r\n            mItemClickListener.onItemClick(deliveryList[position]!!, position)\r\n            Log.d(\"ItemClickCheck\", \"position = $position\")\r\n\r\n            // imgList[position].img!!\r\n            // ContextCompat.startActivity(holder.itemView.context, intent, null)\r\n        }\r\n    }\r\n\r\n    override fun getItemCount(): Int {\r\n        return if (deliveryList == null) 0 else deliveryList!!.size\r\n    }\r\n\r\n    override fun getItemViewType(position: Int): Int {\r\n        return VIEW_TYPE_ITEM\r\n    }\r\n\r\n    private inner class ItemViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {\r\n        // 메인 파티 리스트 부분\r\n        // Not Use = chief, content, currentMatching, foodCategory, id, location\r\n        // Use = currentMatching, maxMatching, orderTime, title\r\n\r\n        var deliveryItemMemberIc : ImageView = itemView.findViewById(R.id.delivery_item_member_ic)\r\n        var deliveryItemMemberNumber :TextView = itemView.findViewById(R.id.delivery_item_member_number)\r\n        var deliveryItemTime : TextView = itemView.findViewById(R.id.delivery_item_time)\r\n        var deliveryItemTitle : TextView = itemView.findViewById(R.id.delivery_item_title)\r\n        var deliveryItemCategory : TextView = itemView.findViewById(R.id.delivery_item_category)\r\n        var deliveryItemHashTag : TextView = itemView.findViewById(R.id.delivery_item_hashTag)\r\n    }\r\n\r\n    private fun populateItemRows(viewHolder: ItemViewHolder, position: Int) {\r\n        // 메인 파티 리스트 부분\r\n        // Use = currentMatching, maxMatching, orderTime, title\r\n\r\n        val item = deliveryList!![position]\r\n\r\n        // (최대 멤버 - 현재 매칭 멤버 = 1)인 상황에는 파란색 아이콘, 아닐 경우 회색 아이콘을 구분하기 위한 부분\r\n        if (item!!.maxMatching!! - item!!.currentMatching!! == 1) {\r\n            viewHolder.deliveryItemMemberIc.setImageResource(R.drawable.ic_member_blue)\r\n        } else {\r\n            viewHolder.deliveryItemMemberIc.setImageResource(R.drawable.ic_member_gray)\r\n        }\r\n\r\n        viewHolder.deliveryItemMemberNumber.setText(item!!.currentMatching.toString() + \"/\" + item!!.maxMatching)\r\n        viewHolder.deliveryItemTime.setText(calculateTime(item.orderTime.toString()))\r\n        viewHolder.deliveryItemTitle.setText(item!!.title)\r\n        viewHolder.deliveryItemCategory.setText(item!!.foodCategory)\r\n\r\n        if (item!!.hasHashTag!!) {\r\n            viewHolder.deliveryItemHashTag.setTextColor(Color.parseColor(\"#636363\"))\r\n        } else if (!item!!.hasHashTag!!) {\r\n            viewHolder.deliveryItemHashTag.setTextColor(Color.parseColor(\"#EFEFEF\"))\r\n        }\r\n    }\r\n\r\n    fun getDeliveryItemId(position: Int): Int? {\r\n        return deliveryList[position]?.id\r\n    }\r\n\r\n    // 오늘 날짜 계산\r\n    private fun calculateToday(): String {\r\n        nowTime = System.currentTimeMillis();\r\n        date = Date(nowTime)\r\n        return dateFormat.format(date)\r\n    }\r\n\r\n    // 남은 시간 계산\r\n    // TODO: 흠... 실시간으로 해야하는데 흠...\r\n    private fun calculateTime(orderTime: String): String {\r\n        var orderYear = Integer.parseInt(orderTime.substring(0, 4))\r\n        var orderMonth = Integer.parseInt(orderTime.substring(5, 7))\r\n        var orderDay = Integer.parseInt(orderTime.substring(8, 10))\r\n        var orderHours = Integer.parseInt(orderTime.substring(11, 13))\r\n        var orderMinutes = Integer.parseInt(orderTime.substring(14, 16))\r\n\r\n        var currentTime = calculateToday()\r\n        var todayYear = Integer.parseInt(currentTime.substring(0, 4))\r\n        var todayMonth = Integer.parseInt(currentTime.substring(5, 7))\r\n        var todayDay = Integer.parseInt(currentTime.substring(8, 10))\r\n        var todayHours = Integer.parseInt(currentTime.substring(11, 13))\r\n        var todayMinutes = Integer.parseInt(currentTime.substring(14, 16))\r\n\r\n        var today = Calendar.getInstance().apply {\r\n            set(Calendar.YEAR, todayYear)\r\n            set(Calendar.MONTH, todayMonth)\r\n            set(Calendar.DAY_OF_MONTH, todayDay)\r\n        }.timeInMillis + (60000 * 60 * todayHours) + (60000 * todayMinutes)\r\n\r\n        var order = Calendar.getInstance().apply {\r\n            set(Calendar.YEAR, orderYear)\r\n            set(Calendar.MONTH, orderMonth)\r\n            set(Calendar.DAY_OF_MONTH, orderDay)\r\n        }.timeInMillis + (60000 * 60 * orderHours) + (60000 * orderMinutes)\r\n\r\n        var remainTime = order - today\r\n\r\n        var day = remainTime / (24*60*60*1000)\r\n        var sec = (remainTime % (24*60*60*1000)) / 1000\r\n        var hour = sec / 3600\r\n        var minute = (sec % 3600) / 60\r\n\r\n        return if (day > 0)\r\n            \"${day}일 ${hour}시간 ${minute}분 남았어요\"\r\n        else if (hour > 0)\r\n            \"${hour}시간 ${minute}분 남았어요\"\r\n        else\r\n            \"${minute}분 남았어요\"\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/geeksasaeng/Home/Delivery/Adapter/DeliveryRVAdapter.kt b/app/src/main/java/com/example/geeksasaeng/Home/Delivery/Adapter/DeliveryRVAdapter.kt
--- a/app/src/main/java/com/example/geeksasaeng/Home/Delivery/Adapter/DeliveryRVAdapter.kt	(revision 9a6d2fb73b6b97446c2444eee7761ce69ba150fe)
+++ b/app/src/main/java/com/example/geeksasaeng/Home/Delivery/Adapter/DeliveryRVAdapter.kt	(date 1659343806913)
@@ -115,6 +115,13 @@
     // 남은 시간 계산
     // TODO: 흠... 실시간으로 해야하는데 흠...
     private fun calculateTime(orderTime: String): String {
+        Log.d("DELIVERY-ADAPTER", orderTime)
+        Log.d("DELIVERY-ADAPTER", "0-4 " + orderTime.substring(0, 4))
+        Log.d("DELIVERY-ADAPTER", "5-7 " + orderTime.substring(5, 7))
+        Log.d("DELIVERY-ADAPTER", "8-10 " + orderTime.substring(8, 10))
+        Log.d("DELIVERY-ADAPTER", "11-13 " + orderTime.substring(11, 13))
+        Log.d("DELIVERY-ADAPTER", "14-16 " + orderTime.substring(14, 16))
+
         var orderYear = Integer.parseInt(orderTime.substring(0, 4))
         var orderMonth = Integer.parseInt(orderTime.substring(5, 7))
         var orderDay = Integer.parseInt(orderTime.substring(8, 10))
Index: app/src/main/java/com/example/geeksasaeng/Home/Party/UpdateParty/PartyUpdateFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.geeksasaeng.Home.Party.UpdateParty\r\n\r\nimport android.graphics.Color\r\nimport android.location.Geocoder\r\nimport android.os.Bundle\r\nimport android.text.Editable\r\nimport android.text.TextWatcher\r\nimport android.util.Log\r\nimport androidx.core.content.ContentProviderCompat.requireContext\r\nimport androidx.core.content.ContextCompat\r\nimport androidx.core.widget.addTextChangedListener\r\nimport com.example.geeksasaeng.Home.Party.UpdateParty.Retrofit.UpdatePartyRequest\r\nimport com.example.geeksasaeng.Home.Party.UpdateParty.Retrofit.UpdatePartyService\r\nimport com.example.geeksasaeng.Home.Party.UpdateParty.Retrofit.UpdatePartyView\r\nimport com.example.geeksasaeng.R\r\nimport com.example.geeksasaeng.Utils.BaseFragment\r\nimport com.example.geeksasaeng.databinding.FragmentDeliveryPartyUpdateBinding\r\nimport net.daum.mf.map.api.MapPOIItem\r\nimport net.daum.mf.map.api.MapPoint\r\nimport net.daum.mf.map.api.MapView\r\nimport java.text.SimpleDateFormat\r\nimport java.util.*\r\n\r\n\r\nclass PartyUpdateFragment: BaseFragment<FragmentDeliveryPartyUpdateBinding>(FragmentDeliveryPartyUpdateBinding::inflate), UpdatePartyView,\r\n    DialogDtUpdate.DialogDtUpdateClickListener, DialogNumUpdate.DialogNumUpdateClickListener, DialogCategoryUpdate.DialogCategoryUpdateClickListener,\r\n    DialogLinkUpdate.DialogLinkUpdateClickListener, DialogLocationUpdate.DialogLocationUpdateClickListener{\r\n\r\n    lateinit var mapView : MapView\r\n    lateinit var mapPoint: MapPoint\r\n\r\n    private lateinit var updatePartyService: UpdatePartyService\r\n\r\n    var authorStatus: Boolean? = null\r\n    var chief: String? = null\r\n    var chiefProfileImgUrl: String? = null\r\n    var content: String? = null\r\n    var currentMatching: Int = 0\r\n    var dormitory: Int = 0\r\n    var foodCategory: String? = null\r\n    var hashTag: Boolean? = null\r\n    var partyId: Int = 0\r\n    var latitude: Double = 0.0\r\n    var longitude: Double = 0.0\r\n    var matchingStatus: String? = null\r\n    var maxMatching: Int = 0\r\n    var orderTime: String? = null\r\n    var storeUrl: String? = null\r\n    var title: String? = null\r\n    var updatedAt: String? = null\r\n\r\n    override fun onStart() {\r\n        super.onStart()\r\n        updatePartyService = UpdatePartyService() // 서비스 객체 생성\r\n        updatePartyService.setUpdatePartyView(this)\r\n        binding.deliveryPartyUpdateLocation2Tv.isSelected = true // 애니메이션 효과 주기 위해서\r\n    }\r\n\r\n    override fun initAfterBinding() {\r\n        initGetData()\r\n        initTextWatcher()\r\n        initClickListener()\r\n    }\r\n\r\n    private fun initGetData(){ // 파티 보기에서 파티 수정하기로 넘어오면서 데이터 받아오기\r\n        authorStatus = requireArguments().getBoolean(\"authorStatus\")\r\n        chief = requireArguments().getString(\"chief\")\r\n        chiefProfileImgUrl = requireArguments().getString(\"chiefProfileImgUrl\")\r\n        content = requireArguments().getString(\"content\")\r\n        currentMatching = requireArguments().getInt(\"currentMatching\")\r\n        dormitory = requireArguments().getInt(\"dormitory\")\r\n        foodCategory = requireArguments().getString(\"foodCategory\") // 카테고리\r\n        hashTag = requireArguments().getBoolean(\"hashTag\")\r\n        partyId = requireArguments().getInt(\"partyId\")\r\n        latitude = requireArguments().getDouble(\"latitude\", latitude)\r\n        longitude = requireArguments().getDouble(\"longitude\", longitude)\r\n        matchingStatus = requireArguments().getString(\"matchingStatus\")\r\n        maxMatching = requireArguments().getInt(\"maxMatching\") // 최대매칭인원\r\n        orderTime = requireArguments().getString(\"orderTime\") // 주문 예정시간\r\n        storeUrl = requireArguments().getString(\"storeUrl\")\r\n        title = requireArguments().getString(\"title\")\r\n        updatedAt = requireArguments().getString(\"updatedAt\")\r\n        Log.d(\"partyUpdate\", latitude.toString()+\"/\"+longitude.toString())\r\n        Log.d(\"partyUpdate\", orderTime.toString())\r\n\r\n        binding.deliveryPartyUpdateTogetherCheckBtn.isChecked = hashTag as Boolean // 같이 먹어요 해시태그\r\n        binding.deliveryPartyUpdateTitleEt.setText(title) //제목\r\n        binding.deliveryPartyUpdateContentEt.setText(content) // 콘텐츠\r\n        binding.deliveryPartyUpdateDate2Tv.text = \"${orderTime!!.substring(5, 7)}월 ${orderTime!!.substring(8, 10)}일\" +\" \"+ \"${orderTime!!.substring(11, 13)}시 ${orderTime!!.substring(14, 16)}분\"\r\n        binding.deliveryPartyUpdateNumber2Tv.text = maxMatching.toString() +\"명\" //매칭인원선택\r\n        binding.deliveryPartyUpdateCategory2Tv.text = foodCategory //카테고리 선택\r\n        binding.deliveryPartyUpdateLink2Tv.text = storeUrl // 식당 링크\r\n        binding.deliveryPartyUpdateLocation2Tv.text = getAddress(latitude, longitude) // 수령장소\r\n        // 카카오맵에 띄우기\r\n        this.mapPoint = MapPoint.mapPointWithGeoCoord(latitude,longitude)\r\n        drawMap(mapPoint)\r\n    }\r\n\r\n    private fun initTextWatcher(){\r\n        binding.deliveryPartyUpdateTitleEt.addTextChangedListener ( object : TextWatcher{\r\n            override fun beforeTextChanged(s: CharSequence?, start: Int, count: Int, after: Int) {\r\n            }\r\n\r\n            override fun onTextChanged(s: CharSequence?, start: Int, before: Int, count: Int) {\r\n            }\r\n\r\n            override fun afterTextChanged(s: Editable?) {\r\n                Log.d(\"che\", \"^ㅇ^\")\r\n                title = binding.deliveryPartyUpdateTitleEt.text.toString()\r\n                checking()\r\n            }\r\n\r\n        } )\r\n\r\n        binding.deliveryPartyUpdateContentEt.addTextChangedListener ( object : TextWatcher {\r\n            override fun beforeTextChanged(s: CharSequence?, start: Int, count: Int, after: Int) {\r\n            }\r\n\r\n            override fun onTextChanged(s: CharSequence?, start: Int, before: Int, count: Int) {\r\n            }\r\n\r\n            override fun afterTextChanged(s: Editable?) {\r\n                content = binding.deliveryPartyUpdateContentEt.text.toString()\r\n                checking()\r\n            }\r\n        })\r\n    }\r\n\r\n    private fun checking(){\r\n        Log.d(\"cherry\", ( hashTag.toString() != requireArguments().getBoolean(\"hashTag\").toString()||\r\n                content.toString() != requireArguments().getString(\"content\").toString()||\r\n                title.toString() != requireArguments().getString(\"title\").toString()||\r\n                orderTime.toString() != requireArguments().getString(\"orderTime\").toString() ||\r\n                maxMatching.toString() != requireArguments().getInt(\"maxMatching\").toString() ||\r\n                foodCategory.toString() != requireArguments().getString(\"foodCategory\").toString() ||\r\n                storeUrl.toString() != requireArguments().getString(\"storeUrl\").toString() ||\r\n                latitude.toString() != requireArguments().getDouble(\"latitude\", latitude).toString() ||\r\n                longitude.toString() != requireArguments().getDouble(\"longitude\", longitude).toString()\r\n                ).toString())\r\n\r\n        if( (binding.deliveryPartyUpdateTitleEt.text.length in 1..20 &&\r\n            binding.deliveryPartyUpdateContentEt.text.length in 1..500) &&\r\n            (hashTag.toString() != requireArguments().getBoolean(\"hashTag\").toString()||\r\n            content.toString() != requireArguments().getString(\"content\").toString()||\r\n            title.toString() != requireArguments().getString(\"title\").toString()||\r\n            orderTime.toString() != requireArguments().getString(\"orderTime\").toString() ||\r\n            maxMatching.toString() != requireArguments().getInt(\"maxMatching\").toString() ||\r\n            foodCategory.toString() != requireArguments().getString(\"foodCategory\").toString() ||\r\n            storeUrl.toString() != requireArguments().getString(\"storeUrl\").toString() ||\r\n            latitude.toString() != requireArguments().getDouble(\"latitude\", latitude).toString() ||\r\n            longitude.toString() != requireArguments().getDouble(\"longitude\", longitude).toString()) && (compareDate(orderTime.toString()))\r\n        ){ // 완료버튼 파란색으로 바꿔주기 (조건: 제목, 콘텐츠가 글자수 내에 들어있고, 설정된 시간이 현재시간보다 미래일때 변한게 하나라도 있으면 수정가능하게)\r\n            binding.deliveryPartyUpdateCompleteBtnTv.setTextColor(ContextCompat.getColor(requireContext(), R.color.main))\r\n            if(!binding.deliveryPartyUpdateCompleteBtnTv.isEnabled){\r\n                binding.deliveryPartyUpdateCompleteBtnTv.isEnabled = true\r\n            }\r\n        }else{\r\n            binding.deliveryPartyUpdateCompleteBtnTv.setTextColor((Color.parseColor(\"#BABABA\")))\r\n            if(binding.deliveryPartyUpdateCompleteBtnTv.isEnabled){ // 이렇게 조건문으로 안 감싸도 될것 같은데 안 그럼 오류가 나더라고,,?\r\n                binding.deliveryPartyUpdateCompleteBtnTv.isEnabled = false\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun compareDate(time: String): Boolean{ //현재보다 미래인지 체크 위함\r\n        var sdf = SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\")\r\n        val date1 = sdf.parse(time)\r\n        val currentTime = Calendar.getInstance().time\r\n        return date1.after(currentTime)\r\n    }\r\n\r\n    private fun initClickListener(){\r\n\r\n        //백버튼\r\n        binding.deliveryPartyUpdateBackBtnIv.setOnClickListener {\r\n            //TODO: 안돼...\r\n            Log.d(\"cherry\", \"파티 수정하기 백버튼 눌러짐\")\r\n            //파티 수정=> 파티 보기로 다시 이동\r\n            //종료\r\n            activity?.supportFragmentManager?.beginTransaction()\r\n                ?.remove(this)?.commit()\r\n            activity?.supportFragmentManager?.popBackStack()\r\n        }\r\n\r\n        //완료버튼\r\n        binding.deliveryPartyUpdateCompleteBtnTv.setOnClickListener {\r\n            Log.d(\"cherry\", \"버튼 눌려짐\")\r\n            var numCategory : Int = 0\r\n            when(foodCategory){\r\n                \"한식\"-> numCategory = 1\r\n                \"중식\"-> numCategory = 2\r\n                \"분식\"-> numCategory = 3\r\n                \"회/돈까스\"-> numCategory =4\r\n                \"디저트/음료\"-> numCategory = 5\r\n                \"양식\"-> numCategory = 6\r\n                \"일식\"-> numCategory = 7\r\n                \"치킨/피자\"-> numCategory = 8\r\n                \"패스트 푸드\"-> numCategory = 9\r\n                \"기타\"-> numCategory = 10\r\n                else->{}\r\n            }\r\n            val updatePartyResult = UpdatePartyRequest(content.toString(), numCategory ,hashTag,latitude,longitude, maxMatching, orderTime, storeUrl, title)\r\n            updatePartyService.updatePartySender(dormitory,partyId,updatePartyResult)\r\n\r\n        }\r\n\r\n\r\n        binding.deliveryPartyUpdateTogetherCheckBtn.setOnCheckedChangeListener { //같이 먹고 싶어요 체크버튼 클릭시\r\n                buttonView, isChecked ->\r\n            if (isChecked) {\r\n                binding.deliveryPartyUpdateTogetherTv.setTextColor(ContextCompat.getColor(requireContext(), R.color.main))\r\n            } else {\r\n                binding.deliveryPartyUpdateTogetherTv.setTextColor(ContextCompat.getColor(requireContext(), R.color.gray_2))\r\n            }\r\n        }\r\n\r\n        binding.deliveryPartyUpdateTogetherTv.setOnClickListener {\r\n            //체크되어있었으면 해제, 안체크 되어있었으면 체크 시키기\r\n            binding.deliveryPartyUpdateTogetherCheckBtn.isChecked = !binding.deliveryPartyUpdateTogetherCheckBtn.isChecked\r\n            hashTag = binding.deliveryPartyUpdateTogetherCheckBtn.isChecked\r\n        }\r\n\r\n        // 여기서 부터 dialog 띄우는 부분\r\n        binding.deliveryPartyUpdateDate2Tv.setOnClickListener {\r\n            val dialogDtUpdate =  DialogDtUpdate()\r\n            var bundle = Bundle()\r\n            bundle.putString(\"DT\", orderTime) // 주문시간 넘겨줌\r\n            dialogDtUpdate.arguments = bundle // 번들 넘겨주기\r\n            dialogDtUpdate.show(childFragmentManager, \"CustomDialog\")\r\n        }\r\n\r\n        binding.deliveryPartyUpdateNumber2Tv.setOnClickListener {\r\n            val dialogNumUpdate = DialogNumUpdate()\r\n            var bundle = Bundle()\r\n            bundle.putString(\"Num\", maxMatching.toString()) // 최대 매칭인원 넘겨줌\r\n            dialogNumUpdate.arguments = bundle // 번들 넘겨주기\r\n            dialogNumUpdate.show(childFragmentManager, \"CustomDialog\")\r\n        }\r\n\r\n        binding.deliveryPartyUpdateCategory2Tv.setOnClickListener {\r\n            val dialogCategoryUpdate =  DialogCategoryUpdate()\r\n            var bundle = Bundle()\r\n            bundle.putString(\"Category\", foodCategory) // 카테고리 넘겨줌\r\n            dialogCategoryUpdate.arguments = bundle // 번들 넘겨주기\r\n            dialogCategoryUpdate.show(childFragmentManager, \"CustomDialog\")\r\n        }\r\n\r\n        binding.deliveryPartyUpdateLink2Tv.setOnClickListener {\r\n            val dialogLinkUpdate =  DialogLinkUpdate()\r\n            var bundle = Bundle()\r\n            bundle.putString(\"Link\", storeUrl) // 식당 링크 넘겨줌\r\n            dialogLinkUpdate.arguments = bundle // 번들 넘겨주기\r\n            dialogLinkUpdate.show(childFragmentManager, \"CustomDialog\")\r\n        }\r\n\r\n        binding.deliveryPartyUpdateLocation2Tv.setOnClickListener {\r\n            val dialogLocationUpdate =  DialogLocationUpdate()\r\n            var bundle = Bundle()\r\n            bundle.putDouble(\"latitude\", latitude) // 주소 넘겨줌\r\n            bundle.putDouble(\"longitude\", longitude) // 주소 넘겨줌\r\n            dialogLocationUpdate.arguments = bundle // 번들 넘겨주기\r\n            binding.deliveryPartyUpdateKakaoMapLocation.removeView(mapView) // 맵 사용해야하니까 지우기\r\n            dialogLocationUpdate.show(childFragmentManager, \"CustomDialog\")\r\n        }\r\n\r\n    }\r\n\r\n    //위도 경도로 주소 구하는 Reverse-GeoCoding (주소 String으로 반환 받을 수 있다)\r\n    private fun getAddress(latitude: Double, longitude: Double): String {\r\n        val geoCoder = Geocoder(context, Locale.KOREA)\r\n        var addr = \"주소 오류\"\r\n\r\n        try {\r\n            addr = geoCoder.getFromLocation(latitude, longitude, 1).first().getAddressLine(0)\r\n        } catch (e: Exception) {\r\n            e.printStackTrace()\r\n        }\r\n        return addr\r\n    }\r\n\r\n    private fun drawMap(mapPoint: MapPoint){\r\n        //맵 다시 띄우기\r\n        mapView = MapView(requireActivity())\r\n        binding.deliveryPartyUpdateKakaoMapLocation.addView(mapView)\r\n        //마커생성\r\n        val marker = MapPOIItem()\r\n        marker.itemName = \"요기?\"\r\n        marker.isShowCalloutBalloonOnTouch = false // 클릭시 말풍선을 보여줄지 여부 (false)\r\n        marker.mapPoint = mapPoint\r\n        mapView.addPOIItem(marker)\r\n        mapView!!.setMapCenterPoint(mapPoint, true)//지도 중심점 변경\r\n    }\r\n\r\n    // 다이얼로그 닫을 때 호출됨\r\n    override fun onDtClicked(dt: String) {\r\n        orderTime = dt\r\n        binding.deliveryPartyUpdateDate2Tv.text = \"${orderTime!!.substring(5, 7)}월 ${orderTime!!.substring(8, 10)}일\" +\" \"+ \"${orderTime!!.substring(11, 13)}시 ${orderTime!!.substring(14, 16)}분\"\r\n        checking()\r\n    }\r\n\r\n    override fun onNumClicked(num: Int) {\r\n        maxMatching = num\r\n        binding.deliveryPartyUpdateNumber2Tv.text = maxMatching.toString() +\"명\" //매칭인원선택\r\n        checking()\r\n    }\r\n\r\n    override fun onCategoryClicked(category: String) {\r\n        foodCategory = category\r\n        binding.deliveryPartyUpdateCategory2Tv.text = foodCategory //카테고리 선택\r\n        checking()\r\n    }\r\n\r\n    override fun onLinkClicked(link: String) {\r\n        binding.deliveryPartyUpdateLink2Tv.text = link\r\n        if (link!=\"링크를 입력해주세요\"){\r\n            storeUrl = link\r\n        }\r\n        checking()\r\n    }\r\n\r\n    override fun onLocationClicked(mapPoint: MapPoint, locFlag:Boolean) {\r\n        if (locFlag) { // 정보 갱신\r\n            latitude = mapPoint.mapPointGeoCoord.latitude\r\n            longitude = mapPoint.mapPointGeoCoord.longitude\r\n        }\r\n        binding.deliveryPartyUpdateLocation2Tv.text = getAddress(latitude, longitude) // 수령장소\r\n        // 카카오맵에 띄우기\r\n        drawMap(MapPoint.mapPointWithGeoCoord(latitude,longitude))\r\n        checking()\r\n    }\r\n\r\n    //수정 성공, 실패\r\n    override fun onUpdatePartySuccess() {\r\n        Log.d(\"cherry\", \"파티 수정하기 성공\")\r\n        //TODO: 안돼...\r\n        //종료\r\n        activity?.supportFragmentManager?.beginTransaction()\r\n            ?.remove(this)?.commit()\r\n        activity?.supportFragmentManager?.popBackStack()\r\n    }\r\n\r\n    override fun onUpdatePartyFailure(message: String) {\r\n        Log.d(\"cherry\", message)\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/geeksasaeng/Home/Party/UpdateParty/PartyUpdateFragment.kt b/app/src/main/java/com/example/geeksasaeng/Home/Party/UpdateParty/PartyUpdateFragment.kt
--- a/app/src/main/java/com/example/geeksasaeng/Home/Party/UpdateParty/PartyUpdateFragment.kt	(revision 9a6d2fb73b6b97446c2444eee7761ce69ba150fe)
+++ b/app/src/main/java/com/example/geeksasaeng/Home/Party/UpdateParty/PartyUpdateFragment.kt	(date 1659339260987)
@@ -3,9 +3,13 @@
 import android.graphics.Color
 import android.location.Geocoder
 import android.os.Bundle
+import android.os.PersistableBundle
 import android.text.Editable
 import android.text.TextWatcher
 import android.util.Log
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
 import androidx.core.content.ContentProviderCompat.requireContext
 import androidx.core.content.ContextCompat
 import androidx.core.widget.addTextChangedListener
@@ -21,7 +25,7 @@
 import java.text.SimpleDateFormat
 import java.util.*
 
-
+//TODO: 얘이름 UpdateParty로 고치고 싶당
 class PartyUpdateFragment: BaseFragment<FragmentDeliveryPartyUpdateBinding>(FragmentDeliveryPartyUpdateBinding::inflate), UpdatePartyView,
     DialogDtUpdate.DialogDtUpdateClickListener, DialogNumUpdate.DialogNumUpdateClickListener, DialogCategoryUpdate.DialogCategoryUpdateClickListener,
     DialogLinkUpdate.DialogLinkUpdateClickListener, DialogLocationUpdate.DialogLocationUpdateClickListener{
@@ -48,12 +52,16 @@
     var storeUrl: String? = null
     var title: String? = null
     var updatedAt: String? = null
+    var isFirst: Boolean = true // 파티 생성하기 화면이 만들어진게 최초인지 확인 위함
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+    }
 
     override fun onStart() {
         super.onStart()
         updatePartyService = UpdatePartyService() // 서비스 객체 생성
         updatePartyService.setUpdatePartyView(this)
-        binding.deliveryPartyUpdateLocation2Tv.isSelected = true // 애니메이션 효과 주기 위해서
     }
 
     override fun initAfterBinding() {
@@ -63,37 +71,40 @@
     }
 
     private fun initGetData(){ // 파티 보기에서 파티 수정하기로 넘어오면서 데이터 받아오기
-        authorStatus = requireArguments().getBoolean("authorStatus")
-        chief = requireArguments().getString("chief")
-        chiefProfileImgUrl = requireArguments().getString("chiefProfileImgUrl")
-        content = requireArguments().getString("content")
-        currentMatching = requireArguments().getInt("currentMatching")
-        dormitory = requireArguments().getInt("dormitory")
-        foodCategory = requireArguments().getString("foodCategory") // 카테고리
-        hashTag = requireArguments().getBoolean("hashTag")
-        partyId = requireArguments().getInt("partyId")
-        latitude = requireArguments().getDouble("latitude", latitude)
-        longitude = requireArguments().getDouble("longitude", longitude)
-        matchingStatus = requireArguments().getString("matchingStatus")
-        maxMatching = requireArguments().getInt("maxMatching") // 최대매칭인원
-        orderTime = requireArguments().getString("orderTime") // 주문 예정시간
-        storeUrl = requireArguments().getString("storeUrl")
-        title = requireArguments().getString("title")
-        updatedAt = requireArguments().getString("updatedAt")
-        Log.d("partyUpdate", latitude.toString()+"/"+longitude.toString())
-        Log.d("partyUpdate", orderTime.toString())
+        if(this.isFirst){
+            authorStatus = requireArguments().getBoolean("authorStatus")
+            chief = requireArguments().getString("chief")
+            chiefProfileImgUrl = requireArguments().getString("chiefProfileImgUrl")
+            content = requireArguments().getString("content")
+            currentMatching = requireArguments().getInt("currentMatching")
+            dormitory = requireArguments().getInt("dormitory")
+            foodCategory = requireArguments().getString("foodCategory") // 카테고리
+            hashTag = requireArguments().getBoolean("hashTag")
+            partyId = requireArguments().getInt("partyId")
+            latitude = requireArguments().getDouble("latitude", latitude)
+            longitude = requireArguments().getDouble("longitude", longitude)
+            matchingStatus = requireArguments().getString("matchingStatus")
+            maxMatching = requireArguments().getInt("maxMatching") // 최대매칭인원
+            orderTime = requireArguments().getString("orderTime") // 주문 예정시간
+            storeUrl = requireArguments().getString("storeUrl")
+            title = requireArguments().getString("title")
+            updatedAt = requireArguments().getString("updatedAt")
+            Log.d("partyUpdate", latitude.toString()+"/"+longitude.toString())
+            Log.d("partyUpdate", orderTime.toString())
 
-        binding.deliveryPartyUpdateTogetherCheckBtn.isChecked = hashTag as Boolean // 같이 먹어요 해시태그
-        binding.deliveryPartyUpdateTitleEt.setText(title) //제목
-        binding.deliveryPartyUpdateContentEt.setText(content) // 콘텐츠
-        binding.deliveryPartyUpdateDate2Tv.text = "${orderTime!!.substring(5, 7)}월 ${orderTime!!.substring(8, 10)}일" +" "+ "${orderTime!!.substring(11, 13)}시 ${orderTime!!.substring(14, 16)}분"
-        binding.deliveryPartyUpdateNumber2Tv.text = maxMatching.toString() +"명" //매칭인원선택
-        binding.deliveryPartyUpdateCategory2Tv.text = foodCategory //카테고리 선택
-        binding.deliveryPartyUpdateLink2Tv.text = storeUrl // 식당 링크
-        binding.deliveryPartyUpdateLocation2Tv.text = getAddress(latitude, longitude) // 수령장소
-        // 카카오맵에 띄우기
-        this.mapPoint = MapPoint.mapPointWithGeoCoord(latitude,longitude)
-        drawMap(mapPoint)
+            binding.deliveryPartyUpdateTogetherCheckBtn.isChecked = hashTag as Boolean // 같이 먹어요 해시태그
+            binding.deliveryPartyUpdateTitleEt.setText(title) //제목
+            binding.deliveryPartyUpdateContentEt.setText(content) // 콘텐츠
+            binding.deliveryPartyUpdateDate2Tv.text = "${orderTime!!.substring(5, 7)}월 ${orderTime!!.substring(8, 10)}일" +" "+ "${orderTime!!.substring(11, 13)}시 ${orderTime!!.substring(14, 16)}분"
+            binding.deliveryPartyUpdateNumber2Tv.text = maxMatching.toString() +"명" //매칭인원선택
+            binding.deliveryPartyUpdateCategory2Tv.text = foodCategory //카테고리 선택
+            binding.deliveryPartyUpdateLink2Tv.text = storeUrl // 식당 링크
+            binding.deliveryPartyUpdateLocation2Tv.text = getAddress(latitude, longitude) // 수령장소
+            // 카카오맵에 띄우기
+            this.mapPoint = MapPoint.mapPointWithGeoCoord(latitude,longitude)
+            drawMap(mapPoint)
+            this.isFirst = false
+        }
     }
 
     private fun initTextWatcher(){
@@ -105,7 +116,6 @@
             }
 
             override fun afterTextChanged(s: Editable?) {
-                Log.d("che", "^ㅇ^")
                 title = binding.deliveryPartyUpdateTitleEt.text.toString()
                 checking()
             }
@@ -186,16 +196,17 @@
         binding.deliveryPartyUpdateCompleteBtnTv.setOnClickListener {
             Log.d("cherry", "버튼 눌려짐")
             var numCategory : Int = 0
+            //foodcategory(String)에 따른 아이디값(int)변환
             when(foodCategory){
                 "한식"-> numCategory = 1
-                "중식"-> numCategory = 2
-                "분식"-> numCategory = 3
-                "회/돈까스"-> numCategory =4
-                "디저트/음료"-> numCategory = 5
-                "양식"-> numCategory = 6
-                "일식"-> numCategory = 7
-                "치킨/피자"-> numCategory = 8
-                "패스트 푸드"-> numCategory = 9
+                "중식"-> numCategory = 3
+                "분식"-> numCategory = 5
+                "회/돈까스"-> numCategory =7
+                "디저트/음료"-> numCategory = 9
+                "양식"-> numCategory = 2
+                "일식"-> numCategory = 4
+                "치킨/피자"-> numCategory = 6
+                "패스트 푸드"-> numCategory = 8
                 "기타"-> numCategory = 10
                 else->{}
             }
@@ -281,6 +292,10 @@
     private fun drawMap(mapPoint: MapPoint){
         //맵 다시 띄우기
         mapView = MapView(requireActivity())
+        mapView.setOnTouchListener { v, event ->
+            binding.deliveryPartyUpdateSv.requestDisallowInterceptTouchEvent(true) //부모에게 Touch Event를 빼앗기지 않게 할 수 있다.
+            return@setOnTouchListener false
+        }
         binding.deliveryPartyUpdateKakaoMapLocation.addView(mapView)
         //마커생성
         val marker = MapPOIItem()
@@ -331,8 +346,6 @@
 
     //수정 성공, 실패
     override fun onUpdatePartySuccess() {
-        Log.d("cherry", "파티 수정하기 성공")
-        //TODO: 안돼...
         //종료
         activity?.supportFragmentManager?.beginTransaction()
             ?.remove(this)?.commit()
Index: app/src/main/java/com/example/geeksasaeng/Home/Party/UpdateParty/DialogLocationUpdate.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.geeksasaeng.Home.Party.UpdateParty\r\n\r\nimport android.Manifest\r\nimport android.app.Activity\r\nimport android.app.AlertDialog\r\nimport android.content.Context\r\nimport android.content.Context.LOCATION_SERVICE\r\nimport android.content.DialogInterface\r\nimport android.content.Intent\r\nimport android.content.pm.PackageManager\r\nimport android.graphics.Color\r\nimport android.graphics.drawable.ColorDrawable\r\nimport android.location.Address\r\nimport android.location.Geocoder\r\nimport android.location.LocationManager\r\nimport android.os.Bundle\r\nimport android.provider.Settings\r\nimport android.text.Editable\r\nimport android.util.Log\r\nimport android.view.KeyEvent\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.Toast\r\nimport androidx.core.app.ActivityCompat\r\nimport androidx.core.content.ContextCompat\r\nimport androidx.fragment.app.DialogFragment\r\nimport androidx.fragment.app.activityViewModels\r\nimport com.airbnb.lottie.model.Marker\r\nimport com.example.geeksasaeng.Home.CreateParty.CreatePartyViewModel\r\nimport com.example.geeksasaeng.Home.CreateParty.DialogLink\r\nimport com.example.geeksasaeng.Home.CreateParty.Retrofit.CreatePartyDefaultLocResult\r\nimport com.example.geeksasaeng.Home.CreateParty.Retrofit.CreatePartyDefaultLocView\r\nimport com.example.geeksasaeng.Home.CreateParty.Retrofit.CreatePartyService\r\nimport com.example.geeksasaeng.Home.Party.CreateParty.DialogLocation\r\nimport com.example.geeksasaeng.R\r\nimport com.example.geeksasaeng.databinding.ActivityCreatePartyBinding\r\nimport com.example.geeksasaeng.databinding.DialogLocationLayoutBinding\r\nimport com.example.geeksasaeng.databinding.DialogLocationLayoutUpdateBinding\r\nimport net.daum.mf.map.api.MapPOIItem\r\nimport net.daum.mf.map.api.MapPoint\r\nimport net.daum.mf.map.api.MapPoint.GeoCoordinate\r\nimport net.daum.mf.map.api.MapReverseGeoCoder\r\nimport net.daum.mf.map.api.MapView\r\nimport net.daum.mf.map.gen.KakaoMapLibraryAndroidMeta\r\nimport java.nio.file.Files.find\r\nimport java.util.*\r\n\r\nclass DialogLocationUpdate: DialogFragment(),\r\n    MapView.CurrentLocationEventListener, MapView.MapViewEventListener, MapView.POIItemEventListener {\r\n\r\n    lateinit var binding: DialogLocationLayoutUpdateBinding\r\n    private var dialogLocationUpdateClickListener: DialogLocationUpdateClickListener? =null\r\n    var REQUIRED_PERMISSIONS = arrayOf(Manifest.permission.ACCESS_FINE_LOCATION)\r\n    private val GPS_ENABLE_REQUEST_CODE = 2001\r\n    private val PERMISSIONS_REQUEST_CODE = 100\r\n    lateinit var geocoder : Geocoder\r\n    lateinit var mapView : MapView\r\n    lateinit var mapPoint: MapPoint // TODO: 디폴트 맵포인트로 설정\r\n    var locFlag = false // 정보 전달 유무 플래그값\r\n    lateinit var marker : MapPOIItem\r\n\r\n    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {\r\n        binding = DialogLocationLayoutUpdateBinding.inflate(inflater, container, false)\r\n        dialog?.window?.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT)) //레이아웃배경을 투명하게 해줌?\r\n        binding.dialogLocationUpdateLocTv.isSelected = true // 이걸 해줘야 물 흐르는 애니메이션이 가능\r\n        ininKakaoMap()\r\n        initData() //꼭 카카오맵 뒤에 있어야함\r\n        initClickListener()\r\n        return binding.root\r\n    }\r\n\r\n    //frag->Activity 정보전달용 코드 시작\r\n    interface DialogLocationUpdateClickListener{\r\n        fun onLocationClicked(mapPoint: MapPoint, locFlag: Boolean)\r\n    }\r\n\r\n    override fun onAttach(context: Context) {\r\n        super.onAttach(context)\r\n        dialogLocationUpdateClickListener =  requireParentFragment() as DialogLocationUpdateClickListener\r\n    }\r\n\r\n    override fun onDetach() {\r\n        super.onDetach()\r\n        dialogLocationUpdateClickListener?.onLocationClicked(mapPoint, locFlag)\r\n        binding.dialogLocationUpdateKakaoMapView.removeView(mapView) // 다이얼로그 나가기전에 맵 없애주기\r\n        dialogLocationUpdateClickListener = null\r\n    }\r\n    //frag->Activity 정보전달용 코드 끝\r\n\r\n    private fun initData(){\r\n        val latitude = requireArguments().getDouble(\"latitude\")\r\n        val longitude = requireArguments().getDouble(\"longitude\")\r\n        this.mapPoint = MapPoint.mapPointWithGeoCoord(latitude,longitude)\r\n        Log.d(\"updateLoc\", mapPoint.toString())\r\n        drawMap(mapPoint)\r\n        setAddress(mapPoint)\r\n    }\r\n\r\n    override fun onResume() {\r\n        super.onResume()\r\n        val width = resources.getDimensionPixelSize(R.dimen.popup_width)\r\n        val height = resources.getDimensionPixelSize(R.dimen.popup_height)\r\n        dialog?.window?.setLayout(width,height)\r\n    }\r\n\r\n\r\n    private fun ininKakaoMap(){\r\n\r\n        //현위치 트래킹\r\n/*      mapView.setCurrentLocationTrackingMode(MapView.CurrentLocationTrackingMode.TrackingModeOnWithHeading)\r\n        if (!checkLocationServicesStatus()) {\r\n            showDialogForLocationServiceSetting();\r\n        }else {\r\n            checkRunTimePermission();\r\n        }*/\r\n        geocoder = Geocoder(requireContext()) //지오코더 객체 획득\r\n    }\r\n\r\n    //위도 경도로 주소 구하는 Reverse-GeoCoding\r\n    private fun setAddress(position: MapPoint) { // tv에 text설정까지 이 함수에서 해준다.\r\n        val geoCoder = Geocoder(context, Locale.KOREA)\r\n        var addr = \"주소 오류\"\r\n\r\n        try {\r\n            addr = geoCoder.getFromLocation(position.mapPointGeoCoord.latitude, position.mapPointGeoCoord.longitude, 1).first().getAddressLine(0)\r\n            binding.dialogLocationUpdateLocTv.text = addr\r\n        } catch (e: Exception) {\r\n            e.printStackTrace()\r\n        }\r\n    }\r\n    //https://bumjae.tistory.com/54 참조\r\n\r\n    private fun showDialogForLocationServiceSetting() {\r\n        val builder: AlertDialog.Builder = AlertDialog.Builder(requireContext())\r\n        builder.setTitle(\"위치 서비스 비활성화\")\r\n        builder.setMessage(\r\n            \"\"\"\r\n            앱을 사용하기 위해서는 위치 서비스가 필요합니다.\r\n            위치 설정을 수정하시겠습니까?\r\n            \"\"\".trimIndent()\r\n        )\r\n        builder.setCancelable(true)\r\n        builder.setPositiveButton(\"설정\", DialogInterface.OnClickListener { dialog, id ->\r\n            val callGPSSettingIntent = Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS)\r\n            startActivityForResult(callGPSSettingIntent, GPS_ENABLE_REQUEST_CODE)\r\n        })\r\n        builder.setNegativeButton(\"취소\",\r\n            DialogInterface.OnClickListener { dialog, id -> dialog.cancel() })\r\n        builder.create().show()\r\n    }\r\n\r\n    fun checkLocationServicesStatus(): Boolean {\r\n        val locationManager : LocationManager = activity?.getSystemService(LOCATION_SERVICE) as LocationManager\r\n        return (locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)\r\n                || locationManager.isProviderEnabled(LocationManager.NETWORK_PROVIDER))\r\n    }\r\n\r\n    override fun onCurrentLocationUpdate(mapView: MapView?, currentLocation: MapPoint?, accuracyInMeters: Float) {\r\n        val mapPointGeo: GeoCoordinate = currentLocation!!.getMapPointGeoCoord()\r\n        //지도 중심점 변경\r\n        mapView!!.setMapCenterPoint(MapPoint.mapPointWithCONGCoord(mapPointGeo.latitude,mapPointGeo.longitude), true)\r\n        Log.i(\r\n            \"currentLocation_log\",\r\n            java.lang.String.format(\r\n                \"MapView onCurrentLocationUpdate (%f,%f) accuracy (%f)\",\r\n                mapPointGeo.latitude,\r\n                mapPointGeo.longitude,\r\n                accuracyInMeters\r\n            )\r\n        )\r\n    }\r\n\r\n    override fun onCurrentLocationDeviceHeadingUpdate(p0: MapView?, p1: Float) {\r\n\r\n    }\r\n\r\n    override fun onCurrentLocationUpdateFailed(p0: MapView?) {\r\n\r\n    }\r\n\r\n    override fun onCurrentLocationUpdateCancelled(p0: MapView?) {\r\n\r\n    }\r\n\r\n    fun checkRunTimePermission() {\r\n\r\n        //런타임 퍼미션 처리\r\n        // 1. 위치 퍼미션을 가지고 있는지 체크합니다.\r\n        val hasFineLocationPermission = ContextCompat.checkSelfPermission(\r\n            requireContext(),\r\n            Manifest.permission.ACCESS_FINE_LOCATION\r\n        )\r\n        if (hasFineLocationPermission == PackageManager.PERMISSION_GRANTED) {\r\n            // 2. 이미 퍼미션을 가지고 있다면\r\n            // ( 안드로이드 6.0 이하 버전은 런타임 퍼미션이 필요없기 때문에 이미 허용된 걸로 인식합니다.)\r\n            // 3.  위치 값을 가져올 수 있음\r\n        } else {  //2. 퍼미션 요청을 허용한 적이 없다면 퍼미션 요청이 필요합니다. 2가지 경우(3-1, 4-1)가 있습니다.\r\n            // 3-1. 사용자가 퍼미션 거부를 한 적이 있는 경우에는\r\n            if (ActivityCompat.shouldShowRequestPermissionRationale(\r\n                    context as Activity,\r\n                    REQUIRED_PERMISSIONS.get(0)\r\n                )\r\n            ) {\r\n                // 3-2. 요청을 진행하기 전에 사용자가에게 퍼미션이 필요한 이유를 설명해줄 필요가 있습니다.\r\n                Toast.makeText(requireContext(), \"이 앱을 실행하려면 위치 접근 권한이 필요합니다.\", Toast.LENGTH_LONG)\r\n                    .show()\r\n                // 3-3. 사용자게에 퍼미션 요청을 합니다. 요청 결과는 onRequestPermissionResult에서 수신됩니다.\r\n                ActivityCompat.requestPermissions(\r\n                    context as Activity, REQUIRED_PERMISSIONS,\r\n                    PERMISSIONS_REQUEST_CODE\r\n                )\r\n            } else {\r\n                // 4-1. 사용자가 퍼미션 거부를 한 적이 없는 경우에는 퍼미션 요청을 바로 합니다.\r\n                // 요청 결과는 onRequestPermissionResult에서 수신됩니다.\r\n                ActivityCompat.requestPermissions(\r\n                    context as Activity, REQUIRED_PERMISSIONS,\r\n                    PERMISSIONS_REQUEST_CODE\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun initClickListener(){\r\n        binding.dialogLocationUpdateBtn.setOnClickListener {\r\n            locFlag = true // 정상적인 종료임을 표시\r\n            //자기는 종료\r\n            parentFragmentManager.beginTransaction().remove(this).commit()\r\n        }\r\n\r\n        binding.dialogLocationUpdateSearchEt.setOnKeyListener { _, keyCode, event ->\r\n            if ((event.action == KeyEvent.ACTION_DOWN) && (keyCode == KeyEvent.KEYCODE_ENTER)){\r\n                binding.dialogLocationUpdateSearchBtn.performClick()\r\n                true\r\n            }else{\r\n                false\r\n            }\r\n        }\r\n\r\n        //서치버튼\r\n        binding.dialogLocationUpdateSearchBtn.setOnClickListener {\r\n            //TODO: 서치시 이전 핀 없애주기\r\n            mapView.removePOIItem(marker) // 원래있던 마커 없애주기\r\n            var adr = binding.dialogLocationUpdateSearchEt.text.toString() // 주소 얻어오기\r\n            var list = geocoder.getFromLocationName(adr, 10)\r\n\r\n            if (list != null) {\r\n                if (list.size == 0) {\r\n                    binding.dialogLocationUpdateLocTv.setText(\"올바른 주소를 입력해주세요. \")\r\n                } else {\r\n                    val address: Address = list[0]\r\n                    val lat: Double = address.getLatitude() //위도\r\n                    val lon: Double = address.getLongitude() //경도\r\n                    Log.d(\"adr\", lat.toString()+\"/\"+lon.toString())\r\n                    this.mapPoint = MapPoint.mapPointWithGeoCoord(lat,lon) // 서치하면 맵포인트 설정됨 (mapPoint 이때 정의됨)\r\n                    //마커생성\r\n                    marker = MapPOIItem()\r\n                    marker.itemName = \"요기?\"\r\n                    marker.mapPoint = mapPoint\r\n                    marker.markerType = MapPOIItem.MarkerType.BluePin\r\n                    marker.selectedMarkerType = MapPOIItem.MarkerType.RedPin\r\n                    marker.isDraggable = true //드래그 가능하게 만들기\r\n\r\n                    mapView.addPOIItem(marker)\r\n                    mapView!!.setMapCenterPoint(mapPoint, true)//지도 중심점 변경\r\n\r\n                    //Reverse Geo-Coding\r\n                    setAddress(this.mapPoint)\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    override fun onMapViewInitialized(p0: MapView?) {\r\n\r\n    }\r\n\r\n    override fun onMapViewCenterPointMoved(p0: MapView?, p1: MapPoint?) {\r\n\r\n    }\r\n\r\n    override fun onMapViewZoomLevelChanged(p0: MapView?, p1: Int) {\r\n\r\n    }\r\n\r\n    override fun onMapViewSingleTapped(p0: MapView?, p1: MapPoint?) {\r\n\r\n    }\r\n\r\n    override fun onMapViewDoubleTapped(p0: MapView?, p1: MapPoint?) {\r\n\r\n    }\r\n\r\n    override fun onMapViewLongPressed(p0: MapView?, p1: MapPoint?) {\r\n\r\n    }\r\n\r\n    override fun onMapViewDragStarted(p0: MapView?, p1: MapPoint?) {\r\n\r\n    }\r\n\r\n    override fun onMapViewDragEnded(p0: MapView?, p1: MapPoint?) {\r\n\r\n    }\r\n\r\n    override fun onMapViewMoveFinished(p0: MapView?, p1: MapPoint?) {\r\n\r\n    }\r\n\r\n\r\n    // 마커 아이템 관련 이벤트 메소드\r\n    override fun onPOIItemSelected(p0: MapView?, p1: MapPOIItem?) {\r\n\r\n    }\r\n\r\n    override fun onCalloutBalloonOfPOIItemTouched(p0: MapView?, p1: MapPOIItem?) {\r\n\r\n    }\r\n\r\n    override fun onCalloutBalloonOfPOIItemTouched(\r\n        p0: MapView?,\r\n        p1: MapPOIItem?,\r\n        p2: MapPOIItem.CalloutBalloonButtonType?\r\n    ) {\r\n\r\n    }\r\n\r\n    //마커이동시 호출됨\r\n    override fun onDraggablePOIItemMoved(p0: MapView?, p1: MapPOIItem?, p2: MapPoint?) {\r\n        //!!\r\n        Log.d(\"map\", \"marker이동됨\")\r\n        mapView!!.setMapCenterPoint(p2, true)//지도 중심점 변경\r\n        this.mapPoint = p2!! // 맵포인트 수정\r\n        //역지오코딩\r\n        setAddress(p2)\r\n\r\n    }\r\n\r\n\r\n    private fun drawMap(mapPoint: MapPoint){\r\n        //맵  띄우기\r\n        mapView = MapView(activity)\r\n        binding.dialogLocationUpdateKakaoMapView.addView(mapView)\r\n        //마커생성\r\n        marker = MapPOIItem()\r\n        marker.itemName = \"요기?\"\r\n        marker.mapPoint = mapPoint\r\n        marker.isDraggable = true //드래그 가능하게 만들기\r\n        mapView.addPOIItem(marker)\r\n        mapView!!.setMapCenterPoint(mapPoint, true)//지도 중심점 변경\r\n        mapView.setMapViewEventListener(this)\r\n        mapView.setPOIItemEventListener(this)\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/geeksasaeng/Home/Party/UpdateParty/DialogLocationUpdate.kt b/app/src/main/java/com/example/geeksasaeng/Home/Party/UpdateParty/DialogLocationUpdate.kt
--- a/app/src/main/java/com/example/geeksasaeng/Home/Party/UpdateParty/DialogLocationUpdate.kt	(revision 9a6d2fb73b6b97446c2444eee7761ce69ba150fe)
+++ b/app/src/main/java/com/example/geeksasaeng/Home/Party/UpdateParty/DialogLocationUpdate.kt	(date 1659339260975)
@@ -228,6 +228,7 @@
             parentFragmentManager.beginTransaction().remove(this).commit()
         }
 
+        //엔터치면 검색되게 하는 기능
         binding.dialogLocationUpdateSearchEt.setOnKeyListener { _, keyCode, event ->
             if ((event.action == KeyEvent.ACTION_DOWN) && (keyCode == KeyEvent.KEYCODE_ENTER)){
                 binding.dialogLocationUpdateSearchBtn.performClick()
Index: app/src/main/java/com/example/geeksasaeng/Home/Party/UpdateParty/DialogDtUpdate.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.geeksasaeng.Home.Party.UpdateParty\r\n\r\nimport android.app.DatePickerDialog\r\nimport android.app.TimePickerDialog\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.graphics.Color\r\nimport android.graphics.drawable.ColorDrawable\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.*\r\nimport androidx.fragment.app.DialogFragment\r\nimport androidx.fragment.app.activityViewModels\r\nimport com.example.geeksasaeng.Home.CreateParty.CreatePartyViewModel\r\nimport com.example.geeksasaeng.Home.Party.CreateParty.DialogDt\r\nimport com.example.geeksasaeng.R\r\nimport com.example.geeksasaeng.databinding.DialogDtLayoutBinding\r\nimport com.example.geeksasaeng.databinding.DialogDtUpdateLayoutBinding\r\nimport java.text.SimpleDateFormat\r\nimport java.util.*\r\n\r\nclass DialogDtUpdate : DialogFragment() {\r\n    lateinit var binding: DialogDtUpdateLayoutBinding\r\n    private var dialogDtUpdateClickListener: DialogDtUpdateClickListener? =null\r\n    var dateString = \"\"\r\n    var dateString2 = \"\"\r\n    var timeString = \"\"\r\n    var timeString2 = \"\"\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater,\r\n        container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View?\r\n    {\r\n        binding = DialogDtUpdateLayoutBinding.inflate(inflater, container, false)\r\n        dialog?.window?.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT)) //레이아웃배경을 투명하게 해줌?\r\n        initData()\r\n        initClickListener()\r\n        return binding.root\r\n    }\r\n\r\n    interface DialogDtUpdateClickListener{\r\n        //TODO: 뷰모델 이용하면서 사실 여기서 매개변수로 안넘겨줘도 ACTIVITY에서 값 알 수 있어..\r\n        //TODO: 근데 이걸 하는 이유는 정보 갱신을 위함.\r\n        fun onDtClicked(dt:String)\r\n    }\r\n\r\n    override fun onAttach(context: Context) {\r\n        super.onAttach(context)\r\n        dialogDtUpdateClickListener = requireParentFragment() as DialogDtUpdateClickListener\r\n    }\r\n\r\n    override fun onDetach() {\r\n        super.onDetach()\r\n        dialogDtUpdateClickListener = null\r\n    }\r\n\r\n    private fun initData(){\r\n        //정보 받아와서 설정해주기\r\n        val orderTime = arguments?.getString(\"DT\")\r\n        Log.d(\"DT\", orderTime+\"받아옴\")\r\n        binding.dialogDateUpdateDateTv.text = \"${orderTime?.substring(5, 7)}월 ${orderTime?.substring(8, 10)}일\"\r\n        dateString2 = \"${orderTime?.substring(0, 10)}\"\r\n        timeString2 = \"${orderTime?.substring(11, 19)}\"\r\n        binding.dialogDateUpdateTimeTv.text = \"${orderTime?.substring(11, 13)}시 ${orderTime?.substring(14, 16)}분\"\r\n    }\r\n\r\n    override fun onResume() {\r\n        super.onResume()\r\n        //<방법2: 지정해둔 dp크기로로 다이얼로그 기 조정>\r\n        val width = resources.getDimensionPixelSize(R.dimen.popup_width)\r\n        val height = resources.getDimensionPixelSize(R.dimen.popup_height)\r\n        dialog?.window?.setLayout(width,height)\r\n    }\r\n\r\n    private fun initClickListener(){\r\n\r\n        binding.dialogDateUpdateDateTv.setOnClickListener { //날짜 정보\r\n            //DatePickerApplicationClass\r\n            val cal = Calendar.getInstance()    //캘린더뷰 만들기\r\n            val dateSetListener = DatePickerDialog.OnDateSetListener { view, year, month, dayOfMonth ->\r\n                dateString = \"${month+1}월 ${dayOfMonth}일\"\r\n\r\n                //TODO: 이 부분 DateFormat이용할 수 있으면 좋을 텐뎅.. 아직 모르겠음\r\n                var sMonth : String = (month+1).toString()\r\n                var sDay : String = dayOfMonth.toString()\r\n                if(month.toString().length==1){\r\n                    sMonth = \"0\"+ sMonth\r\n                }\r\n                if(dayOfMonth.toString().length==1){\r\n                    sDay = \"0\"+sDay\r\n                }\r\n                dateString2 = \"${year}-\" + sMonth + \"-\" + sDay\r\n\r\n\r\n                Log.d(\"dialog\", dateString)\r\n                binding.dialogDateUpdateDateTv.text = dateString\r\n            }\r\n            var dialog = DatePickerDialog(requireContext(), dateSetListener, cal.get(Calendar.YEAR),cal.get(Calendar.MONTH),cal.get(\r\n                Calendar.DAY_OF_MONTH))\r\n            dialog.datePicker.minDate = System.currentTimeMillis()\r\n            dialog.show()\r\n        }\r\n\r\n        binding.dialogDateUpdateTimeTv.setOnClickListener { //시간 정보\r\n            val cal = Calendar.getInstance()   //캘린더뷰 만들기\r\n            //TimePicker\r\n            val timeSetListener = TimePickerDialog.OnTimeSetListener { view, hourOfDay, minute ->\r\n                timeString = \"${hourOfDay}시 ${minute}분\"\r\n                var sHour : String = hourOfDay.toString()\r\n                var sMinute : String = minute.toString()\r\n                if(minute.toString().length==1){\r\n                    sMinute = \"0\"+ sMinute\r\n                }\r\n                if(hourOfDay.toString().length==1){\r\n                    sHour = \"0\"+sHour\r\n                }\r\n                timeString2 = sHour+\":\"+sMinute+\":00\" //TODO:임의로 그냥 초는 00초로 해두기로 함\r\n\r\n\r\n                binding.dialogDateUpdateTimeTv.text = timeString\r\n            }\r\n            TimePickerDialog(requireContext(), timeSetListener, cal.get(Calendar.HOUR_OF_DAY), cal.get(Calendar.MINUTE),true).show()\r\n\r\n        }\r\n\r\n        //완료 버튼\r\n        binding.dialogDateUpdateBtn.setOnClickListener {\r\n            dialogDtUpdateClickListener?.onDtClicked(dateString2 +\" \"+ timeString2)\r\n            parentFragmentManager.beginTransaction()\r\n                .remove(this).commit()\r\n        }\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/geeksasaeng/Home/Party/UpdateParty/DialogDtUpdate.kt b/app/src/main/java/com/example/geeksasaeng/Home/Party/UpdateParty/DialogDtUpdate.kt
--- a/app/src/main/java/com/example/geeksasaeng/Home/Party/UpdateParty/DialogDtUpdate.kt	(revision 9a6d2fb73b6b97446c2444eee7761ce69ba150fe)
+++ b/app/src/main/java/com/example/geeksasaeng/Home/Party/UpdateParty/DialogDtUpdate.kt	(date 1659339260964)
@@ -79,7 +79,7 @@
         binding.dialogDateUpdateDateTv.setOnClickListener { //날짜 정보
             //DatePickerApplicationClass
             val cal = Calendar.getInstance()    //캘린더뷰 만들기
-            val dateSetListener = DatePickerDialog.OnDateSetListener { view, year, month, dayOfMonth ->
+            val dateSetListener = DatePickerDialog.OnDateSetListener { _, year, month, dayOfMonth ->
                 dateString = "${month+1}월 ${dayOfMonth}일"
 
                 //TODO: 이 부분 DateFormat이용할 수 있으면 좋을 텐뎅.. 아직 모르겠음
@@ -106,7 +106,7 @@
         binding.dialogDateUpdateTimeTv.setOnClickListener { //시간 정보
             val cal = Calendar.getInstance()   //캘린더뷰 만들기
             //TimePicker
-            val timeSetListener = TimePickerDialog.OnTimeSetListener { view, hourOfDay, minute ->
+            val timeSetListener = TimePickerDialog.OnTimeSetListener { _, hourOfDay, minute ->
                 timeString = "${hourOfDay}시 ${minute}분"
                 var sHour : String = hourOfDay.toString()
                 var sMinute : String = minute.toString()
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:fitsSystemWindows=\"true\"\r\n    tools:context=\".MainActivity\">\r\n\r\n    <FrameLayout\r\n        android:id=\"@+id/main_frm\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"0dp\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintBottom_toTopOf=\"@id/main_bottom_navi\" />\r\n\r\n    <com.google.android.material.bottomnavigation.BottomNavigationView\r\n        android:id=\"@+id/main_bottom_navi\"\r\n        android:paddingVertical=\"5dp\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:background=\"@color/line\"\r\n        app:itemRippleColor=\"@null\"\r\n        app:itemTextColor=\"@color/gray_3\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:menu=\"@menu/bottom_navi_menu\" />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml
--- a/app/src/main/res/layout/activity_main.xml	(revision 9a6d2fb73b6b97446c2444eee7761ce69ba150fe)
+++ b/app/src/main/res/layout/activity_main.xml	(date 1659339261009)
@@ -21,6 +21,7 @@
         android:layout_height="wrap_content"
         android:background="@color/line"
         app:itemRippleColor="@null"
+        app:itemBackground="@color/line"
         app:itemTextColor="@color/gray_3"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintBottom_toBottomOf="parent"
Index: app/src/main/res/layout/fragment_delivery_party_update.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@color/white\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\r\n\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:id=\"@+id/delivery_party_update_top\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/delivery_party_update_back_btn_iv\"\r\n            android:layout_width=\"20dp\"\r\n            android:layout_height=\"20dp\"\r\n            android:src=\"@drawable/ic_back\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:layout_marginStart=\"30dp\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            />\r\n\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            app:layout_constraintStart_toEndOf=\"@id/delivery_party_update_back_btn_iv\"\r\n            app:layout_constraintTop_toTopOf=\"@id/delivery_party_update_back_btn_iv\"\r\n            app:layout_constraintEnd_toStartOf=\"@id/delivery_party_update_complete_btn_tv\"\r\n            app:layout_constraintBottom_toBottomOf=\"@id/delivery_party_update_back_btn_iv\"\r\n            android:text=\"파티 수정하기\"\r\n            android:fontFamily=\"@font/spoqa_bold\"\r\n            android:textSize=\"20sp\"\r\n            android:textColor=\"@color/top\"/>\r\n\r\n        <TextView\r\n            android:id=\"@+id/delivery_party_update_complete_btn_tv\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginEnd=\"20dp\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"@id/delivery_party_update_back_btn_iv\"\r\n            app:layout_constraintBottom_toBottomOf=\"@id/delivery_party_update_back_btn_iv\"\r\n            android:text=\"완료\"\r\n            android:fontFamily=\"@font/spoqa_medium\"\r\n            android:textColor=\"#BABABA\"\r\n            android:textSize=\"16sp\"\r\n            />\r\n\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n\r\n    <ScrollView\r\n        android:id=\"@+id/delivery_party_update_sv\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_marginTop=\"30dp\"\r\n        android:layout_height=\"0dp\"\r\n        android:overScrollMode=\"never\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/delivery_party_update_top\">\r\n\r\n        <androidx.constraintlayout.widget.ConstraintLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            >\r\n\r\n            <CheckBox\r\n                android:id=\"@+id/delivery_party_update_together_check_btn\"\r\n                app:layout_constraintStart_toStartOf=\"parent\"\r\n                app:layout_constraintTop_toTopOf=\"parent\"\r\n                android:layout_marginStart=\"30dp\"\r\n                android:layout_width=\"25dp\"\r\n                android:layout_height=\"25dp\"\r\n                android:button=\"@android:color/transparent\"\r\n                android:background=\"@drawable/selector_checkbox\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/delivery_party_update_together_tv\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginStart=\"9dp\"\r\n                android:fontFamily=\"@font/spoqa_regular\"\r\n                android:text=\"같이 먹고 싶어요\"\r\n                android:textColor=\"@color/gray_2\"\r\n                android:textSize=\"14sp\"\r\n                app:layout_constraintBottom_toBottomOf=\"@id/delivery_party_update_together_check_btn\"\r\n                app:layout_constraintStart_toEndOf=\"@id/delivery_party_update_together_check_btn\"\r\n                app:layout_constraintTop_toTopOf=\"@id/delivery_party_update_together_check_btn\" />\r\n\r\n\r\n            <EditText\r\n                android:id=\"@+id/delivery_party_update_title_et\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginStart=\"20dp\"\r\n                android:layout_marginTop=\"10dp\"\r\n                android:layout_marginEnd=\"20dp\"\r\n                android:background=\"@drawable/round_background_border_gray\"\r\n                android:fontFamily=\"@font/spoqa_medium\"\r\n                android:maxLines=\"1\"\r\n                android:maxLength=\"20\"\r\n                android:gravity=\"left\"\r\n                android:hint=\" 제목\"\r\n                android:padding=\"10dp\"\r\n                android:textColorHint=\"@color/gray_2\"\r\n                android:textColor=\"@color/top\"\r\n                android:textSize=\"20sp\"\r\n                app:layout_constraintEnd_toEndOf=\"parent\"\r\n                app:layout_constraintStart_toStartOf=\"parent\"\r\n                app:layout_constraintTop_toBottomOf=\"@id/delivery_party_update_together_check_btn\" />\r\n\r\n            <EditText\r\n                android:id=\"@+id/delivery_party_update_content_et\"\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"180dp\"\r\n                android:layout_marginStart=\"5dp\"\r\n                android:layout_marginTop=\"12dp\"\r\n                android:background=\"@null\"\r\n                android:fontFamily=\"@font/spoqa_regular\"\r\n                android:gravity=\"top\"\r\n                android:hint=\"내용을 입력하세요\"\r\n                android:maxLength=\"500\"\r\n                android:textColorHint=\"@color/gray_1\"\r\n                android:textColor=\"@color/gray\"\r\n                android:textSize=\"15sp\"\r\n                app:layout_constraintEnd_toEndOf=\"@id/delivery_party_update_title_et\"\r\n                app:layout_constraintStart_toStartOf=\"@id/delivery_party_update_title_et\"\r\n                app:layout_constraintTop_toBottomOf=\"@id/delivery_party_update_title_et\" />\r\n\r\n            <View\r\n                android:id=\"@+id/delivery_party_update_content_underscore_view\"\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"18dp\"\r\n                android:layout_marginTop=\"10dp\"\r\n                android:background=\"@color/line\"\r\n                app:layout_constraintEnd_toEndOf=\"parent\"\r\n                app:layout_constraintStart_toStartOf=\"parent\"\r\n                app:layout_constraintTop_toBottomOf=\"@id/delivery_party_update_content_et\" />\r\n\r\n\r\n            <!--주문 예정 시간-->\r\n            <TextView\r\n                android:id=\"@+id/delivery_party_update_date_tv\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginStart=\"28dp\"\r\n                android:fontFamily=\"@font/spoqa_medium\"\r\n                android:text=\"주문 예정 시간\"\r\n                android:textColor=\"@color/top\"\r\n                android:textSize=\"15sp\"\r\n                app:layout_constraintStart_toStartOf=\"parent\"\r\n                app:layout_constraintTop_toTopOf=\"@id/delivery_party_update_date2_tv\" />\r\n\r\n            <TextView\r\n                android:layout_marginTop=\"20dp\"\r\n                android:id=\"@+id/delivery_party_update_date2_tv\"\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"38dp\"\r\n                android:layout_marginStart=\"40dp\"\r\n                android:gravity=\"center_vertical\"\r\n                android:layout_marginEnd=\"28dp\"\r\n                android:backgroundTint=\"#F8F8F8\"\r\n                android:background=\"@drawable/round_border\"\r\n                android:clickable=\"true\"\r\n                android:padding=\"7dp\"\r\n                android:paddingStart=\"16dp\"\r\n                android:paddingEnd=\"15dp\"\r\n                android:textColor=\"#2F2F2F\"\r\n                android:textSize=\"13sp\"\r\n                android:fontFamily=\"@font/spoqa_regular\"\r\n                android:text=\"05월 05일 23시 00분\"\r\n                app:layout_constraintEnd_toEndOf=\"parent\"\r\n                app:layout_constraintStart_toEndOf=\"@id/delivery_party_update_date_tv\"\r\n                app:layout_constraintTop_toBottomOf=\"@id/delivery_party_update_content_underscore_view\"/>\r\n\r\n            <ImageView\r\n                android:id=\"@+id/delivery_party_date_update_edit_btn\"\r\n                android:layout_width=\"14dp\"\r\n                android:layout_height=\"14dp\"\r\n                android:src=\"@drawable/ic_pencil\"\r\n                app:layout_constraintTop_toTopOf=\"@id/delivery_party_update_date2_tv\"\r\n                app:layout_constraintBottom_toBottomOf=\"@id/delivery_party_update_date2_tv\"\r\n                app:layout_constraintEnd_toEndOf=\"@id/delivery_party_update_date2_tv\"\r\n                android:layout_marginEnd=\"14dp\"/>\r\n\r\n            <!--매칭 인원 선택-->\r\n            <TextView\r\n                android:id=\"@+id/delivery_party_update_number_tv\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:fontFamily=\"@font/spoqa_medium\"\r\n                android:text=\"매칭 인원 선택\"\r\n                android:textColor=\"@color/top\"\r\n                android:textSize=\"15sp\"\r\n                app:layout_constraintStart_toStartOf=\"@id/delivery_party_update_date_tv\"\r\n                app:layout_constraintTop_toTopOf=\"@id/delivery_party_update_number2_tv\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/delivery_party_update_number2_tv\"\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"38dp\"\r\n                android:gravity=\"center_vertical\"\r\n                android:backgroundTint=\"#F8F8F8\"\r\n                android:background=\"@drawable/round_border\"\r\n                android:padding=\"7dp\"\r\n                android:layout_marginTop=\"16dp\"\r\n                android:text=\"0/0\"\r\n                android:paddingStart=\"16dp\"\r\n                android:paddingEnd=\"15dp\"\r\n                android:textSize=\"13sp\"\r\n                android:textColor=\"#2F2F2F\"\r\n                android:fontFamily=\"@font/spoqa_regular\"\r\n                app:layout_constraintEnd_toEndOf=\"@id/delivery_party_update_date2_tv\"\r\n                app:layout_constraintStart_toStartOf=\"@id/delivery_party_update_date2_tv\"\r\n                app:layout_constraintTop_toBottomOf=\"@id/delivery_party_update_date2_tv\" />\r\n\r\n            <ImageView\r\n                android:id=\"@+id/delivery_party_update_number_edit_btn\"\r\n                android:layout_width=\"14dp\"\r\n                android:layout_height=\"14dp\"\r\n                android:src=\"@drawable/ic_pencil\"\r\n                app:layout_constraintTop_toTopOf=\"@id/delivery_party_update_number2_tv\"\r\n                app:layout_constraintBottom_toBottomOf=\"@id/delivery_party_update_number2_tv\"\r\n                app:layout_constraintEnd_toEndOf=\"@id/delivery_party_update_number2_tv\"\r\n                android:layout_marginEnd=\"14dp\"/>\r\n\r\n            <!--카테고리 선택-->\r\n            <TextView\r\n                android:id=\"@+id/delivery_party_update_category_tv\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:fontFamily=\"@font/spoqa_medium\"\r\n                android:text=\"카테고리 선택\"\r\n                android:textColor=\"@color/top\"\r\n                android:textSize=\"15sp\"\r\n                app:layout_constraintTop_toTopOf=\"@id/delivery_party_update_category2_tv\"\r\n                app:layout_constraintStart_toStartOf=\"@id/delivery_party_update_date_tv\"\r\n                />\r\n\r\n            <TextView\r\n                android:id=\"@+id/delivery_party_update_category2_tv\"\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"38dp\"\r\n                android:gravity=\"center_vertical\"\r\n                android:backgroundTint=\"#F8F8F8\"\r\n                android:background=\"@drawable/round_border\"\r\n                android:padding=\"7dp\"\r\n                android:text=\"한식\"\r\n                android:paddingStart=\"15dp\"\r\n                android:paddingEnd=\"15dp\"\r\n                android:layout_marginTop=\"16dp\"\r\n                android:textColor=\"#2F2F2F\"\r\n                android:textSize=\"13sp\"\r\n                android:fontFamily=\"@font/spoqa_regular\"\r\n                app:layout_constraintTop_toBottomOf=\"@id/delivery_party_update_number2_tv\"\r\n                app:layout_constraintEnd_toEndOf=\"@id/delivery_party_update_date2_tv\"\r\n                app:layout_constraintStart_toStartOf=\"@id/delivery_party_update_date2_tv\"\r\n                />\r\n\r\n            <ImageView\r\n                android:id=\"@+id/delivery_party_update_category_edit_btn\"\r\n                android:layout_width=\"14dp\"\r\n                android:layout_height=\"14dp\"\r\n                android:src=\"@drawable/ic_pencil\"\r\n                app:layout_constraintTop_toTopOf=\"@id/delivery_party_update_category2_tv\"\r\n                app:layout_constraintBottom_toBottomOf=\"@id/delivery_party_update_category2_tv\"\r\n                app:layout_constraintEnd_toEndOf=\"@id/delivery_party_update_category2_tv\"\r\n                android:layout_marginEnd=\"14dp\"/>\r\n\r\n            <!--식당링크 선택-->\r\n            <TextView\r\n                android:id=\"@+id/delivery_party_update_link_tv\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:fontFamily=\"@font/spoqa_medium\"\r\n                android:text=\"식당 링크\"\r\n                android:textColor=\"@color/top\"\r\n                android:textSize=\"15sp\"\r\n                app:layout_constraintStart_toStartOf=\"@id/delivery_party_update_date_tv\"\r\n                app:layout_constraintTop_toTopOf=\"@id/delivery_party_update_link2_tv\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/delivery_party_update_link2_tv\"\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"38dp\"\r\n                android:gravity=\"center_vertical\"\r\n                android:backgroundTint=\"#F8F8F8\"\r\n                android:background=\"@drawable/round_border\"\r\n                android:padding=\"7dp\"\r\n                android:text=\"url\"\r\n                android:paddingStart=\"15dp\"\r\n                android:paddingEnd=\"15dp\"\r\n                android:layout_marginTop=\"16dp\"\r\n                android:textSize=\"13sp\"\r\n                android:textColor=\"#2F2F2F\"\r\n                android:fontFamily=\"@font/spoqa_regular\"\r\n                app:layout_constraintTop_toBottomOf=\"@id/delivery_party_update_category2_tv\"\r\n                app:layout_constraintEnd_toEndOf=\"@id/delivery_party_update_date2_tv\"\r\n                app:layout_constraintStart_toStartOf=\"@id/delivery_party_update_date2_tv\"\r\n                />\r\n\r\n            <ImageView\r\n                android:id=\"@+id/delivery_party_update_link_edit_btn\"\r\n                android:layout_width=\"14dp\"\r\n                android:layout_height=\"14dp\"\r\n                android:src=\"@drawable/ic_pencil\"\r\n                app:layout_constraintTop_toTopOf=\"@id/delivery_party_update_link2_tv\"\r\n                app:layout_constraintBottom_toBottomOf=\"@id/delivery_party_update_link2_tv\"\r\n                app:layout_constraintEnd_toEndOf=\"@id/delivery_party_update_link2_tv\"\r\n                android:layout_marginEnd=\"14dp\"/>\r\n\r\n            <!--수령장소 선택-->\r\n            <TextView\r\n                android:id=\"@+id/delivery_party_update_location_tv\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:fontFamily=\"@font/spoqa_medium\"\r\n                android:text=\"수령 장소\"\r\n                android:textColor=\"@color/top\"\r\n                android:textSize=\"15sp\"\r\n                app:layout_constraintTop_toTopOf=\"@id/delivery_party_update_location2_tv\"\r\n                app:layout_constraintStart_toStartOf=\"@id/delivery_party_update_date_tv\"\r\n                app:layout_constraintTop_toBottomOf=\"@id/delivery_party_update_link_tv\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/delivery_party_update_location2_tv\"\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"38dp\"\r\n                android:gravity=\"center_vertical\"\r\n                android:backgroundTint=\"#F8F8F8\"\r\n                android:background=\"@drawable/round_border\"\r\n                android:padding=\"7dp\"\r\n                android:text=\"제 1기숙사 후문\"\r\n                android:singleLine=\"true\"\r\n                android:ellipsize=\"marquee\"\r\n                android:marqueeRepeatLimit=\"marquee_forever\"\r\n                android:paddingStart=\"15dp\"\r\n                android:paddingEnd=\"15dp\"\r\n                android:layout_marginTop=\"16dp\"\r\n                android:textSize=\"13sp\"\r\n                android:textColor=\"#2F2F2F\"\r\n                android:fontFamily=\"@font/spoqa_regular\"\r\n                app:layout_constraintEnd_toEndOf=\"@id/delivery_party_update_date2_tv\"\r\n                app:layout_constraintStart_toStartOf=\"@id/delivery_party_update_date2_tv\"\r\n                app:layout_constraintTop_toBottomOf=\"@id/delivery_party_update_link2_tv\" />\r\n\r\n            <ImageView\r\n                android:id=\"@+id/delivery_party_update_location_edit_btn\"\r\n                android:layout_width=\"14dp\"\r\n                android:layout_height=\"14dp\"\r\n                android:src=\"@drawable/ic_pencil\"\r\n                app:layout_constraintTop_toTopOf=\"@id/delivery_party_update_location2_tv\"\r\n                app:layout_constraintBottom_toBottomOf=\"@id/delivery_party_update_location2_tv\"\r\n                app:layout_constraintEnd_toEndOf=\"@id/delivery_party_update_location2_tv\"\r\n                android:layout_marginEnd=\"14dp\"/>\r\n\r\n\r\n            <androidx.constraintlayout.widget.ConstraintLayout\r\n                android:id=\"@+id/delivery_party_update_kakaoMap_location\"\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"122dp\"\r\n                android:layout_marginTop=\"15dp\"\r\n                android:backgroundTint=\"@color/gray_0\"\r\n                android:background=\"@drawable/round_border\"\r\n                app:layout_constraintStart_toStartOf=\"@id/delivery_party_update_location_tv\"\r\n                app:layout_constraintEnd_toEndOf=\"@id/delivery_party_update_location2_tv\"\r\n                app:layout_constraintTop_toBottomOf=\"@id/delivery_party_update_location2_tv\"\r\n                app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                android:layout_marginBottom=\"20dp\"/>\r\n\r\n        </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n\r\n    </ScrollView>\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_delivery_party_update.xml b/app/src/main/res/layout/fragment_delivery_party_update.xml
--- a/app/src/main/res/layout/fragment_delivery_party_update.xml	(revision 9a6d2fb73b6b97446c2444eee7761ce69ba150fe)
+++ b/app/src/main/res/layout/fragment_delivery_party_update.xml	(date 1659339261020)
@@ -54,7 +54,7 @@
     </androidx.constraintlayout.widget.ConstraintLayout>
 
 
-    <ScrollView
+    <androidx.core.widget.NestedScrollView
         android:id="@+id/delivery_party_update_sv"
         android:layout_width="match_parent"
         android:layout_marginTop="30dp"
@@ -113,24 +113,39 @@
                 app:layout_constraintStart_toStartOf="parent"
                 app:layout_constraintTop_toBottomOf="@id/delivery_party_update_together_check_btn" />
 
-            <EditText
-                android:id="@+id/delivery_party_update_content_et"
+            <androidx.core.widget.NestedScrollView
+                android:id="@+id/delivery_party_update_content_sv"
                 android:layout_width="0dp"
                 android:layout_height="180dp"
                 android:layout_marginStart="5dp"
+                android:layout_marginEnd="5dp"
                 android:layout_marginTop="12dp"
-                android:background="@null"
-                android:fontFamily="@font/spoqa_regular"
-                android:gravity="top"
-                android:hint="내용을 입력하세요"
-                android:maxLength="500"
-                android:textColorHint="@color/gray_1"
-                android:textColor="@color/gray"
-                android:textSize="15sp"
-                app:layout_constraintEnd_toEndOf="@id/delivery_party_update_title_et"
-                app:layout_constraintStart_toStartOf="@id/delivery_party_update_title_et"
-                app:layout_constraintTop_toBottomOf="@id/delivery_party_update_title_et" />
+                android:scrollbars="vertical"
+                app:layout_constraintEnd_toEndOf="@id/delivery_party_update_title_et"
+                app:layout_constraintStart_toStartOf="@id/delivery_party_update_title_et"
+                app:layout_constraintTop_toBottomOf="@id/delivery_party_update_title_et"
+                >
+
+                <EditText
+                    android:id="@+id/delivery_party_update_content_et"
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:background="@null"
+                    android:fontFamily="@font/spoqa_regular"
+                    android:gravity="top"
+                    android:hint="내용을 입력하세요"
+                    android:scrollbars = "vertical"
+                    android:maxLength="500"
+                    android:textColorHint="@color/gray_1"
+                    android:textColor="@color/gray"
+                    android:textSize="15sp"
+                    app:layout_constraintEnd_toEndOf="@id/delivery_party_update_title_et"
+                    app:layout_constraintStart_toStartOf="@id/delivery_party_update_title_et"
+                    app:layout_constraintTop_toBottomOf="@id/delivery_party_update_title_et" />
 
+
+            </androidx.core.widget.NestedScrollView>
+
             <View
                 android:id="@+id/delivery_party_update_content_underscore_view"
                 android:layout_width="0dp"
@@ -139,7 +154,7 @@
                 android:background="@color/line"
                 app:layout_constraintEnd_toEndOf="parent"
                 app:layout_constraintStart_toStartOf="parent"
-                app:layout_constraintTop_toBottomOf="@id/delivery_party_update_content_et" />
+                app:layout_constraintTop_toBottomOf="@id/delivery_party_update_content_sv" />
 
 
             <!--주문 예정 시간-->
@@ -168,7 +183,7 @@
                 android:clickable="true"
                 android:padding="7dp"
                 android:paddingStart="16dp"
-                android:paddingEnd="15dp"
+                android:paddingEnd="18dp"
                 android:textColor="#2F2F2F"
                 android:textSize="13sp"
                 android:fontFamily="@font/spoqa_regular"
@@ -292,8 +307,9 @@
                 android:background="@drawable/round_border"
                 android:padding="7dp"
                 android:text="url"
+                android:singleLine="true"
                 android:paddingStart="15dp"
-                android:paddingEnd="15dp"
+                android:paddingEnd="18dp"
                 android:layout_marginTop="16dp"
                 android:textSize="13sp"
                 android:textColor="#2F2F2F"
@@ -336,10 +352,8 @@
                 android:padding="7dp"
                 android:text="제 1기숙사 후문"
                 android:singleLine="true"
-                android:ellipsize="marquee"
-                android:marqueeRepeatLimit="marquee_forever"
                 android:paddingStart="15dp"
-                android:paddingEnd="15dp"
+                android:paddingEnd="18dp"
                 android:layout_marginTop="16dp"
                 android:textSize="13sp"
                 android:textColor="#2F2F2F"
@@ -375,6 +389,6 @@
         </androidx.constraintlayout.widget.ConstraintLayout>
 
 
-    </ScrollView>
+    </androidx.core.widget.NestedScrollView>
 
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/geeksasaeng/Home/Delivery/Adapter/BannerVPAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.geeksasaeng.Home.Delivery.Adapter\r\n\r\nimport android.util.Log\r\nimport androidx.fragment.app.Fragment\r\nimport androidx.viewpager2.adapter.FragmentStateAdapter\r\n\r\nclass BannerVPAdapter(fragment:Fragment) :FragmentStateAdapter(fragment) {\r\n\r\n    private val fragmentlist : ArrayList<Fragment> = ArrayList()\r\n\r\n    override fun getItemCount(): Int = Int.MAX_VALUE //무한 스크롤\r\n\r\n    override fun createFragment(position: Int): Fragment = fragmentlist[position%fragmentlist.size]\r\n\r\n    fun addFragment(fragment: Fragment){\r\n        fragmentlist.add(fragment)\r\n        notifyItemInserted(fragmentlist.size-1)\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/geeksasaeng/Home/Delivery/Adapter/BannerVPAdapter.kt b/app/src/main/java/com/example/geeksasaeng/Home/Delivery/Adapter/BannerVPAdapter.kt
--- a/app/src/main/java/com/example/geeksasaeng/Home/Delivery/Adapter/BannerVPAdapter.kt	(revision 9a6d2fb73b6b97446c2444eee7761ce69ba150fe)
+++ b/app/src/main/java/com/example/geeksasaeng/Home/Delivery/Adapter/BannerVPAdapter.kt	(date 1659339260898)
@@ -1,20 +1,26 @@
 package com.example.geeksasaeng.Home.Delivery.Adapter
 
+import android.os.Bundle
 import android.util.Log
 import androidx.fragment.app.Fragment
 import androidx.viewpager2.adapter.FragmentStateAdapter
+import com.example.geeksasaeng.Home.Delivery.BannerFragment
 
 class BannerVPAdapter(fragment:Fragment) :FragmentStateAdapter(fragment) {
 
-    private val fragmentlist : ArrayList<Fragment> = ArrayList()
+    private val fragmentList : ArrayList<BannerFragment> = ArrayList()
 
     override fun getItemCount(): Int = Int.MAX_VALUE //무한 스크롤
 
-    override fun createFragment(position: Int): Fragment = fragmentlist[position%fragmentlist.size]
+    override fun createFragment(position: Int): BannerFragment = fragmentList[position%fragmentList.size]
 
-    fun addFragment(fragment: Fragment){
-        fragmentlist.add(fragment)
-        notifyItemInserted(fragmentlist.size-1)
+    fun addFragment(imgUrl: String){
+        val bundle = Bundle()
+        bundle.putString("imgUrl", imgUrl)
+        val frag = BannerFragment()
+        frag.arguments = bundle
+        fragmentList.add(fragmentList.size, frag)
+        notifyItemInserted(fragmentList.size-1)
     }
 
 }
\ No newline at end of file
Index: app/src/main/java/com/example/geeksasaeng/Home/Delivery/BannerFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.geeksasaeng.Home.Delivery\r\n\r\nimport android.util.Log\r\nimport com.bumptech.glide.Glide\r\nimport com.example.geeksasaeng.Utils.BaseFragment\r\nimport com.example.geeksasaeng.databinding.FragmentBannerBinding\r\n\r\nclass BannerFragment(val imgUrl: String) : BaseFragment<FragmentBannerBinding>(FragmentBannerBinding::inflate) {\r\n    override fun initAfterBinding() {\r\n       /* binding.bannerImageIv.setImageResource(imgUrl)*/\r\n\r\n        Glide.with(this)\r\n            .load(imgUrl)\r\n            .into(binding.bannerImageIv)\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/geeksasaeng/Home/Delivery/BannerFragment.kt b/app/src/main/java/com/example/geeksasaeng/Home/Delivery/BannerFragment.kt
--- a/app/src/main/java/com/example/geeksasaeng/Home/Delivery/BannerFragment.kt	(revision 9a6d2fb73b6b97446c2444eee7761ce69ba150fe)
+++ b/app/src/main/java/com/example/geeksasaeng/Home/Delivery/BannerFragment.kt	(date 1659339260906)
@@ -5,10 +5,9 @@
 import com.example.geeksasaeng.Utils.BaseFragment
 import com.example.geeksasaeng.databinding.FragmentBannerBinding
 
-class BannerFragment(val imgUrl: String) : BaseFragment<FragmentBannerBinding>(FragmentBannerBinding::inflate) {
+class BannerFragment() : BaseFragment<FragmentBannerBinding>(FragmentBannerBinding::inflate) {
     override fun initAfterBinding() {
-       /* binding.bannerImageIv.setImageResource(imgUrl)*/
-
+        val imgUrl = requireArguments().getString("imgUrl")
         Glide.with(this)
             .load(imgUrl)
             .into(binding.bannerImageIv)
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/Users/jimin/.gradle/caches/transforms-3/65c4e1953584d4eb753df5c7e540eaf2/transformed/oauth-5.1.1/res/layout/nid_progress_dialog.xml\" value=\"0.11928174433518597\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/drawable/data.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/drawable/ic_home.xml\" value=\"0.219\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/drawable/ic_logo.xml\" value=\"0.219\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/drawable/ic_logo_bottom.xml\" value=\"0.219\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/drawable/ic_logo_top.xml\" value=\"0.219\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/drawable/round_background_border.xml\" value=\"0.23\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/drawable/seekbar.xml\" value=\"0.23\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/drawable/seekbar_color.xml\" value=\"0.23\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/drawable/signup_btn.xml\" value=\"0.23\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/drawable/signup_btn_border.xml\" value=\"0.23\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/activity_create_party.xml\" value=\"0.20478837109876016\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/activity_delivery_party_report_no_option.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/activity_delivery_party_report_option.xml\" value=\"0.20478837109876016\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/activity_dormitory.xml\" value=\"0.4\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/activity_login.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/activity_main.xml\" value=\"0.20478837109876016\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/activity_party_report_no_option.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/activity_party_report_option.xml\" value=\"0.4\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/activity_search.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/activity_search_Result.xml\" value=\"0.20478837109876016\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/activity_search_result.xml\" value=\"0.2\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/activity_sign_up.xml\" value=\"0.18253968253968253\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/activity_sign_up_naver.xml\" value=\"0.24947916666666667\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/activity_splash.xml\" value=\"0.12864583333333332\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/dialog_category_layout.xml\" value=\"0.20478837109876016\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/dialog_delivery_delete.xml\" value=\"0.536\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/dialog_delivery_option_my_popup.xml\" value=\"0.12227447627191107\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/dialog_delivery_option_other_popup.xml\" value=\"0.4\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/dialog_delivery_option_popup.xml\" value=\"0.4\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/dialog_dt_layout.xml\" value=\"0.20478837109876016\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/dialog_location_layout.xml\" value=\"0.20478837109876016\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/dialog_num_layout.xml\" value=\"0.4\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/dialog_signup_email_check.xml\" value=\"0.536\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/dialog_signup_phone_skip.xml\" value=\"0.536\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/fragment_banner.xml\" value=\"0.20478837109876016\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/fragment_chatting.xml\" value=\"0.20478837109876016\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/fragment_delivery.xml\" value=\"0.16799999999999998\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/fragment_delivery_party_delete.xml\" value=\"0.20478837109876016\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/fragment_delivery_party_report.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/fragment_delivery_party_report_no_option.xml\" value=\"0.20478837109876016\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/fragment_delivery_party_report_option.xml\" value=\"0.176\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/fragment_delivery_party_update.xml\" value=\"0.20478837109876016\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/fragment_helper.xml\" value=\"0.20478837109876016\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/fragment_home.xml\" value=\"0.20478837109876016\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/fragment_look_party.xml\" value=\"0.2\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/fragment_market.xml\" value=\"0.20478837109876016\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/fragment_profile.xml\" value=\"0.20478837109876016\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/fragment_search_detail.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/fragment_step_five.xml\" value=\"0.24947916666666667\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/fragment_step_fix.xml\" value=\"0.24947916666666667\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/fragment_step_four.xml\" value=\"0.536\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/fragment_step_naver_one.xml\" value=\"0.4\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/fragment_step_naver_three.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/fragment_step_naver_two.xml\" value=\"0.24947916666666667\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/fragment_step_one.xml\" value=\"0.536\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/fragment_step_three.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/fragment_step_two.xml\" value=\"0.4\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/item_delivery.xml\" value=\"0.4\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/item_delivery_people_spinner.xml\" value=\"1.2\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/item_loading.xml\" value=\"0.20478837109876016\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/item_ranking_search.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/item_recent_search.xml\" value=\"1.6\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/item_signup_university_spinner.xml\" value=\"0.20478837109876016\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/toast_msg_signup.xml\" value=\"0.6\" />\r\n        <entry key=\"..\\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/menu/delivery_popup_menu.xml\" value=\"0.20478837109876016\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/bg_gradient.xml\" value=\"0.1345\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/blue_box.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/bottom_navi_chat.xml\" value=\"0.165\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/bottom_navi_community.xml\" value=\"0.165\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/bottom_navi_home.xml\" value=\"0.1345\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/bottom_navi_next.xml\" value=\"0.165\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/bottom_navi_profile.xml\" value=\"0.1345\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/bottom_navi_report.xml\" value=\"0.165\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/check_btn.xml\" value=\"0.1635\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/ic_back.xml\" value=\"0.1225\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/ic_background_logo.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/ic_baseline_keyboard_arrow_down_24.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/ic_chat.xml\" value=\"0.1345\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/ic_check_gray.xml\" value=\"0.1635\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/ic_circle_blue.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/ic_community.xml\" value=\"0.1635\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/ic_floating_btn.xml\" value=\"0.1605\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/ic_home.xml\" value=\"0.1635\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/ic_icon_home.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/ic_profile.xml\" value=\"0.165\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/ic_report.xml\" value=\"0.1345\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/ic_search.xml\" value=\"0.1345\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/ic_sort.xml\" value=\"0.1345\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/ic_spinner_down.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/ic_spinner_up.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/round_background_border.xml\" value=\"0.159\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/round_border.xml\" value=\"0.1015\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/round_border_large.xml\" value=\"0.1325\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/round_corner.xml\" value=\"0.1015\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/selector_button.xml\" value=\"0.16666666666666666\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/selector_button_text.xml\" value=\"0.1215\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/selector_checkbox.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/selector_radio_button.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/selector_radio_text.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/selector_text_color.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/selector_time_radiobtn_text.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/spinner_outline.xml\" value=\"0.1065\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/spinner_outline_clicked.xml\" value=\"0.12\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/spinner_outline_unclicked.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/drawable/tab_underline.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/activity_create_party.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/activity_dormitory.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/activity_login.xml\" value=\"0.16354166666666667\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/activity_main.xml\" value=\"0.17916666666666667\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/activity_sign_up.xml\" value=\"0.12092391304347826\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/activity_sign_up_naver.xml\" value=\"0.11979166666666667\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/activity_signup_skip_popup.xml\" value=\"0.17916666666666667\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/dialog_category_layout.xml\" value=\"0.16666666666666666\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/dialog_dt_layout.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/dialog_link_layout.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/dialog_location_layout.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/dialog_num_layout.xml\" value=\"0.17916666666666667\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/dialog_signup_email_check.xml\" value=\"0.5\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/dialog_signup_phone_skip.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/fragment_banner.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/fragment_chatting.xml\" value=\"0.17916666666666667\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/fragment_community.xml\" value=\"0.17916666666666667\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/fragment_create_party.xml\" value=\"0.12\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/fragment_delivery.xml\" value=\"0.14666666666666667\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/fragment_delivery_party_update.xml\" value=\"0.20848056537102475\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/fragment_dialog_link.xml\" value=\"0.128125\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/fragment_helper.xml\" value=\"0.1640625\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/fragment_home.xml\" value=\"0.12236286919831224\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/fragment_look_party.xml\" value=\"0.16666666666666666\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/fragment_step_five.xml\" value=\"0.14583333333333334\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/fragment_step_four.xml\" value=\"0.13333333333333333\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/fragment_step_one.xml\" value=\"0.16666666666666666\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/fragment_step_three.xml\" value=\"0.1484375\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/fragment_step_two.xml\" value=\"0.17916666666666667\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/item_delivery.xml\" value=\"0.12092391304347826\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/item_delivery_people_spinner.xml\" value=\"0.4466666666666667\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/item_spinner.xml\" value=\"0.6\" />\r\n        <entry key=\"..\\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/toast_msg_signup.xml\" value=\"0.1640625\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/drawable-v24/ic_launcher_foreground.xml\" value=\"0.386\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/drawable/ic_back.xml\" value=\"0.386\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/drawable/ic_baseline_keyboard_arrow_down_24.xml\" value=\"0.386\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/drawable/ic_chat.xml\" value=\"0.386\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/drawable/ic_community.xml\" value=\"0.386\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/drawable/ic_floating_btn.xml\" value=\"0.386\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/drawable/ic_home.xml\" value=\"0.386\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/drawable/ic_launcher_background.xml\" value=\"0.386\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/drawable/ic_logo.xml\" value=\"0.386\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/drawable/ic_logo_bottom.xml\" value=\"0.386\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/drawable/ic_logo_top.xml\" value=\"0.386\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/drawable/ic_member_blue.xml\" value=\"0.386\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/drawable/ic_member_gray.xml\" value=\"0.386\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/drawable/ic_member_white.xml\" value=\"0.386\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/drawable/ic_next.xml\" value=\"0.386\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/drawable/ic_spinner_up.xml\" value=\"0.386\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/drawable/round_background_border.xml\" value=\"0.386\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/drawable/round_background_border_gray.xml\" value=\"0.386\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/drawable/round_border.xml\" value=\"0.386\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/drawable/round_border_large.xml\" value=\"0.386\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/drawable/round_corner.xml\" value=\"0.386\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/drawable/selector_radio_button.xml\" value=\"0.386\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/drawable/selector_radio_text.xml\" value=\"0.386\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/drawable/shadow.xml\" value=\"0.386\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/drawable/spinner_outline_clicked.xml\" value=\"0.386\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/drawable/spinner_outline_unclicked.xml\" value=\"0.386\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/drawable/tab_underline.xml\" value=\"0.386\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/layout/activity_login.xml\" value=\"0.31680205215904234\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/layout/activity_main.xml\" value=\"0.5536458333333333\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/layout/activity_sign_up.xml\" value=\"0.45446772124839674\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/layout/activity_sign_up_naver.xml\" value=\"0.5\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/layout/dialog_category_layout.xml\" value=\"0.31680205215904234\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/layout/dialog_dt_layout.xml\" value=\"0.45446772124839674\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/layout/dialog_location_layout.xml\" value=\"0.45446772124839674\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/layout/dialog_num_layout.xml\" value=\"0.75\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/layout/dialog_signup_email_check.xml\" value=\"0.67\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/layout/dialog_signup_phone_skip.xml\" value=\"0.45446772124839674\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/layout/fragment_banner.xml\" value=\"0.31680205215904234\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/layout/fragment_chatting.xml\" value=\"0.31680205215904234\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/layout/fragment_community.xml\" value=\"0.31680205215904234\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/layout/fragment_create_party.xml\" value=\"0.31680205215904234\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/layout/fragment_delivery.xml\" value=\"0.67\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/layout/fragment_example.xml\" value=\"0.31680205215904234\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/layout/fragment_helper.xml\" value=\"0.31680205215904234\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/layout/fragment_home.xml\" value=\"0.31680205215904234\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/layout/fragment_look_party.xml\" value=\"0.31680205215904234\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/layout/fragment_market.xml\" value=\"0.31680205215904234\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/layout/fragment_profile.xml\" value=\"0.31680205215904234\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/layout/fragment_step_five.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/layout/fragment_step_four.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/layout/fragment_step_naver_one.xml\" value=\"0.5606653620352251\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/layout/fragment_step_naver_three.xml\" value=\"0.31680205215904234\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/layout/fragment_step_naver_two.xml\" value=\"0.38349954669084313\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/layout/fragment_step_one.xml\" value=\"0.5\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/layout/fragment_step_three.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/layout/fragment_step_two.xml\" value=\"0.2740740740740741\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/layout/item_delivery.xml\" value=\"0.31680205215904234\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/layout/item_spinner.xml\" value=\"1.0\" />\r\n        <entry key=\"..\\:/Users/wlgur/Desktop/JM/Android Project/Geek_sasaeng-Android/app/src/main/res/layout/toast_msg_signup.xml\" value=\"1.25\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"11\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 9a6d2fb73b6b97446c2444eee7761ce69ba150fe)
+++ b/.idea/misc.xml	(date 1659339260883)
@@ -14,14 +14,8 @@
         <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/drawable/seekbar_color.xml" value="0.23" />
         <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/drawable/signup_btn.xml" value="0.23" />
         <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/drawable/signup_btn_border.xml" value="0.23" />
-        <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/activity_create_party.xml" value="0.20478837109876016" />
-        <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/activity_delivery_party_report_no_option.xml" value="0.1" />
-        <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/activity_delivery_party_report_option.xml" value="0.20478837109876016" />
-        <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/activity_dormitory.xml" value="0.4" />
         <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/activity_login.xml" value="0.1" />
         <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/activity_main.xml" value="0.20478837109876016" />
-        <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/activity_party_report_no_option.xml" value="0.264" />
-        <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/activity_party_report_option.xml" value="0.4" />
         <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/activity_search.xml" value="0.264" />
         <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/activity_search_Result.xml" value="0.20478837109876016" />
         <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/activity_search_result.xml" value="0.2" />
@@ -29,9 +23,6 @@
         <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/activity_sign_up_naver.xml" value="0.24947916666666667" />
         <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/activity_splash.xml" value="0.12864583333333332" />
         <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/dialog_category_layout.xml" value="0.20478837109876016" />
-        <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/dialog_delivery_delete.xml" value="0.536" />
-        <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/dialog_delivery_option_my_popup.xml" value="0.12227447627191107" />
-        <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/dialog_delivery_option_other_popup.xml" value="0.4" />
         <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/dialog_delivery_option_popup.xml" value="0.4" />
         <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/dialog_dt_layout.xml" value="0.20478837109876016" />
         <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/dialog_location_layout.xml" value="0.20478837109876016" />
@@ -48,10 +39,9 @@
         <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/fragment_delivery_party_update.xml" value="0.20478837109876016" />
         <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/fragment_helper.xml" value="0.20478837109876016" />
         <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/fragment_home.xml" value="0.20478837109876016" />
-        <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/fragment_look_party.xml" value="0.2" />
+        <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/fragment_look_party.xml" value="0.152" />
         <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/fragment_market.xml" value="0.20478837109876016" />
         <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/fragment_profile.xml" value="0.20478837109876016" />
-        <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/fragment_search_detail.xml" value="0.264" />
         <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/fragment_step_five.xml" value="0.24947916666666667" />
         <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/fragment_step_fix.xml" value="0.24947916666666667" />
         <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/fragment_step_four.xml" value="0.536" />
@@ -61,10 +51,10 @@
         <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/fragment_step_one.xml" value="0.536" />
         <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/fragment_step_three.xml" value="0.264" />
         <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/fragment_step_two.xml" value="0.4" />
-        <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/item_delivery.xml" value="0.4" />
+        <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/item_delivery.xml" value="0.6" />
         <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/item_delivery_people_spinner.xml" value="1.2" />
         <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/item_loading.xml" value="0.20478837109876016" />
-        <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/item_ranking_search.xml" value="0.264" />
+        <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/item_ranking_search.xml" value="0.72" />
         <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/item_recent_search.xml" value="1.6" />
         <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/item_signup_university_spinner.xml" value="0.20478837109876016" />
         <entry key="..\:/Users/jimin/git/Geek_sasaeng-Android/app/src/main/res/layout/toast_msg_signup.xml" value="0.6" />
@@ -112,27 +102,36 @@
         <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/activity_create_party.xml" value="0.22" />
         <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/activity_dormitory.xml" value="0.1" />
         <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/activity_login.xml" value="0.16354166666666667" />
-        <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/activity_main.xml" value="0.17916666666666667" />
+        <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/activity_main.xml" value="0.13333333333333333" />
+        <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/activity_search.xml" value="0.1" />
         <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/activity_sign_up.xml" value="0.12092391304347826" />
         <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/activity_sign_up_naver.xml" value="0.11979166666666667" />
         <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/activity_signup_skip_popup.xml" value="0.17916666666666667" />
         <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/dialog_category_layout.xml" value="0.16666666666666666" />
+        <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/dialog_category_update_layout.xml" value="0.1" />
+        <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/dialog_delivery_delete.xml" value="0.15833333333333333" />
+        <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/dialog_delivery_option_other_popup.xml" value="0.15833333333333333" />
         <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/dialog_dt_layout.xml" value="0.22" />
+        <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/dialog_dt_update_layout.xml" value="0.15833333333333333" />
         <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/dialog_link_layout.xml" value="0.22" />
+        <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/dialog_link_update_layout.xml" value="0.15833333333333333" />
         <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/dialog_location_layout.xml" value="0.22" />
+        <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/dialog_location_layout_update.xml" value="0.3333333333333333" />
         <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/dialog_num_layout.xml" value="0.17916666666666667" />
+        <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/dialog_num_update_layout.xml" value="0.15833333333333333" />
         <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/dialog_signup_email_check.xml" value="0.5" />
         <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/dialog_signup_phone_skip.xml" value="0.22" />
         <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/fragment_banner.xml" value="0.1" />
         <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/fragment_chatting.xml" value="0.17916666666666667" />
         <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/fragment_community.xml" value="0.17916666666666667" />
         <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/fragment_create_party.xml" value="0.12" />
-        <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/fragment_delivery.xml" value="0.14666666666666667" />
-        <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/fragment_delivery_party_update.xml" value="0.20848056537102475" />
+        <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/fragment_delivery.xml" value="0.1" />
+        <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/fragment_delivery_party_update.xml" value="0.1511111111111111" />
         <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/fragment_dialog_link.xml" value="0.128125" />
         <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/fragment_helper.xml" value="0.1640625" />
         <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/fragment_home.xml" value="0.12236286919831224" />
-        <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/fragment_look_party.xml" value="0.16666666666666666" />
+        <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/fragment_look_party.xml" value="0.14583333333333334" />
+        <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/fragment_search_detail.xml" value="0.1" />
         <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/fragment_step_five.xml" value="0.14583333333333334" />
         <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/fragment_step_four.xml" value="0.13333333333333333" />
         <entry key="..\:/Users/ran/Geek/Geek_sasaeng-Android/app/src/main/res/layout/fragment_step_one.xml" value="0.16666666666666666" />
Index: app/src/main/java/com/example/geeksasaeng/Home/Party/CreateParty/CreatePartyActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.geeksasaeng.Home.CreateParty\r\n\r\nimport android.graphics.Color\r\nimport android.location.Geocoder\r\nimport android.text.Editable\r\nimport android.text.TextWatcher\r\nimport android.util.Log\r\nimport android.view.View\r\nimport androidx.core.content.ContextCompat\r\nimport androidx.lifecycle.ViewModelProvider\r\nimport com.example.geeksasaeng.Home.CreateParty.Retrofit.*\r\nimport com.example.geeksasaeng.Home.Party.CreateParty.DialogCategory\r\nimport com.example.geeksasaeng.Home.Party.CreateParty.DialogDt\r\nimport com.example.geeksasaeng.Home.Party.CreateParty.DialogLocation\r\nimport com.example.geeksasaeng.Home.Party.CreateParty.DialogNum\r\nimport com.example.geeksasaeng.MainActivity\r\nimport com.example.geeksasaeng.R\r\nimport com.example.geeksasaeng.Utils.BaseActivity\r\nimport com.example.geeksasaeng.databinding.ActivityCreatePartyBinding\r\nimport net.daum.mf.map.api.MapPOIItem\r\nimport net.daum.mf.map.api.MapPoint\r\nimport net.daum.mf.map.api.MapView\r\nimport java.text.SimpleDateFormat\r\nimport java.util.*\r\n\r\n//TODO: 여기서는 잘하면 CreatePartyDefaultLocView 이거 없이도 가능할지도? 7.30-31에 이 부분 다시 봐보기\r\nclass CreatePartyActivity : BaseActivity<ActivityCreatePartyBinding>(ActivityCreatePartyBinding::inflate), CreatePartyDefaultLocView, CreatePartyView,\r\n    DialogDt.DialogDtNextClickListener, DialogNum.DialogNumNextClickListener, DialogCategory.DialogCategoryNextClickListener, DialogLink.DialogLinkNextClickListener, DialogLocation.DialogLocationNextClickListener {\r\n\r\n    lateinit var mapView : MapView\r\n    lateinit var mapPoint: MapPoint\r\n\r\n    private lateinit var createPartyService: CreatePartyService\r\n    private lateinit var createPartyVM: CreatePartyViewModel\r\n\r\n    override fun initAfterBinding() {\r\n        createPartyVM = ViewModelProvider(this).get(CreatePartyViewModel::class.java)\r\n        binding.createPartyNumber2Tv.isEnabled = false\r\n        binding.createPartyCategory2Tv.isEnabled = false\r\n        binding.createPartyLink2Tv.isEnabled = false\r\n        binding.createPartyLocation2Tv.isEnabled = false\r\n        createPartyService = CreatePartyService() //서비스 객체 생성\r\n        createPartyService.setCreatePartyDefaultLocView(this)\r\n        createPartyService.setCreatePartyView(this)\r\n        initTextWatcher()\r\n        initClickListener()\r\n        initKakaoMap()\r\n    }\r\n\r\n    private fun initTextWatcher(){\r\n        binding.createPartyTitleEt.addTextChangedListener ( object: TextWatcher {\r\n            override fun beforeTextChanged(s: CharSequence?, start: Int, count: Int, after: Int) {}\r\n            override fun onTextChanged(s: CharSequence?, start: Int, before: Int, count: Int) {}\r\n            override fun afterTextChanged(s: Editable?) {\r\n                checking()\r\n            }\r\n        } )\r\n\r\n        binding.createPartyContentEt.addTextChangedListener ( object: TextWatcher {\r\n            override fun beforeTextChanged(s: CharSequence?, start: Int, count: Int, after: Int) {}\r\n            override fun onTextChanged(s: CharSequence?, start: Int, before: Int, count: Int) {}\r\n            override fun afterTextChanged(s: Editable?) {\r\n                checking()\r\n            }\r\n        } )\r\n    }\r\n\r\n    private fun initKakaoMap(){\r\n        Log.d(\"kakaodefault\", \"onstart\")\r\n        createPartyService.getDefaultLoc(1) //★ default 기숙사 위치 불러오는 함수 호출\r\n    }\r\n\r\n\r\n    private fun checking()  {\r\n        //TODO: 왜 등록이 안되는지 정보가 좀 부족한것 같아..!\r\n        Log.d(\"checking\",(binding.createPartyTitleEt.text.length in 1..20).toString()+\"/\"+(binding.createPartyContentEt.text.length in 1..500).toString()+\"/\"+(createPartyVM.getDate2().toString() != \"null\").toString()+\"/\"+\r\n                (createPartyVM.getTime2().toString() != \"null\").toString()+\"/\"+(createPartyVM.getMaxMatching().toString() != \"null\").toString()+\"/\"+\r\n                (createPartyVM.getCategory().toString() != \"null\").toString()+\"/\"+(createPartyVM.getMapPoint().toString() != \"null\").toString())\r\n        if ((binding.createPartyTitleEt.text.length in 1..20)&&\r\n                (binding.createPartyContentEt.text.length in 1..500) &&\r\n                createPartyVM.getDate2().toString() != \"null\" &&\r\n                createPartyVM.getTime2().toString() != \"null\" &&\r\n                compareDate(createPartyVM.getDate2().toString() +\" \"+ createPartyVM.getTime2().toString()) &&\r\n                createPartyVM.getMaxMatching().toString() != \"null\" &&\r\n                createPartyVM.getCategory().toString() != \"null\" &&\r\n                createPartyVM.getMapPoint().toString() != \"null\")\r\n        { // 등록조건이 만족되면,\r\n            binding.createPartyRegisterBtnTv.setTextColor(ContextCompat.getColor(this@CreatePartyActivity, R.color.main))\r\n            if(!binding.createPartyRegisterBtnTv.isEnabled){\r\n                binding.createPartyRegisterBtnTv.isEnabled = true\r\n            }\r\n        }else{\r\n            binding.createPartyRegisterBtnTv.setTextColor((Color.parseColor(\"#BABABA\")))\r\n            binding.createPartyRegisterBtnTv.isEnabled = false\r\n        }\r\n    }\r\n\r\n\r\n    private fun compareDate(time: String): Boolean{ //현재보다 미래인지 체크 위함\r\n        var sdf = SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\")\r\n        val date1 = sdf.parse(time)\r\n        val currentTime = Calendar.getInstance().time\r\n\r\n        Log.d(\"compareDate\", date1.after(currentTime).toString())\r\n        return date1.after(currentTime)\r\n    }\r\n\r\n    private fun initClickListener(){\r\n\r\n        binding.createPartyBackBtnIv.setOnClickListener {\r\n            startActivityWithClear(MainActivity::class.java)\r\n        }\r\n\r\n        binding.createPartyRegisterBtnTv.setOnClickListener { //등록버튼 클릭시\r\n            //TODO: \"2022-07-26 16:29:30\" => 이 시간형식은 어떻게 구할까..\r\n\r\n            Log.d(\"jjang\", binding.createPartyContentEt.text.toString()+\"/\"+  createPartyVM.getCategoryInt()!!.toString()+\"/\"+ binding.createPartyTogetherCheckBtn.isChecked.toString()+\"/\"+  createPartyVM.getMapPoint()!!.mapPointGeoCoord.latitude.toString() +\"/\"+  createPartyVM.getMapPoint()!!.mapPointGeoCoord.longitude.toString()+\"/\"+  createPartyVM.getMaxMatching()!!.toString() +\"/\"+ createPartyVM.getDate2().toString()+ \" \" + createPartyVM.getTime2().toString() +\"/\"+  createPartyVM.getStoreUrl()!!.toString() +\"/\"+ binding.createPartyTitleEt.text.toString())\r\n            val createPartyRequest = CreatePartyRequest(binding.createPartyContentEt.text.toString(), createPartyVM.getCategoryInt()!!, binding.createPartyTogetherCheckBtn.isChecked, createPartyVM.getMapPoint()!!.mapPointGeoCoord.latitude, createPartyVM.getMapPoint()!!.mapPointGeoCoord.longitude,\r\n                createPartyVM.getMaxMatching()!!, createPartyVM.getDate2().toString()+ \" \" + createPartyVM.getTime2().toString(), createPartyVM.getStoreUrl()!!, binding.createPartyTitleEt.text.toString())\r\n            createPartyService.createPartySender(1, createPartyRequest) //★파티 등록하기\r\n            startActivityWithClear(MainActivity::class.java)\r\n        }\r\n\r\n        binding.createPartyTogetherCheckBtn.setOnCheckedChangeListener { //같이 먹고 싶어요 체크버튼 클릭시\r\n                buttonView, isChecked ->\r\n            if (isChecked) {\r\n                binding.createPartyTogetherTv.setTextColor(ContextCompat.getColor(this, R.color.main))\r\n            } else {\r\n                binding.createPartyTogetherTv.setTextColor(ContextCompat.getColor(this,R.color.gray_2))\r\n            }\r\n        }\r\n\r\n        binding.createPartyTogetherTv.setOnClickListener {\r\n            //체크되어있었으면 해제, 안체크 되어있었으면 체크 시키기\r\n            binding.createPartyTogetherCheckBtn.isChecked = !binding.createPartyTogetherCheckBtn.isChecked\r\n        }\r\n\r\n        //<여기서부터 배달 생성에 필요한 정보 입력 부분>\r\n        //주문예정시간 tv 클릭시 (파란색)\r\n        binding.createPartyDate2ColoredTv.setOnClickListener {\r\n            // activity에서 커스텀 다이얼로그 띄우는 코드\r\n            DialogDt().show(supportFragmentManager, \"CustomDialog\")\r\n            binding.createPartyNumber2Tv.isEnabled = true\r\n            binding.createPartyCategory2Tv.isEnabled = true\r\n            binding.createPartyLink2Tv.isEnabled =true\r\n            binding.createPartyLocation2Tv.isEnabled = true\r\n        }\r\n\r\n        //주문예정시간 tv 클릭시\r\n        binding.createPartyDate2Tv.setOnClickListener {\r\n            // activity에서 커스텀 다이얼로그 띄우는 코드\r\n            DialogDt().show(supportFragmentManager, \"CustomDialog\")\r\n        }\r\n\r\n        //매칭 인원 tv\r\n        binding.createPartyNumber2Tv.setOnClickListener {\r\n            DialogNum().show(supportFragmentManager, \"CustomDialog\")\r\n        }\r\n\r\n        //카테고리 tv\r\n        binding.createPartyCategory2Tv.setOnClickListener {\r\n            DialogCategory().show(supportFragmentManager, \"CustomDialog\")\r\n        }\r\n\r\n        //링크 tv\r\n        binding.createPartyLink2Tv.setOnClickListener {\r\n            DialogLink().show(supportFragmentManager, \"CustomDialog\")\r\n        }\r\n\r\n        //수령장소 tv\r\n        binding.createPartyLocation2Tv.setOnClickListener {\r\n            binding.createPartyKakaoMapLocation.removeView(mapView) // 맵 사용해야하니까 지우기\r\n            DialogLocation().show(supportFragmentManager, \"CustomDialog\")\r\n        }\r\n\r\n    }\r\n\r\n    //다이얼로그에서 next버튼 클릭시 값 받아오기\r\n    override fun onDtClicked(date: String, time: String) {\r\n        //사용자가 선택한 날짜 표시\r\n        binding.createPartyDate2Tv.setTextColor(ContextCompat.getColor(this, R.color.black))\r\n        if(date==\"\"||time==\"\"){ // 정보가 하나라도 부족하면\r\n            binding.createPartyDate2Tv.text = \"주문 예정 시간을 입력해주세요\"\r\n        }else{\r\n            binding.createPartyDate2Tv.text = date+ \" \" + time\r\n        }\r\n\r\n        //파란색 버튼 없애고 회색버튼으로 띄우기\r\n        binding.createPartyDate2Tv.visibility = View.VISIBLE\r\n        binding.createPartyDate2ColoredTv.visibility = View.INVISIBLE\r\n        checking()\r\n    }\r\n\r\n    override fun onNumClicked(num: String) {\r\n        //사용자가 선택한 인원수 표시\r\n        binding.createPartyNumber2Tv.setTextColor(ContextCompat.getColor(this,R.color.black))\r\n        binding.createPartyNumber2Tv.text = num\r\n        checking()\r\n    }\r\n\r\n    override fun onCategoryClicked(category: String) {\r\n        //사용자가 선택한 카테고리 표시\r\n        binding.createPartyCategory2Tv.setTextColor(ContextCompat.getColor(this,R.color.black))\r\n        binding.createPartyCategory2Tv.text = category\r\n        checking()\r\n    }\r\n\r\n    override fun onLinkClicked(link: String, flagNext: Boolean) { //flagNext는 카카오 지도 때문에 이용\r\n        //사용자가 선택한 식당 링크 표시\r\n        binding.createPartyLink2Tv.setTextColor(ContextCompat.getColor(this,R.color.black))\r\n        binding.createPartyLink2Tv.text = link\r\n        if(flagNext){ //링크 다이얼로그 => 위치 다이얼로그로 넘어간 경우에만 맵 삭제\r\n            binding.createPartyKakaoMapLocation.removeView(mapView) // 이제 link에서 다음을 클릭했다는 건 DialogLocation에서 지도 띄워야하니까 파티 생성하기 맵뷰는 삭제해주기\r\n        }\r\n        checking()\r\n    }\r\n\r\n    //TODO: locFlag 필요 없네,,,>?? 지우자\r\n    override fun onLocationClicked(loc: String, mapPoint: MapPoint, locFlag: Boolean) {\r\n        //locFlag가 아마 다이얼로그 바깥을 클릭했는지 , 완료로 탈출했는지 여부를 알려주는 걸꺼야\r\n        //TODO: 내 생각엔 여기선 다이얼로그 바깥 클릭해서 탈출 못하게 하면 안되나?\r\n        //사용자가 선택한 위치 표시\r\n        binding.createPartyLocation2Tv.setTextColor(ContextCompat.getColor(this,R.color.black))\r\n        binding.createPartyLocation2Tv.text = loc\r\n        drawMap(createPartyVM.getMapPoint()!!)\r\n        checking()\r\n    }\r\n\r\n    private fun drawMap(mapPoint: MapPoint){\r\n        //맵 다시 띄우기\r\n        mapView = MapView(this)\r\n        binding.createPartyKakaoMapLocation.addView(mapView)\r\n        //마커생성\r\n        val marker = MapPOIItem()\r\n        marker.itemName = \"요기?\"\r\n        marker.isShowCalloutBalloonOnTouch = false // 클릭시 말풍선을 보여줄지 여부 (false)\r\n        marker.mapPoint = mapPoint\r\n        mapView.addPOIItem(marker)\r\n        mapView!!.setMapCenterPoint(mapPoint, true)//지도 중심점 변경\r\n    }\r\n\r\n    override fun onDefaultLocSuccess(result: CreatePartyDefaultLocResult) {\r\n        Log.d(\"kakaodefault\", \"성공함\")\r\n        Log.d(\"kakaodefault\", result.latitude.toString()+\"/\"+result.longitude.toString())\r\n        //위도 경도로 MapPoint만들기\r\n        this.mapPoint = MapPoint.mapPointWithGeoCoord(result.latitude,result.longitude) // default로 맵포인트 설정됨\r\n        drawMap(mapPoint) // default 위치 정보 맵 위에 표시\r\n        getAddress(mapPoint) // default 위치 정보 tv에 표시\r\n    }\r\n\r\n    override fun onDefaultLocFailure() {\r\n        Log.d(\"kakaodefault\", \"defaultLoc 불러오기 실패함\")\r\n    }\r\n\r\n    //위도 경도로 주소 구하는 Reverse-GeoCoding\r\n    private fun getAddress(position: MapPoint) {\r\n        val geoCoder = Geocoder(this, Locale.KOREA)\r\n        var addr = \"주소 오류\"\r\n\r\n        try {\r\n            addr = geoCoder.getFromLocation(position.mapPointGeoCoord.latitude, position.mapPointGeoCoord.longitude, 1).first().getAddressLine(0)\r\n            binding.createPartyLocation2Tv.text = addr\r\n        } catch (e: Exception) {\r\n            e.printStackTrace()\r\n        }\r\n    }\r\n\r\n    // 파티 등록하기 성공/실패\r\n    override fun onCreatePartySuccess() {\r\n        Log.d(\"jjang\", \"파티 생성 성공(서버로 정보 보냄)\")\r\n    }\r\n\r\n    override fun onCreatePartyFailure(message: String) {\r\n        Log.d(\"jjang\",message)\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/geeksasaeng/Home/Party/CreateParty/CreatePartyActivity.kt b/app/src/main/java/com/example/geeksasaeng/Home/Party/CreateParty/CreatePartyActivity.kt
--- a/app/src/main/java/com/example/geeksasaeng/Home/Party/CreateParty/CreatePartyActivity.kt	(revision 9a6d2fb73b6b97446c2444eee7761ce69ba150fe)
+++ b/app/src/main/java/com/example/geeksasaeng/Home/Party/CreateParty/CreatePartyActivity.kt	(date 1659339260933)
@@ -2,6 +2,8 @@
 
 import android.graphics.Color
 import android.location.Geocoder
+import android.os.Bundle
+import android.os.PersistableBundle
 import android.text.Editable
 import android.text.TextWatcher
 import android.util.Log
@@ -47,6 +49,22 @@
         initKakaoMap()
     }
 
+/*    override fun onSaveInstanceState(outState: Bundle, outPersistentState: PersistableBundle) {
+        super.onSaveInstanceState(outState, outPersistentState)
+        val title = binding.createPartyTitleEt.text
+        val content = binding.createPartyContentEt.text
+        outState.putCharSequence("title", title)
+        outState.putCharSequence("content", content)
+    }
+
+    override fun onRestoreInstanceState(savedInstanceState: Bundle) {
+        super.onRestoreInstanceState(savedInstanceState)
+        val title = savedInstanceState.getCharSequence("title")
+        val content = savedInstanceState.getCharSequence("content")
+        binding.createPartyTitleEt.setText(title)
+        binding.createPartyContentEt.setText(content)
+    }*/
+
     private fun initTextWatcher(){
         binding.createPartyTitleEt.addTextChangedListener ( object: TextWatcher {
             override fun beforeTextChanged(s: CharSequence?, start: Int, count: Int, after: Int) {}
@@ -229,6 +247,10 @@
     private fun drawMap(mapPoint: MapPoint){
         //맵 다시 띄우기
         mapView = MapView(this)
+        mapView.setOnTouchListener { v, event ->
+            binding.createPartySv.requestDisallowInterceptTouchEvent(true) //부모에게 Touch Event를 빼앗기지 않게 할 수 있다.
+            return@setOnTouchListener false
+        }
         binding.createPartyKakaoMapLocation.addView(mapView)
         //마커생성
         val marker = MapPOIItem()
Index: app/src/main/res/layout/fragment_look_party.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:fitsSystemWindows=\"true\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:id=\"@+id/look_party_toolbar\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:paddingVertical=\"20dp\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/look_party_back_btn\"\r\n            android:layout_width=\"22dp\"\r\n            android:layout_height=\"22dp\"\r\n            android:src=\"@drawable/ic_back\"\r\n            android:backgroundTint=\"#D9D9D9\"\r\n            android:layout_marginLeft=\"28dp\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/look_party_tv\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"파티 보기\"\r\n            android:textColor=\"@color/black\"\r\n            android:fontFamily=\"@font/spoqa_medium\"\r\n            android:textStyle=\"bold\"\r\n            android:textSize=\"20sp\"\r\n            android:layout_gravity=\"center\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\" />\r\n\r\n        <ImageButton\r\n            android:id=\"@+id/look_party_option_btn\"\r\n            android:src=\"@drawable/ic_option\"\r\n            android:layout_width=\"15dp\"\r\n            android:layout_height=\"22dp\"\r\n            android:background=\"@android:color/transparent\"\r\n            android:layout_gravity=\"right\"\r\n            android:layout_marginRight=\"28dp\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\" />\r\n\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n    <ScrollView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"0dp\"\r\n        android:overScrollMode=\"never\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/look_party_toolbar\"\r\n        app:layout_constraintBottom_toTopOf=\"@id/look_bottom_bar\">\r\n\r\n        <androidx.constraintlayout.widget.ConstraintLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:paddingTop=\"10dp\"\r\n            android:paddingBottom=\"23dp\">\r\n\r\n            <ImageView\r\n                android:id=\"@+id/look_host_profile\"\r\n                android:layout_width=\"26dp\"\r\n                android:layout_height=\"26dp\"\r\n                android:src=\"@drawable/ic_default_profile\"\r\n                android:layout_marginLeft=\"23dp\"\r\n                app:layout_constraintStart_toStartOf=\"parent\"\r\n                app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/look_host_name\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\" \"\r\n                android:textColor=\"@color/black\"\r\n                android:fontFamily=\"@font/spoqa_medium\"\r\n                android:textSize=\"13sp\"\r\n                android:layout_marginLeft=\"8dp\"\r\n                app:layout_constraintTop_toTopOf=\"@id/look_host_profile\"\r\n                app:layout_constraintBottom_toBottomOf=\"@id/look_host_profile\"\r\n                app:layout_constraintStart_toEndOf=\"@id/look_host_profile\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/look_post_date\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\" \"\r\n                android:textColor=\"@color/gray_1\"\r\n                android:textSize=\"11dp\"\r\n                android:layout_marginLeft=\"15dp\"\r\n                app:layout_constraintStart_toEndOf=\"@id/look_host_name\"\r\n                app:layout_constraintTop_toTopOf=\"@id/look_host_name\"\r\n                app:layout_constraintBottom_toBottomOf=\"@id/look_host_name\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/look_hash_tag\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:textColor=\"@color/gray_2\"\r\n                android:text=\"같이 먹고 싶어요\"\r\n                android:layout_marginTop=\"22dp\"\r\n                android:visibility=\"gone\"\r\n                app:layout_constraintStart_toStartOf=\"@id/look_host_profile\"\r\n                app:layout_constraintTop_toBottomOf=\"@id/look_host_profile\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/look_title\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:textColor=\"@color/black\"\r\n                android:text=\" \"\r\n                android:fontFamily=\"@font/spoqa_medium\"\r\n                android:textSize=\"20sp\"\r\n                android:layout_marginTop=\"9dp\"\r\n                android:layout_marginLeft=\"23dp\"\r\n                android:layout_marginRight=\"23dp\"\r\n                app:layout_constraintStart_toStartOf=\"@id/look_host_profile\"\r\n                app:layout_constraintTop_toBottomOf=\"@id/look_hash_tag\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/look_content\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginLeft=\"23dp\"\r\n                android:layout_marginRight=\"23dp\"\r\n                android:textSize=\"15dp\"\r\n                android:textColor=\"@color/gray\"\r\n                android:fontFamily=\"@font/spoqa_medium\"\r\n                android:text=\" \"\r\n                android:lineHeight=\"25dp\"\r\n                android:layout_marginTop=\"14dp\"\r\n                app:layout_constraintTop_toBottomOf=\"@id/look_title\" />\r\n\r\n            <View\r\n                android:id=\"@+id/look_line\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"8dp\"\r\n                android:background=\"#F8F8F8\"\r\n                android:layout_marginTop=\"34dp\"\r\n                app:layout_constraintTop_toBottomOf=\"@+id/look_content\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/look_time\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"주문 예정 시간\"\r\n                android:textColor=\"@color/top\"\r\n                android:textSize=\"13sp\"\r\n                android:layout_marginStart=\"28dp\"\r\n                android:layout_marginTop=\"31dp\"\r\n                app:layout_constraintTop_toBottomOf=\"@id/look_line\"\r\n                app:layout_constraintStart_toStartOf=\"parent\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/look_time_date\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"00월 00일\"\r\n                android:textColor=\"@color/black\"\r\n                android:textSize=\"13sp\"\r\n                android:layout_marginLeft=\"36dp\"\r\n                app:layout_constraintStart_toEndOf=\"@id/look_time\"\r\n                app:layout_constraintTop_toTopOf=\"@id/look_time\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/look_time_time\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"00시 00분\"\r\n                android:textColor=\"@color/black\"\r\n                android:textSize=\"13sp\"\r\n                android:layout_marginStart=\"20dp\"\r\n                app:layout_constraintTop_toTopOf=\"@id/look_time_date\"\r\n                app:layout_constraintStart_toEndOf=\"@id/look_time_date\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/look_matching\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"매칭 현황\"\r\n                android:textColor=\"@color/top\"\r\n                android:textSize=\"13sp\"\r\n                android:layout_marginStart=\"28dp\"\r\n                android:layout_marginTop=\"24dp\"\r\n                app:layout_constraintTop_toBottomOf=\"@id/look_time\"\r\n                app:layout_constraintStart_toStartOf=\"parent\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/look_matching_number\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"0/0\"\r\n                android:textColor=\"@color/black\"\r\n                android:textSize=\"13sp\"\r\n                app:layout_constraintStart_toStartOf=\"@id/look_time_date\"\r\n                app:layout_constraintTop_toTopOf=\"@id/look_matching\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/look_category\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"카테고리\"\r\n                android:textColor=\"@color/top\"\r\n                android:textSize=\"13sp\"\r\n                android:layout_marginStart=\"28dp\"\r\n                android:layout_marginTop=\"24dp\"\r\n                app:layout_constraintTop_toBottomOf=\"@id/look_matching\"\r\n                app:layout_constraintStart_toStartOf=\"parent\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/look_category_text\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"카테고리\"\r\n                android:textColor=\"@color/black\"\r\n                android:textSize=\"13sp\"\r\n                app:layout_constraintStart_toStartOf=\"@id/look_time_date\"\r\n                app:layout_constraintTop_toTopOf=\"@id/look_category\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/look_link\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"식당 링크\"\r\n                android:textColor=\"@color/top\"\r\n                android:textSize=\"13sp\"\r\n                android:layout_marginStart=\"28dp\"\r\n                android:layout_marginTop=\"24dp\"\r\n                app:layout_constraintTop_toBottomOf=\"@id/look_category\"\r\n                app:layout_constraintStart_toStartOf=\"parent\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/look_link_text\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"식당 링크\"\r\n                android:textColor=\"@color/black\"\r\n                android:textSize=\"13sp\"\r\n                app:layout_constraintStart_toStartOf=\"@id/look_time_date\"\r\n                app:layout_constraintTop_toTopOf=\"@id/look_link\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/look_locate\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"수령 장소\"\r\n                android:textColor=\"@color/top\"\r\n                android:textSize=\"13sp\"\r\n                android:layout_marginStart=\"28dp\"\r\n                android:layout_marginTop=\"24dp\"\r\n                app:layout_constraintTop_toBottomOf=\"@id/look_link\"\r\n                app:layout_constraintStart_toStartOf=\"parent\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/look_locate_text\"\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\" \"\r\n                android:singleLine=\"true\"\r\n                android:ellipsize=\"marquee\"\r\n                android:marqueeRepeatLimit=\"marquee_forever\"\r\n                android:textColor=\"@color/black\"\r\n                android:textSize=\"13sp\"\r\n                app:layout_constraintStart_toStartOf=\"@id/look_time_date\"\r\n                app:layout_constraintEnd_toEndOf=\"parent\"\r\n                android:layout_marginEnd=\"28dp\"\r\n                app:layout_constraintTop_toTopOf=\"@id/look_locate\" />\r\n\r\n            <androidx.constraintlayout.widget.ConstraintLayout\r\n                android:id=\"@+id/look_kakaoMap_location\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"120dp\"\r\n                android:layout_marginLeft=\"23dp\"\r\n                android:layout_marginRight=\"23dp\"\r\n                android:backgroundTint=\"@color/gray_0\"\r\n                android:background=\"@drawable/round_border\"\r\n                android:layout_marginTop=\"14dp\"\r\n                app:layout_constraintTop_toBottomOf=\"@id/look_locate\" />\r\n\r\n        </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n    </ScrollView>\r\n\r\n    <View\r\n        android:id=\"@+id/look_bottom_bar\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"55dp\"\r\n        android:background=\"@color/main\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/look_member_status\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"2/4 명\"\r\n        android:textColor=\"@color/white\"\r\n        android:textSize=\"16dp\"\r\n        android:layout_marginStart=\"29dp\"\r\n        android:fontFamily=\"@font/spoqa_medium\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"@id/look_bottom_bar\"\r\n        app:layout_constraintBottom_toBottomOf=\"@id/look_bottom_bar\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/look_timer\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"00:00:00\"\r\n        android:textColor=\"@color/white\"\r\n        android:textSize=\"16dp\"\r\n        android:layout_marginStart=\"37dp\"\r\n        app:layout_constraintTop_toTopOf=\"@id/look_bottom_bar\"\r\n        app:layout_constraintBottom_toBottomOf=\"@id/look_bottom_bar\"\r\n        app:layout_constraintStart_toEndOf=\"@id/look_member_status\" />\r\n\r\n    <ImageView\r\n        android:id=\"@+id/look_next_btn\"\r\n        android:layout_width=\"12dp\"\r\n        android:layout_height=\"15dp\"\r\n        android:src=\"@drawable/ic_next\"\r\n        android:backgroundTint=\"@color/white\"\r\n        android:layout_marginRight=\"22dp\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"@id/look_bottom_bar\"\r\n        app:layout_constraintBottom_toBottomOf=\"@id/look_bottom_bar\" />\r\n\r\n    <View\r\n        android:id=\"@+id/look_party_white\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"0dp\"\r\n        android:background=\"@color/white\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/look_party_toolbar\"\r\n        app:layout_constraintBottom_toTopOf=\"@id/look_bottom_bar\" />\r\n\r\n    <ProgressBar\r\n        android:id=\"@+id/look_party_progress_bar\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_gravity=\"center\"\r\n        android:indeterminate=\"true\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\" />\r\n\r\n    <TextView\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"신청하기\"\r\n        android:fontFamily=\"@font/spoqa_medium\"\r\n        android:textSize=\"16sp\"\r\n        android:textColor=\"@color/white\"\r\n        android:layout_marginRight=\"11dp\"\r\n        app:layout_constraintTop_toTopOf=\"@id/look_bottom_bar\"\r\n        app:layout_constraintBottom_toBottomOf=\"@id/look_bottom_bar\"\r\n        app:layout_constraintEnd_toStartOf=\"@id/look_next_btn\" />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_look_party.xml b/app/src/main/res/layout/fragment_look_party.xml
--- a/app/src/main/res/layout/fragment_look_party.xml	(revision 9a6d2fb73b6b97446c2444eee7761ce69ba150fe)
+++ b/app/src/main/res/layout/fragment_look_party.xml	(date 1659339261030)
@@ -54,6 +54,7 @@
     </androidx.constraintlayout.widget.ConstraintLayout>
 
     <ScrollView
+        android:id="@+id/look_party_sv"
         android:layout_width="match_parent"
         android:layout_height="0dp"
         android:overScrollMode="never"
@@ -239,11 +240,16 @@
 
             <TextView
                 android:id="@+id/look_link_text"
-                android:layout_width="wrap_content"
+                android:layout_width="0dp"
                 android:layout_height="wrap_content"
                 android:text="식당 링크"
+                android:singleLine="true"
+                android:linksClickable="true"
+                android:autoLink="web"
                 android:textColor="@color/black"
                 android:textSize="13sp"
+                android:layout_marginEnd="28dp"
+                app:layout_constraintEnd_toEndOf="parent"
                 app:layout_constraintStart_toStartOf="@id/look_time_date"
                 app:layout_constraintTop_toTopOf="@id/look_link" />
 
Index: app/src/main/java/com/example/geeksasaeng/Home/Party/LookPartyFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.geeksasaeng.Home.Party\r\n\r\nimport android.location.Geocoder\r\nimport android.net.Uri\r\nimport android.os.Bundle\r\nimport android.os.Handler\r\nimport android.util.Log\r\nimport android.view.View\r\nimport androidx.core.content.ContextCompat\r\nimport androidx.fragment.app.DialogFragment\r\nimport androidx.fragment.app.FragmentManager\r\nimport com.example.geeksasaeng.Home.Party.Retrofit.PartyDataService\r\nimport com.example.geeksasaeng.Home.Party.Retrofit.PartyDetailResult\r\nimport com.example.geeksasaeng.Home.Party.Retrofit.PartyDetailView\r\nimport com.example.geeksasaeng.MainActivity\r\nimport com.example.geeksasaeng.R\r\nimport com.example.geeksasaeng.Utils.BaseFragment\r\nimport com.example.geeksasaeng.databinding.FragmentLookPartyBinding\r\nimport net.daum.mf.map.api.MapPOIItem\r\nimport net.daum.mf.map.api.MapPoint\r\nimport net.daum.mf.map.api.MapView\r\nimport java.text.DecimalFormat\r\nimport java.text.SimpleDateFormat\r\nimport java.util.*\r\nimport kotlin.concurrent.timer\r\n\r\nclass LookPartyFragment: BaseFragment<FragmentLookPartyBinding>(FragmentLookPartyBinding::inflate), PartyDetailView, DialogDeliveryOptionMyPopup.PopUpdateClickListener {\r\n\r\n    var deliveryItemId: Int? = null\r\n    var status: String? = null\r\n    var authorStatus: Boolean? = null\r\n    lateinit var partyData: PartyDetailResult\r\n    lateinit var mapView : MapView\r\n\r\n    private var remainTime : Long = 0\r\n    private var timerTask : Timer? = null\r\n\r\n    override fun initAfterBinding() {\r\n        initClickListener()\r\n        binding.lookPartyProgressBar.visibility = View.VISIBLE\r\n\r\n        // 파티 수정하기, 신고하기 Stack에서 제거\r\n        (context as MainActivity).supportFragmentManager.popBackStack(\"partyUpdate\", FragmentManager.POP_BACK_STACK_INCLUSIVE)\r\n        (context as MainActivity).supportFragmentManager.popBackStack(\"partyReport\", FragmentManager.POP_BACK_STACK_INCLUSIVE)\r\n\r\n        deliveryItemId = Integer.parseInt(arguments?.getString(\"deliveryItemId\"))\r\n        status = arguments?.getString(\"status\")\r\n\r\n        val handler = Handler()\r\n        handler.postDelayed({\r\n            initDeliveryPartyData()\r\n        }, 200)\r\n\r\n        binding.lookCategoryText.isSelected = true\r\n    }\r\n\r\n    override fun onStop() {\r\n        super.onStop()\r\n        timerTask?.cancel()\r\n        if (status == \"search\")\r\n            requireActivity().finish()\r\n    }\r\n\r\n    private fun initClickListener(){\r\n        binding.lookPartyBackBtn.setOnClickListener {\r\n            (context as MainActivity).supportFragmentManager.beginTransaction().remove(this).commit();\r\n            (context as MainActivity).supportFragmentManager.popBackStack();\r\n        }\r\n\r\n        binding.lookPartyOptionBtn.setOnClickListener {\r\n            val bundle = Bundle()\r\n            bundle.putInt(\"partyId\", deliveryItemId!!)\r\n            var dialogFragment = DialogFragment()\r\n            var dialogTag = String()\r\n\r\n            if (authorStatus == true) {\r\n                bundle.putBoolean(\"authorStatus\", partyData.authorStatus)\r\n                bundle.putString(\"chief\", partyData.chief)\r\n                bundle.putInt(\"chiefId\", partyData.chiefId)\r\n                bundle.putString(\"chiefProfileImgUrl\", partyData.chiefProfileImgUrl)\r\n                bundle.putString(\"content\", partyData.content)\r\n                bundle.putInt(\"currentMatching\", partyData.currentMatching)\r\n                bundle.putInt(\"dormitory\", partyData.dormitory)\r\n                bundle.putString(\"foodCategory\", partyData.foodCategory)\r\n                bundle.putBoolean(\"hashTag\", partyData.hashTag)\r\n                bundle.putInt(\"id\", partyData.id)\r\n                bundle.putDouble(\"latitude\", partyData.latitude)\r\n                bundle.putDouble(\"longitude\", partyData.longitude)\r\n                bundle.putString(\"matchingStatus\", partyData.matchingStatus)\r\n                bundle.putInt(\"maxMatching\", partyData.maxMatching)\r\n                bundle.putString(\"orderTime\", partyData.orderTime)\r\n                bundle.putString(\"storeUrl\", partyData.storeUrl)\r\n                bundle.putString(\"title\", partyData.title)\r\n                bundle.putString(\"updatedAt\", partyData.updatedAt)\r\n                dialogFragment = DialogDeliveryOptionMyPopup()\r\n                dialogTag = \"DeliveryPartyMyOption\"\r\n            }\r\n            else if (authorStatus == false) {\r\n                // TODO: 게시글 쓴 사람 ID 전달\r\n                bundle.putInt(\"reportedMemberId\", partyData.chiefId)\r\n                bundle.putInt(\"reportedDeliveryPartyId\", partyData.id)\r\n                dialogFragment = DialogDeliveryOptionOtherPopup()\r\n                dialogTag = \"DeliveryPartyOtherOption\"\r\n            }\r\n\r\n            dialogFragment.setArguments(bundle)\r\n            dialogFragment.show(childFragmentManager, dialogTag) // parent->child로 바꿈\r\n        }\r\n    }\r\n\r\n    private fun initDeliveryPartyData() {\r\n        val partyDetailService = PartyDataService()\r\n        partyDetailService.partyDetailSender(deliveryItemId!!)\r\n        partyDetailService.setPartyDetailView(this)\r\n    }\r\n\r\n    override fun partyDetailSuccess(result: PartyDetailResult) {\r\n        partyData = result\r\n\r\n        binding.lookPartyWhite.visibility = View.GONE\r\n        binding.lookPartyProgressBar.visibility = View.GONE\r\n\r\n        authorStatus = result.authorStatus\r\n\r\n        if (result?.chiefProfileImgUrl != null)\r\n            binding.lookHostProfile.setImageURI(Uri.parse(result?.chiefProfileImgUrl))\r\n        else // TODO: 기본 이미지 넣을 예정\r\n            binding.lookHostProfile.setImageResource(R.drawable.ic_default_profile)\r\n\r\n        binding.lookHostName.text = result.chief\r\n        binding.lookContent.text = result.content\r\n        binding.lookMatchingNumber.text = result.currentMatching.toString() + \"/\" + result.maxMatching\r\n        binding.lookCategoryText.text = result.foodCategory\r\n\r\n        if (result.hashTag)\r\n            binding.lookHashTag.visibility = View.VISIBLE\r\n        else\r\n            binding.lookHashTag.visibility = View.GONE\r\n\r\n        // 위도, 경도로 수령장소 문자 넣어주기 + 밑에 카카오지도 그리기\r\n        binding.lookLocateText.text = getAddress(result.latitude,  result.longitude)\r\n        val mapPoint = MapPoint.mapPointWithGeoCoord(result.latitude,result.longitude)\r\n        drawMap(mapPoint)\r\n\r\n\r\n        binding.lookTimeDate.text = \"${result.orderTime.substring(5, 7)}월 ${result.orderTime.substring(8, 10)}일\"\r\n        binding.lookTimeTime.text = \"${result.orderTime.substring(11, 13)}시 ${result.orderTime.substring(14, 16)}분\"\r\n\r\n        if (result.storeUrl.toString() != \"null\")\r\n            binding.lookLinkText.text = result.storeUrl\r\n        else {\r\n            binding.lookLink.visibility = View.GONE\r\n            binding.lookLinkText.visibility = View.GONE\r\n        }\r\n\r\n        binding.lookTitle.text = result.title\r\n        binding.lookPostDate.text = \"${result.updatedAt.substring(5, 7)}/${result.updatedAt.substring(8, 10)} ${result.updatedAt.substring(11, 16)}\"\r\n\r\n        //밑에 파란 바\r\n        binding.lookMemberStatus.text = result.currentMatching.toString()+\"/\"+result.maxMatching.toString()+ \" 명\"\r\n        remainTime = getRemainTime(result.orderTime)\r\n        startTimer()\r\n    }\r\n\r\n    override fun partyDetailFailure(code: Int, message: String) {\r\n        showToast(message)\r\n    }\r\n\r\n    //위도 경도로 주소 구하는 Reverse-GeoCoding (주소 String으로 반환 받을 수 있다)\r\n    private fun getAddress(latitude: Double, longitude: Double): String {\r\n        val geoCoder = Geocoder(context, Locale.KOREA)\r\n        var addr = \"주소 오류\"\r\n\r\n        try {\r\n            addr = geoCoder.getFromLocation(latitude, longitude, 1).first().getAddressLine(0)\r\n        } catch (e: Exception) {\r\n            e.printStackTrace()\r\n        }\r\n        return addr\r\n    }\r\n\r\n    //맵 그리는 함수\r\n    private fun drawMap(mapPoint: MapPoint){\r\n        mapView = MapView(requireActivity())\r\n        binding.lookKakaoMapLocation.addView(mapView)\r\n        //마커생성\r\n        val marker = MapPOIItem()\r\n        marker.itemName = \"요기?\"\r\n        marker.isShowCalloutBalloonOnTouch = false // 클릭시 말풍선을 보여줄지 여부 (false)\r\n        marker.mapPoint = mapPoint\r\n        mapView.addPOIItem(marker)\r\n        mapView!!.setMapCenterPoint(mapPoint, true)//지도 중심점 변경\r\n    }\r\n\r\n    override fun onPopUpdateClicked() { // 수정하기 팝업 클릭하면,\r\n        binding.lookKakaoMapLocation.removeView(mapView) // 다른 프레그먼트 띄우기 전에 맵 사용해야하니까 지우기\r\n    }\r\n\r\n    // 타이머 작동\r\n    private fun startTimer() {\r\n        timerTask = timer(period = 1000) { //1초가 주기\r\n            val timeForm = DecimalFormat(\"00\") //0을 넣은 곳은 빈자리일 경우, 0으로 채워준다.\r\n            var remainSec = (remainTime) / 1000\r\n            var longHour = (remainSec / 3600)\r\n            var longMinute = ((remainSec % 3600) / 60)\r\n            var longSec = remainSec % 60\r\n\r\n\r\n            val hour = timeForm.format(longHour)\r\n            val min = timeForm.format(longMinute)\r\n            val sec = timeForm.format(longSec)\r\n\r\n            activity?.runOnUiThread {\r\n                binding.lookTimer.text = \"${hour}:${min}:${sec}\"\r\n\r\n                if (min == \"00\" && sec == \"00\"){\r\n                    timerTask?.cancel()\r\n                    binding.lookTimer.text = \"시간이 만료되었습니다.\"\r\n                }\r\n            }\r\n\r\n            if (remainTime.toInt() != 0) // time이 0이 아니라면\r\n                remainTime -= 1000 //1초씩 줄이기\r\n        }\r\n    }\r\n\r\n    private fun calculateToday(): String {\r\n        val nowTime = System.currentTimeMillis();\r\n        val date = Date(nowTime)\r\n        var dateFormat: SimpleDateFormat = SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\")\r\n        return dateFormat.format(date)\r\n    }\r\n\r\n    private fun getRemainTime(orderTime: String): Long {\r\n        var orderYear = Integer.parseInt(orderTime.substring(0, 4))\r\n        var orderMonth = Integer.parseInt(orderTime.substring(5, 7))\r\n        var orderDay = Integer.parseInt(orderTime.substring(8, 10))\r\n        var orderHours = Integer.parseInt(orderTime.substring(11, 13))\r\n        var orderMinutes = Integer.parseInt(orderTime.substring(14, 16))\r\n        var orderSec = 0\r\n\r\n        var currentTime = calculateToday()\r\n        Log.d(\"current\", calculateToday().toString())\r\n        var todayYear = Integer.parseInt(currentTime.substring(0, 4))\r\n        var todayMonth = Integer.parseInt(currentTime.substring(5, 7))\r\n        var todayDay = Integer.parseInt(currentTime.substring(8, 10))\r\n        var todayHours = Integer.parseInt(currentTime.substring(11, 13))\r\n        var todayMinutes = Integer.parseInt(currentTime.substring(14, 16))\r\n        var todaySec = Integer.parseInt(currentTime.substring(17, 19))\r\n\r\n        var today = Calendar.getInstance().apply {\r\n            set(Calendar.YEAR, todayYear)\r\n            set(Calendar.MONTH, todayMonth)\r\n            set(Calendar.DAY_OF_MONTH, todayDay)\r\n        }.timeInMillis + (60000 * 60 * todayHours) + (60000 * todayMinutes) + (1000* todaySec)\r\n\r\n        var order = Calendar.getInstance().apply {\r\n            set(Calendar.YEAR, orderYear)\r\n            set(Calendar.MONTH, orderMonth)\r\n            set(Calendar.DAY_OF_MONTH, orderDay)\r\n        }.timeInMillis + (60000 * 60 * orderHours) + (60000 * orderMinutes) + (1000* 0)\r\n\r\n        var remainTime = order - today //남은 시간 밀리세컨드 단위\r\n\r\n        return remainTime\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/geeksasaeng/Home/Party/LookPartyFragment.kt b/app/src/main/java/com/example/geeksasaeng/Home/Party/LookPartyFragment.kt
--- a/app/src/main/java/com/example/geeksasaeng/Home/Party/LookPartyFragment.kt	(revision 9a6d2fb73b6b97446c2444eee7761ce69ba150fe)
+++ b/app/src/main/java/com/example/geeksasaeng/Home/Party/LookPartyFragment.kt	(date 1659339260953)
@@ -4,8 +4,11 @@
 import android.net.Uri
 import android.os.Bundle
 import android.os.Handler
+import android.text.method.Touch
 import android.util.Log
+import android.view.LayoutInflater
 import android.view.View
+import android.view.ViewGroup
 import androidx.core.content.ContextCompat
 import androidx.fragment.app.DialogFragment
 import androidx.fragment.app.FragmentManager
@@ -38,6 +41,7 @@
     override fun initAfterBinding() {
         initClickListener()
         binding.lookPartyProgressBar.visibility = View.VISIBLE
+        binding.lookLocateText.isSelected = true // 물흐르는 애니메이션
 
         // 파티 수정하기, 신고하기 Stack에서 제거
         (context as MainActivity).supportFragmentManager.popBackStack("partyUpdate", FragmentManager.POP_BACK_STACK_INCLUSIVE)
@@ -50,8 +54,6 @@
         handler.postDelayed({
             initDeliveryPartyData()
         }, 200)
-
-        binding.lookCategoryText.isSelected = true
     }
 
     override fun onStop() {
@@ -182,6 +184,10 @@
     //맵 그리는 함수
     private fun drawMap(mapPoint: MapPoint){
         mapView = MapView(requireActivity())
+        mapView.setOnTouchListener { v, event ->
+            binding.lookPartySv.requestDisallowInterceptTouchEvent(true) //부모에게 Touch Event를 빼앗기지 않게 할 수 있다.
+            return@setOnTouchListener false
+        }
         binding.lookKakaoMapLocation.addView(mapView)
         //마커생성
         val marker = MapPOIItem()
Index: app/src/main/res/layout/fragment_search_detail.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <ImageView\r\n        android:id='@+id/search_detail_sort_img'\r\n        android:layout_width=\"23dp\"\r\n        android:layout_height=\"23dp\"\r\n        android:src=\"@drawable/ic_sort\"\r\n        android:layout_marginStart=\"28dp\"\r\n        android:layout_marginTop=\"30dp\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\" />\r\n\r\n    <Spinner\r\n        android:id=\"@+id/search_detail_people_spinner\"\r\n        android:layout_width=\"100dp\"\r\n        android:layout_height=\"34dp\"\r\n        android:layout_marginLeft=\"15dp\"\r\n        android:background=\"@drawable/spinner_outline_unclicked\"\r\n        android:popupBackground=\"@drawable/spinner_outline_clicked\"\r\n        tools:listitem=\"@layout/item_delivery_people_spinner\"\r\n        android:spinnerMode=\"dropdown\"\r\n        android:entries=\"@array/home_dropdown1\"\r\n        android:gravity=\"center\"\r\n        app:layout_constraintTop_toTopOf=\"@id/search_detail_sort_img\"\r\n        app:layout_constraintBottom_toBottomOf=\"@id/search_detail_sort_img\"\r\n        app:layout_constraintStart_toEndOf=\"@id/search_detail_sort_img\" />\r\n\r\n    <HorizontalScrollView\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"10dp\"\r\n        android:layout_marginEnd=\"28dp\"\r\n        android:scrollbars=\"@null\"\r\n        android:overScrollMode=\"never\"\r\n        app:layout_constraintTop_toTopOf=\"@id/search_detail_people_spinner\"\r\n        app:layout_constraintBottom_toBottomOf=\"@id/search_detail_people_spinner\"\r\n        app:layout_constraintStart_toEndOf=\"@id/search_detail_people_spinner\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\">\r\n\r\n        <!--아침,점심,저녁,야식 선택-->\r\n        <LinearLayout\r\n            android:orientation=\"horizontal\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"34dp\">\r\n\r\n            <RadioGroup\r\n                android:id=\"@+id/search_detail_time_rg\"\r\n                android:orientation=\"horizontal\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\">\r\n\r\n                <RadioButton\r\n                    android:id=\"@+id/search_detail_rb1\"\r\n                    android:paddingVertical=\"7dp\"\r\n                    android:paddingHorizontal=\"10dp\"\r\n                    android:button=\"@null\"\r\n                    android:textSize=\"14sp\"\r\n                    android:layout_width=\"54dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:background=\"@drawable/spinner_outline_unclicked\"\r\n                    android:textColor=\"@drawable/selector_time_radiobtn_text\"\r\n                    android:fontFamily=\"@font/spoqa_medium\"\r\n                    android:text=\"아침\"\r\n                    android:layout_marginEnd=\"8dp\"\r\n                    android:gravity=\"center\"/>\r\n\r\n                <RadioButton\r\n                    android:id=\"@+id/search_detail_rb2\"\r\n                    android:paddingVertical=\"7dp\"\r\n                    android:paddingHorizontal=\"10dp\"\r\n                    android:button=\"@null\"\r\n                    android:textSize=\"14sp\"\r\n                    android:layout_width=\"54dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:background=\"@drawable/spinner_outline_unclicked\"\r\n                    android:textColor=\"@drawable/selector_time_radiobtn_text\"\r\n                    android:fontFamily=\"@font/spoqa_medium\"\r\n                    android:text=\"점심\"\r\n                    android:layout_marginEnd=\"8dp\"\r\n                    android:gravity=\"center\"/>\r\n\r\n                <RadioButton\r\n                    android:id=\"@+id/search_detail_rb3\"\r\n                    android:paddingVertical=\"7dp\"\r\n                    android:paddingHorizontal=\"10dp\"\r\n                    android:button=\"@null\"\r\n                    android:textSize=\"14sp\"\r\n                    android:layout_width=\"54dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:background=\"@drawable/spinner_outline_unclicked\"\r\n                    android:textColor=\"@drawable/selector_time_radiobtn_text\"\r\n                    android:fontFamily=\"@font/spoqa_medium\"\r\n                    android:text=\"저녁\"\r\n                    android:layout_marginEnd=\"8dp\"\r\n                    android:gravity=\"center\"/>\r\n\r\n                <RadioButton\r\n                    android:id=\"@+id/search_detail_rb4\"\r\n                    android:paddingVertical=\"7dp\"\r\n                    android:paddingHorizontal=\"10dp\"\r\n                    android:button=\"@null\"\r\n                    android:textSize=\"14sp\"\r\n                    android:layout_width=\"54dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:background=\"@drawable/spinner_outline_unclicked\"\r\n                    android:textColor=\"@drawable/selector_time_radiobtn_text\"\r\n                    android:fontFamily=\"@font/spoqa_medium\"\r\n                    android:text=\"야식\"\r\n                    android:gravity=\"center\"/>\r\n\r\n            </RadioGroup>\r\n\r\n        </LinearLayout>\r\n\r\n    </HorizontalScrollView>\r\n\r\n    <ImageView\r\n        android:id=\"@+id/search_detail_back_logo_ic\"\r\n        android:layout_width=\"72dp\"\r\n        android:layout_height=\"79dp\"\r\n        android:src=\"@drawable/ic_logo_search_back\"\r\n        android:layout_marginBottom=\"164dp\"\r\n        app:tint=\"#80F8FCFF\"\r\n        android:tintMode=\"src_atop\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\" />\r\n\r\n\r\n    <androidx.swiperefreshlayout.widget.SwipeRefreshLayout\r\n        android:id=\"@+id/search_detail_swipe\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"0dp\"\r\n        android:layout_marginTop=\"13dp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/search_detail_sort_img\">\r\n\r\n        <androidx.recyclerview.widget.RecyclerView\r\n            android:id=\"@+id/search_detail_party_rv\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"0dp\"\r\n            android:layout_marginTop=\"13dp\"\r\n            android:overScrollMode=\"never\"\r\n            app:layoutManager=\"androidx.recyclerview.widget.LinearLayoutManager\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/search_detail_sort_img\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"/>\r\n\r\n    </androidx.swiperefreshlayout.widget.SwipeRefreshLayout>\r\n\r\n    <TextView\r\n        android:id=\"@+id/search_bottom_view\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"130dp\"\r\n        android:background=\"@drawable/bg_gradient\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        android:clickable=\"false\" />\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:id=\"@+id/search_progress_cover\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"0dp\"\r\n        android:visibility=\"gone\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"@id/search_detail_swipe\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\">\r\n        <!--android:background=\"#40EFEFEF\"-->\r\n\r\n        <ProgressBar\r\n            android:id=\"@+id/search_progress_bar\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_gravity=\"center\"\r\n            android:indeterminate=\"true\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\" />\r\n\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_search_detail.xml b/app/src/main/res/layout/fragment_search_detail.xml
--- a/app/src/main/res/layout/fragment_search_detail.xml	(revision 9a6d2fb73b6b97446c2444eee7761ce69ba150fe)
+++ b/app/src/main/res/layout/fragment_search_detail.xml	(date 1659339261040)
@@ -17,8 +17,8 @@
 
     <Spinner
         android:id="@+id/search_detail_people_spinner"
-        android:layout_width="100dp"
-        android:layout_height="34dp"
+        android:layout_width="wrap_content"
+        android:layout_height="35dp"
         android:layout_marginLeft="15dp"
         android:background="@drawable/spinner_outline_unclicked"
         android:popupBackground="@drawable/spinner_outline_clicked"
@@ -34,8 +34,8 @@
         android:layout_width="0dp"
         android:layout_height="wrap_content"
         android:layout_marginStart="10dp"
-        android:layout_marginEnd="28dp"
-        android:scrollbars="@null"
+        android:layout_marginEnd="10dp"
+        android:scrollbars="none"
         android:overScrollMode="never"
         app:layout_constraintTop_toTopOf="@id/search_detail_people_spinner"
         app:layout_constraintBottom_toBottomOf="@id/search_detail_people_spinner"
@@ -46,17 +46,17 @@
         <LinearLayout
             android:orientation="horizontal"
             android:layout_width="wrap_content"
-            android:layout_height="34dp">
+            android:layout_height="wrap_content">
 
             <RadioGroup
                 android:id="@+id/search_detail_time_rg"
                 android:orientation="horizontal"
                 android:layout_width="wrap_content"
-                android:layout_height="wrap_content">
+                android:layout_height="35dp">
 
                 <RadioButton
                     android:id="@+id/search_detail_rb1"
-                    android:paddingVertical="7dp"
+                    android:height="35dp"
                     android:paddingHorizontal="10dp"
                     android:button="@null"
                     android:textSize="14sp"
@@ -71,7 +71,7 @@
 
                 <RadioButton
                     android:id="@+id/search_detail_rb2"
-                    android:paddingVertical="7dp"
+                    android:height="35dp"
                     android:paddingHorizontal="10dp"
                     android:button="@null"
                     android:textSize="14sp"
@@ -86,7 +86,7 @@
 
                 <RadioButton
                     android:id="@+id/search_detail_rb3"
-                    android:paddingVertical="7dp"
+                    android:height="35dp"
                     android:paddingHorizontal="10dp"
                     android:button="@null"
                     android:textSize="14sp"
@@ -101,7 +101,7 @@
 
                 <RadioButton
                     android:id="@+id/search_detail_rb4"
-                    android:paddingVertical="7dp"
+                    android:height="35dp"
                     android:paddingHorizontal="10dp"
                     android:button="@null"
                     android:textSize="14sp"
Index: app/src/main/java/com/example/geeksasaeng/Home/Party/DialogDeliveryOptionMyPopup.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.geeksasaeng.Home.Party\r\n\r\nimport android.content.Context\r\nimport android.graphics.Color\r\nimport android.graphics.drawable.ColorDrawable\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.Gravity\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.Toast\r\nimport androidx.fragment.app.DialogFragment\r\nimport androidx.fragment.app.FragmentTransaction\r\nimport com.example.geeksasaeng.Home.Party.Retrofit.PartyDataService\r\nimport com.example.geeksasaeng.Home.Party.Retrofit.PartyDeleteView\r\nimport com.example.geeksasaeng.Home.Party.UpdateParty.DialogDtUpdate\r\nimport com.example.geeksasaeng.Home.Party.UpdateParty.PartyUpdateFragment\r\nimport com.example.geeksasaeng.MainActivity\r\nimport com.example.geeksasaeng.R\r\nimport com.example.geeksasaeng.databinding.DialogDeliveryOptionMyPopupBinding\r\n\r\nclass DialogDeliveryOptionMyPopup: DialogFragment() {\r\n\r\n    lateinit var binding: DialogDeliveryOptionMyPopupBinding\r\n    var authorStatus: Boolean? = null\r\n    var chief: String? = null\r\n    // var chiefId: Int = 0\r\n    var chiefProfileImgUrl: String? = null\r\n    var content: String? = null\r\n    var currentMatching: Int = 0\r\n    var dormitory: Int = 0\r\n    var foodCategory: String? = null\r\n    var hashTag: Boolean? = null\r\n    var partyId: Int = 0\r\n    var latitude: Double = 0.0\r\n    var longitude: Double = 0.0\r\n    var matchingStatus: String? = null\r\n    var maxMatching: Int = 0\r\n    var orderTime: String? = null\r\n    var storeUrl: String? = null\r\n    var title: String? = null\r\n    var updatedAt: String? = null\r\n\r\n    private var UpdateClickListener: PopUpdateClickListener? =null\r\n\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater,\r\n        container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        binding = DialogDeliveryOptionMyPopupBinding.inflate(inflater, container, false)\r\n\r\n        authorStatus = requireArguments().getBoolean(\"authorStatus\")\r\n        chief = requireArguments().getString(\"chief\")\r\n        // chiefId = requireArguments().getInt(\"chiefId\")\r\n        chiefProfileImgUrl = requireArguments().getString(\"chiefProfileImgUrl\")\r\n        content = requireArguments().getString(\"content\")\r\n        currentMatching = requireArguments().getInt(\"currentMatching\")\r\n        dormitory = requireArguments().getInt(\"dormitory\")\r\n        foodCategory = requireArguments().getString(\"foodCategory\")\r\n        hashTag = requireArguments().getBoolean(\"hashTag\")\r\n        partyId = requireArguments().getInt(\"partyId\")\r\n        latitude = requireArguments().getDouble(\"latitude\", latitude)\r\n        longitude = requireArguments().getDouble(\"longitude\", longitude)\r\n        matchingStatus = requireArguments().getString(\"matchingStatus\")\r\n        maxMatching = requireArguments().getInt(\"maxMatching\")\r\n        orderTime = requireArguments().getString(\"orderTime\")\r\n        storeUrl = requireArguments().getString(\"storeUrl\")\r\n        title = requireArguments().getString(\"title\")\r\n        updatedAt = requireArguments().getString(\"updatedAt\")\r\n\r\n        initListener()\r\n\r\n        dialog?.window?.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT)) // 배경 투명하게 만들어줘야 둥근 테두리가 보인다.\r\n        dialog?.window?.setGravity(Gravity.TOP or Gravity.RIGHT)\r\n        dialog?.window?.setWindowAnimations(R.style.AnimationPopupStyle)\r\n        return binding.root\r\n    }\r\n\r\n    override fun onResume() {\r\n        super.onResume()\r\n        val width = resources.getDimensionPixelSize(R.dimen.party_popup_width)\r\n        val height = resources.getDimensionPixelSize(R.dimen.party_my_popup_height)\r\n        dialog?.window?.setLayout(width, height)\r\n    }\r\n\r\n    interface PopUpdateClickListener{\r\n        //TODO: 뷰모델 이용하면서 사실 여기서 매개변수로 안넘겨줘도 ACTIVITY에서 값 알 수 있어..\r\n        //TODO: 근데 이걸 하는 이유는 정보 갱신을 위함.\r\n        fun onPopUpdateClicked()\r\n    }\r\n\r\n    override fun onAttach(context: Context) {\r\n        super.onAttach(context)\r\n        UpdateClickListener = requireParentFragment() as PopUpdateClickListener\r\n    }\r\n\r\n    override fun onDetach() {\r\n        super.onDetach()\r\n        UpdateClickListener = null\r\n    }\r\n\r\n    private fun initListener() {\r\n        binding.deliveryOptionUpdateTv.setOnClickListener {\r\n            // 수정하기\r\n            UpdateClickListener?.onPopUpdateClicked()\r\n            this.dismiss()\r\n\r\n            val transaction: FragmentTransaction = (context as MainActivity).supportFragmentManager.beginTransaction()\r\n\r\n            val bundle = Bundle()\r\n            bundle.putBoolean(\"authorStatus\", authorStatus!!)\r\n            bundle.putString(\"chief\", chief)\r\n            bundle.putString(\"chiefProfileImgUrl\", chiefProfileImgUrl)\r\n            bundle.putString(\"content\", content)\r\n            bundle.putInt(\"currentMatching\", currentMatching)\r\n            bundle.putInt(\"dormitory\", dormitory)\r\n            bundle.putString(\"foodCategory\", foodCategory)\r\n            bundle.putBoolean(\"hashTag\", hashTag!!)\r\n            bundle.putInt(\"partyId\", partyId)\r\n            bundle.putDouble(\"latitude\", latitude)\r\n            bundle.putDouble(\"longitude\", longitude)\r\n            bundle.putString(\"matchingStatus\", matchingStatus)\r\n            bundle.putInt(\"maxMatching\", maxMatching)\r\n            bundle.putString(\"orderTime\", orderTime)\r\n            bundle.putString(\"storeUrl\", storeUrl)\r\n            bundle.putString(\"title\", title)\r\n            bundle.putString(\"updatedAt\", updatedAt)\r\n\r\n            val partyUpdateFragment = PartyUpdateFragment()\r\n            partyUpdateFragment.arguments = bundle\r\n\r\n            transaction.addToBackStack(\"partyUpdate\").replace(R.id.main_frm, partyUpdateFragment).commit()\r\n        }\r\n\r\n        binding.deliveryOptionDeleteTv.setOnClickListener {\r\n            // 삭제하기 팝업으로 이동\r\n            this.dismiss()\r\n\r\n            val bundle = Bundle()\r\n            bundle.putInt(\"partyId\", partyId!!)\r\n\r\n            var dialogFragment = DialogPartyDelete()\r\n            dialogFragment.arguments = bundle\r\n            dialogFragment.show(childFragmentManager, \"DialogPartyDelete\")\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/geeksasaeng/Home/Party/DialogDeliveryOptionMyPopup.kt b/app/src/main/java/com/example/geeksasaeng/Home/Party/DialogDeliveryOptionMyPopup.kt
--- a/app/src/main/java/com/example/geeksasaeng/Home/Party/DialogDeliveryOptionMyPopup.kt	(revision 9a6d2fb73b6b97446c2444eee7761ce69ba150fe)
+++ b/app/src/main/java/com/example/geeksasaeng/Home/Party/DialogDeliveryOptionMyPopup.kt	(date 1659339260943)
@@ -137,6 +137,7 @@
 
         binding.deliveryOptionDeleteTv.setOnClickListener {
             // 삭제하기 팝업으로 이동
+            Log.d("delete", "삭제하기 클리됨")
             this.dismiss()
 
             val bundle = Bundle()
@@ -144,7 +145,7 @@
 
             var dialogFragment = DialogPartyDelete()
             dialogFragment.arguments = bundle
-            dialogFragment.show(childFragmentManager, "DialogPartyDelete")
+            dialogFragment.show(parentFragmentManager, "DialogPartyDelete") //childeFragmentManager일때는 다이얼로그가 안떠서 parentFragmentManger로 수정완료! 근데 why지? 루나는 아려나..?
         }
     }
 }
\ No newline at end of file
